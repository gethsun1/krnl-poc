{"id":"ce3047b5f0aa55b45f2bc154beb298cf","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@oasisprotocol/sapphire-contracts/contracts/EthereumUtils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n\npragma solidity ^0.8.0;\n\nimport {Sapphire} from \"./Sapphire.sol\";\n\nstruct SignatureRSV {\n    bytes32 r;\n    bytes32 s;\n    uint256 v;\n}\n\nlibrary EthereumUtils {\n    uint256 internal constant K256_P =\n        0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f;\n\n    // (p+1)//4\n    uint256 internal constant K256_P_PLUS_1_OVER_4 =\n        0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffbfffff0c;\n\n    address internal constant PRECOMPILE_BIGMODEXP = address(0x5);\n\n    error expmod_Error();\n\n    function expmod(\n        uint256 base,\n        uint256 exponent,\n        uint256 modulus\n    ) internal view returns (uint256 out) {\n        (bool success, bytes memory result) = PRECOMPILE_BIGMODEXP.staticcall(\n            abi.encodePacked(\n                uint256(0x20), // length of base\n                uint256(0x20), // length of exponent\n                uint256(0x20), // length of modulus\n                base,\n                exponent,\n                modulus\n            )\n        );\n\n        if (!success) revert expmod_Error();\n\n        out = uint256(bytes32(result));\n    }\n\n    error k256DeriveY_Invalid_Prefix_Error();\n\n    /**\n     * @notice Recover Y coordinate from X coordinate and sign bit.\n     * @param prefix 0x02 or 0x03 indicates sign bit of compressed point.\n     * @param x X coordinate.\n     */\n    function k256DeriveY(uint8 prefix, uint256 x)\n        internal\n        view\n        returns (uint256 y)\n    {\n        if (prefix != 0x02 && prefix != 0x03)\n            revert k256DeriveY_Invalid_Prefix_Error();\n\n        // x^3 + ax + b, where a=0, b=7\n        y = addmod(mulmod(x, mulmod(x, x, K256_P), K256_P), 7, K256_P);\n\n        // find square root of quadratic residue\n        y = expmod(y, K256_P_PLUS_1_OVER_4, K256_P);\n\n        // negate y if indicated by sign bit\n        if ((y + prefix) % 2 != 0) {\n            y = K256_P - y;\n        }\n    }\n\n    error k256Decompress_Invalid_Length_Error();\n\n    /**\n     * @notice Decompress SEC P256 k1 point.\n     * @param pk 33 byte compressed public key.\n     * @return x X coordinate.\n     * @return y Y coordinate.\n     */\n    function k256Decompress(bytes memory pk)\n        internal\n        view\n        returns (uint256 x, uint256 y)\n    {\n        if (pk.length != 33) revert k256Decompress_Invalid_Length_Error();\n        assembly {\n            // skip 32 byte length prefix, plus one byte sign prefix\n            x := mload(add(pk, 33))\n        }\n        y = k256DeriveY(uint8(pk[0]), x);\n    }\n\n    function k256PubkeyToEthereumAddress(bytes memory pubkey)\n        internal\n        view\n        returns (address)\n    {\n        (uint256 x, uint256 y) = k256Decompress(pubkey);\n        return toEthereumAddress(x, y);\n    }\n\n    /**\n     * @notice Convert SEC P256 k1 curve point to Ethereum address.\n     * @param x X coordinate.\n     * @param y Y coordinate.\n     * @custom:see https://gavwood.com/paper.pdf (pp. 212)\n     */\n    function toEthereumAddress(uint256 x, uint256 y)\n        internal\n        pure\n        returns (address)\n    {\n        bytes32 digest = keccak256(abi.encodePacked(x, y));\n\n        return address(uint160((uint256(digest) << 96) >> 96));\n    }\n\n    error DER_Split_Error();\n\n    /**\n     * @notice Extracts the `r` and `s` parameters from a DER encoded ECDSA\n     * signature.\n     *\n     * The signature is an ASN1 encoded SEQUENCE of the variable length `r` and\n     * `s` INTEGERs.\n     *\n     * ```\n     * | 0x30 | len(z) | 0x02 | len(r) |  r   | 0x02 | len(s) |  s   | = hex value\n     * |  1   |   1    |   1  |   1    | 1-33 |  1   |   1    | 1-33 | = byte length\n     * ```\n     *\n     * If the highest bit of either `r` or `s` is set, it will be prefix padded\n     * with a zero byte. There is exponentially decreasing probability that\n     * either `r` or `s` will be below 32 bytes. There is a very high\n     * probability that either `r` or `s` will be 33 bytes. This function only\n     * works if either `r` or `s` are 256bits or lower.\n     *\n     * @param der DER encoded ECDSA signature\n     * @return rsv ECDSA R point X coordinate, and S scalar\n     * @custom:see https://bitcoin.stackexchange.com/questions/58853/how-do-you-figure-out-the-r-and-s-out-of-a-signature-using-python\n     */\n    function splitDERSignature(bytes memory der)\n        internal\n        pure\n        returns (SignatureRSV memory rsv)\n    {\n        if (der.length < 8) revert DER_Split_Error();\n        if (der[0] != 0x30) revert DER_Split_Error();\n        if (der[2] != 0x02) revert DER_Split_Error();\n\n        uint256 zLen = uint8(der[1]);\n        uint256 rLen = uint8(der[3]);\n        if (rLen > 33) revert DER_Split_Error();\n\n        uint256 sOffset = 4 + rLen;\n        uint256 sLen = uint8(der[sOffset + 1]);\n        if (sLen > 33) revert DER_Split_Error();\n        if (der[sOffset] != 0x02) revert DER_Split_Error();\n\n        if (rLen + sLen + 4 != zLen) revert DER_Split_Error();\n        if (der.length != zLen + 2) revert DER_Split_Error();\n\n        sOffset += 2;\n        uint256 rOffset = 4;\n\n        if (rLen == 33) {\n            if (der[4] != 0x00) revert DER_Split_Error();\n            rOffset += 1;\n            rLen -= 1;\n        }\n\n        if (sLen == 33) {\n            if (der[sOffset] != 0x00) revert DER_Split_Error();\n            sOffset += 1;\n            sLen -= 1;\n        }\n\n        bytes32 r;\n        bytes32 s;\n\n        assembly {\n            r := mload(add(der, add(32, rOffset)))\n            s := mload(add(der, add(32, sOffset)))\n        }\n\n        // When length of either `r` or `s` is below 32 bytes\n        // the 32 byte `mload` will suffix it with unknown stuff\n        // shift right to remove the unknown stuff, prefixing with zeros instead\n\n        if (rLen < 32) {\n            r >>= 8 * (32 - rLen);\n        }\n\n        if (sLen < 32) {\n            s >>= 8 * (32 - sLen);\n        }\n\n        rsv.r = r;\n        rsv.s = s;\n    }\n\n    error recoverV_Error();\n\n    function recoverV(\n        address pubkeyAddr,\n        bytes32 digest,\n        SignatureRSV memory rsv\n    ) internal pure {\n        rsv.v = 27;\n\n        if (ecrecover(digest, uint8(rsv.v), rsv.r, rsv.s) != pubkeyAddr) {\n            rsv.v = 28;\n\n            if (ecrecover(digest, uint8(rsv.v), rsv.r, rsv.s) != pubkeyAddr) {\n                revert recoverV_Error();\n            }\n        }\n    }\n\n    /**\n     * @notice Convert a Secp256k1PrehashedKeccak256 signature to one accepted\n     * by ecrecover.\n     * @param pubkey 33 byte compressed public key.\n     * @param digest 32 byte pre-hashed message digest.\n     * @param signature ASN.1 DER encoded signature, as returned from\n     * [`Sapphire.sign`](../Sapphire.sol/library.Sapphire.md#sign).\n     * @return pubkeyAddr 20 byte Ethereum address.\n     * @return rsv Ethereum EcDSA RSV signature values.\n     * @custom:see https://gavwood.com/paper.pdf (pp. 206)\n     */\n    function toEthereumSignature(\n        bytes memory pubkey,\n        bytes32 digest,\n        bytes memory signature\n    ) internal view returns (address pubkeyAddr, SignatureRSV memory rsv) {\n        pubkeyAddr = k256PubkeyToEthereumAddress(pubkey);\n\n        rsv = splitDERSignature(signature);\n\n        recoverV(pubkeyAddr, digest, rsv);\n    }\n\n    function sign(\n        address pubkeyAddr,\n        bytes32 secretKey,\n        bytes32 digest\n    ) internal view returns (SignatureRSV memory rsv) {\n        bytes memory signature = Sapphire.sign(\n            Sapphire.SigningAlg.Secp256k1PrehashedKeccak256,\n            abi.encodePacked(secretKey),\n            abi.encodePacked(digest),\n            \"\"\n        );\n\n        rsv = splitDERSignature(signature);\n\n        recoverV(pubkeyAddr, digest, rsv);\n    }\n\n    /**\n     * @notice Generate an Ethereum compatible SEC P256 k1 keypair and\n     * corresponding public address.\n     * @return pubkeyAddr Ethereum address.\n     * @return secretKey Secret key used for signing.\n     */\n    function generateKeypair()\n        internal\n        view\n        returns (address pubkeyAddr, bytes32 secretKey)\n    {\n        bytes memory randSeed = Sapphire.randomBytes(32, \"\");\n\n        secretKey = bytes32(randSeed);\n\n        (bytes memory pk, ) = Sapphire.generateSigningKeyPair(\n            Sapphire.SigningAlg.Secp256k1PrehashedKeccak256,\n            randSeed\n        );\n\n        pubkeyAddr = k256PubkeyToEthereumAddress(pk);\n    }\n}\n"},"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/**\n * @title Sapphire\n * @notice This library provides a number of convenient wrappers for\n * cryptographic operations such as the x25519 key derivation, Deoxys-II-based\n * encryption and decryption, signing key generation, message digest signing and\n * verification, gas padding and hashing.\n *\n * Most of the mentioned functions are implemented as Sapphire's precompiles and\n * are cheap to call.\n *\n * #### Calling Precompiles Manually\n *\n * You can override the wrappers and call Sapphire precompiles by dispatching\n * calls to specific well-known contract addresses, as described below. The\n * __Precompile address__ section of each function will show you the address\n * of the corresponding precompile.\n *\n * Input parameters should be packed into a contiguous memory region with each\n * chunk of data padded to 32 bytes as usual. The recommended way to construct\n * parameter byte sequences in Solidity is with `abi.encode` and `abi.decode`,\n * which will transparently handle things like putting `bytes` lengths in the\n * correct position.\n */\nlibrary Sapphire {\n    // Oasis-specific, confidential precompiles\n    address internal constant RANDOM_BYTES =\n        0x0100000000000000000000000000000000000001;\n    address internal constant DERIVE_KEY =\n        0x0100000000000000000000000000000000000002;\n    address internal constant ENCRYPT =\n        0x0100000000000000000000000000000000000003;\n    address internal constant DECRYPT =\n        0x0100000000000000000000000000000000000004;\n    address internal constant GENERATE_SIGNING_KEYPAIR =\n        0x0100000000000000000000000000000000000005;\n    address internal constant SIGN_DIGEST =\n        0x0100000000000000000000000000000000000006;\n    address internal constant VERIFY_DIGEST =\n        0x0100000000000000000000000000000000000007;\n    address internal constant CURVE25519_PUBLIC_KEY =\n        0x0100000000000000000000000000000000000008;\n    address internal constant GAS_USED =\n        0x0100000000000000000000000000000000000009;\n    address internal constant PAD_GAS =\n        0x010000000000000000000000000000000000000a;\n\n    // Oasis-specific, general precompiles\n    address internal constant SHA512_256 =\n        0x0100000000000000000000000000000000000101;\n    address internal constant SHA512 =\n        0x0100000000000000000000000000000000000102;\n    address internal constant SHA384 =\n        0x0100000000000000000000000000000000000104;\n\n    type Curve25519PublicKey is bytes32;\n    type Curve25519SecretKey is bytes32;\n\n    enum SigningAlg {\n        /// Ed25519 signature over the provided message using SHA-512/265 with a domain separator.\n        /// Can be used to sign transactions for the Oasis consensus layer and SDK paratimes.\n        Ed25519Oasis,\n        /// Ed25519 signature over the provided message.\n        Ed25519Pure,\n        /// Ed25519 signature over the provided prehashed SHA-512 digest.\n        Ed25519PrehashedSha512,\n        /// Secp256k1 signature over the provided message using SHA-512/256 with a domain separator.\n        /// Can be used to sign transactions for the Oasis consensus layer and SDK paratimes.\n        Secp256k1Oasis,\n        /// Secp256k1 over the provided Keccak256 digest.\n        /// Can be used to sign transactions for Ethereum-compatible networks.\n        Secp256k1PrehashedKeccak256,\n        /// Secp256k1 signature over the provided SHA-256 digest.\n        Secp256k1PrehashedSha256,\n        /// Sr25519 signature over the provided message.\n        Sr25519,\n        /// Secp256r1 signature over the provided SHA-256 digest.\n        Secp256r1PrehashedSha256,\n        /// Secp384r1 signature over the provided SHA-384 digest.\n        Secp384r1PrehashedSha384\n    }\n\n    /**\n     * @notice Generate `num_bytes` pseudo-random bytes, with an optional\n     * personalization string (`pers`) added into the hashing algorithm to\n     * increase domain separation when needed.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000001`\n     *\n     * #### Gas cost\n     *\n     * 10,000 minimum plus 240 per output word plus 60 per word of the\n     * personalization string.\n     *\n     * #### Implementation details\n     *\n     * The mode (e.g. simulation or \"view call\" vs transaction execution) is fed\n     * to TupleHash (among other block-dependent components) to derive the \"key\n     * id\", which is then used to derive a per-block VRF key from\n     * epoch-ephemeral entropy (using KMAC256 and cSHAKE) so a different key\n     * id will result in a unique per-block VRF key. This per-block VRF key is\n     * then used to create the per-block root RNG which is then used to derive\n     * domain-separated (using Merlin transcripts) per-transaction random RNGs\n     * which are then exposed via this precompile. The KMAC, cSHAKE and\n     * TupleHash algorithms are SHA-3 derived functions defined in [NIST\n     * Special Publication 800-185](https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-185.pdf).\n     *\n     * #### DANGER: Prior to Sapphire ParaTime 0.6.0\n     *\n     * All view queries and simulated transactions (via `eth_call`) would\n     * receive the same entropy in-between blocks if they use the same\n     * `num_bytes` and `pers` parameters. If your contract requires\n     * confidentiality you should generate a secret in the constructor to be\n     * used with view calls:\n     *\n     * ```solidity\n     * Sapphire.randomBytes(64, abi.encodePacked(msg.sender, this.perContactSecret));\n     * ```\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes memory randomPad = Sapphire.randomBytes(64, \"\");\n     * ```\n     *\n     * @param numBytes The number of bytes to return.\n     * @param pers An optional personalization string to increase domain\n     *        separation.\n     * @return The random bytes. If the number of bytes requested is too large\n     *         (over 1024), a smaller amount (1024) will be returned.\n     */\n    function randomBytes(uint256 numBytes, bytes memory pers)\n        internal\n        view\n        returns (bytes memory)\n    {\n        (bool success, bytes memory entropy) = RANDOM_BYTES.staticcall(\n            abi.encode(numBytes, pers)\n        );\n        require(success, \"randomBytes: failed\");\n        return entropy;\n    }\n\n    /**\n     * @notice Generates a Curve25519 keypair.\n     * @param pers An optional personalization string used to add domain\n     * separation.\n     * @return pk The Curve25519 public key. Useful for key exchange.\n     * @return sk The Curve25519 secret key. Pairs well with\n     * [deriveSymmetricKey](#derivesymmetrickey).\n     */\n    function generateCurve25519KeyPair(bytes memory pers)\n        internal\n        view\n        returns (Curve25519PublicKey pk, Curve25519SecretKey sk)\n    {\n        bytes memory scalar = randomBytes(32, pers);\n        // Twiddle some bits, as per RFC 7748 §5.\n        scalar[0] &= 0xf8; // Make it a multiple of 8 to avoid small subgroup attacks.\n        scalar[31] &= 0x7f; // Clamp to < 2^255 - 19\n        scalar[31] |= 0x40; // Clamp to >= 2^254\n        (bool success, bytes memory pkBytes) = CURVE25519_PUBLIC_KEY.staticcall(\n            scalar\n        );\n        require(success, \"gen curve25519 pk: failed\");\n        return (\n            Curve25519PublicKey.wrap(bytes32(pkBytes)),\n            Curve25519SecretKey.wrap(bytes32(scalar))\n        );\n    }\n\n    /**\n     * @notice Derive a symmetric key from a pair of keys using x25519.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000002`\n     *\n     * #### Gas cost\n     *\n     * 100,000\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes32 publicKey = ... ;\n     * bytes32 privateKey = ... ;\n     * bytes32 symmetric = Sapphire.deriveSymmetricKey(publicKey, privateKey);\n     * ```\n     *\n     * @param peerPublicKey The peer's public key.\n     * @param secretKey Your secret key.\n     * @return A derived symmetric key.\n     */\n    function deriveSymmetricKey(\n        Curve25519PublicKey peerPublicKey,\n        Curve25519SecretKey secretKey\n    ) internal view returns (bytes32) {\n        (bool success, bytes memory symmetric) = DERIVE_KEY.staticcall(\n            abi.encode(peerPublicKey, secretKey)\n        );\n        require(success, \"deriveSymmetricKey: failed\");\n        return bytes32(symmetric);\n    }\n\n    /**\n     * @notice Encrypt and authenticate the plaintext and additional data using\n     * DeoxysII.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000003`\n     *\n     * #### Gas cost\n     *\n     * 50,000 minimum plus 100 per word of input\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes32 key = ... ;\n     * bytes32 nonce = ... ;\n     * bytes memory text = \"plain text\";\n     * bytes memory ad = \"additional data\";\n     * bytes memory encrypted = Sapphire.encrypt(key, nonce, text, ad);\n     * bytes memory decrypted = Sapphire.decrypt(key, nonce, encrypted, ad);\n     * ```\n     *\n     * @param key The key to use for encryption.\n     * @param nonce The nonce. Note that only the first 15 bytes of this\n     * parameter are used.\n     * @param plaintext The plaintext to encrypt and authenticate.\n     * @param additionalData The additional data to authenticate.\n     * @return The ciphertext with appended auth tag.\n     */\n    function encrypt(\n        bytes32 key,\n        bytes32 nonce,\n        bytes memory plaintext,\n        bytes memory additionalData\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory ciphertext) = ENCRYPT.staticcall(\n            abi.encode(key, nonce, plaintext, additionalData)\n        );\n        require(success, \"encrypt: failed\");\n        return ciphertext;\n    }\n\n    /**\n     * @notice Decrypt and authenticate the ciphertext and additional data using\n     * DeoxysII. Reverts if the auth tag is incorrect.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000004`\n     *\n     * #### Gas cost\n     *\n     * 50,000 minimum plus 100 per word of input\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes32 key = ... ;\n     * bytes32 nonce = ... ;\n     * bytes memory text = \"plain text\";\n     * bytes memory ad = \"additional data\";\n     * bytes memory encrypted = Sapphire.encrypt(key, nonce, text, ad);\n     * bytes memory decrypted = Sapphire.decrypt(key, nonce, encrypted, ad);\n     * ```\n     *\n     * @param key The key to use for decryption.\n     * @param nonce The nonce. Note that only the first 15 bytes of this\n     * parameter are used.\n     * @param ciphertext The ciphertext with tag to decrypt and authenticate.\n     * @param additionalData The additional data to authenticate against the\n     * ciphertext.\n     * @return The original plaintext.\n     */\n    function decrypt(\n        bytes32 key,\n        bytes32 nonce,\n        bytes memory ciphertext,\n        bytes memory additionalData\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory plaintext) = DECRYPT.staticcall(\n            abi.encode(key, nonce, ciphertext, additionalData)\n        );\n        require(success, \"decrypt: failed\");\n        return plaintext;\n    }\n\n    /**\n     * @notice Generate a public/private key pair using the specified method and\n     * seed. The available methods are items in the\n     * [`Sapphire.SigningAlg`](#signingalg) enum. Note, however, that the\n     * generation method ignores subvariants, so all three Ed25519-based are\n     * equivalent, and all Secp256k1 & Secp256r1 based methods are equivalent.\n     * Sr25519 is not available and will return an error.\n     *\n     * #### Precompile address\n     * `0x0100000000000000000000000000000000000005`\n     *\n     * #### Gas Cost\n     *\n     * ##### Ed25519: 1,000 gas\n     *\n     * - `0` (`Ed25519Oasis`)\n     * - `1` (`Ed25519Pure`)\n     * - `2` (`Ed25519PrehashedSha512`)\n     *\n     * ##### Secp256k1: 1,500 gas.\n     * - `3` (`Secp256k1Oasis`)\n     * - `4` (`Secp256k1PrehashedKeccak256`)\n     * - `5` (`Secp256k1PrehashedSha256`)\n     *\n     * ##### Secp256r1: 4,000 gas\n     * - `7` (`Secp256r1PrehashedSha256`)\n     *\n     * #### Public Key Format\n     *\n     * ##### Ed25519\n     *\n     * 32 bytes\n     *\n     * ##### Secp256k1 & Secp256r1\n     *\n     * 33 bytes, compressed format (`0x02` or `0x03` prefix, then 32 byte X\n     * coordinate).\n     *\n     * #### Example\n     *\n     * ```solidity\n     * bytes memory seed = hex\"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\";\n     * bytes memory publicKey;\n     * bytes memory privateKey;\n     * (publicKey, privateKey) = Sapphire.generateSigningKeyPair(Sapphire.SigningAlg.Ed25519Pure, seed);\n     * ```\n     *\n     * @param alg The signing alg for which to generate a keypair.\n     * @param seed The seed to use for generating the key pair. You can use the\n     * `randomBytes` method if you don't already have a seed.\n     * @return publicKey The public half of the keypair.\n     * @return secretKey The secret half of the keypair.\n     */\n    function generateSigningKeyPair(SigningAlg alg, bytes memory seed)\n        internal\n        view\n        returns (bytes memory publicKey, bytes memory secretKey)\n    {\n        (bool success, bytes memory keypair) = GENERATE_SIGNING_KEYPAIR\n            .staticcall(abi.encode(alg, seed));\n        require(success, \"gen signing keypair: failed\");\n        return abi.decode(keypair, (bytes, bytes));\n    }\n\n    /**\n     * @notice Sign a message within the provided context using the specified\n     * algorithm, and return the signature. The `context_or_digest` and\n     * `messages` parameters change in meaning slightly depending on the method\n     * requested. For methods that take a context in addition to the message you\n     * must pass the context in the `context_or_digest` parameter and use\n     * `message` as expected. For methods that take a pre-existing hash of the\n     * message, pass that in `context_or_digest` and leave `message` empty.\n     * Specifically the `Ed25519Oasis` and `Secp256k1Oasis` variants take both a\n     * context and a message (each are variable length `bytes`), the context\n     * serves as a domain separator.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000006`\n     *\n     * #### Gas cost\n     *\n     * See below for the method-dependent base cost, plus 8 gas per 32 bytes of\n     * context and message except digest.\n     *\n     * #### Signing algorithms\n     *\n     * - `0` (`Ed25519Oasis`): 1,500 gas, variable length context and message.\n     * - `1` (`Ed25519Pure`): 1,500 gas, empty context, variable length message.\n     * - `2` (`Ed25519PrehashedSha512`): 1,500 gas, pre-existing SHA-512 hash\n     *   (64 bytes) as context, empty message.\n     * - `3` (`Secp256k1Oasis`): 3,000 gas, variable length context and message\n     * - `4` (`Secp256k1PrehashedKeccak256`): 3,000 gas, pre-existing hash\n     *   (32 bytes) as context, empty message.\n     * - `5` (`Secp256k1PrehashedSha256`): 3,000 gas, pre-existing hash (32\n     *   bytes) as context, empty message.\n     * - `7` (`Secp256r1PrehashedSha256`): 9,000 gas, pre-existing hash (32\n     *   bytes) as context, empty message.\n     *\n     * #### Example\n     *\n     * ```solidity\n     * Sapphire.SigningAlg alg = Sapphire.SigningAlg.Ed25519Pure;\n     * bytes memory pk;\n     * bytes memory sk;\n     * (pk, sk) = Sapphire.generateSigningKeyPair(alg, Sapphire.randomBytes(32, \"\"));\n     * bytes memory signature = Sapphire.sign(alg, sk, \"\", \"signed message\");\n     * ```\n     *\n     * @param alg The signing algorithm to use.\n     * @param secretKey The secret key to use for signing. The key must be valid\n     * for use with the requested algorithm.\n     * @param contextOrHash Domain-Separator Context, or precomputed hash bytes.\n     * @param message Message to sign, should be zero-length if precomputed hash\n     * given.\n     * @return signature The resulting signature.\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_sign\n     */\n    function sign(\n        SigningAlg alg,\n        bytes memory secretKey,\n        bytes memory contextOrHash,\n        bytes memory message\n    ) internal view returns (bytes memory signature) {\n        (bool success, bytes memory sig) = SIGN_DIGEST.staticcall(\n            abi.encode(alg, secretKey, contextOrHash, message)\n        );\n        require(success, \"sign: failed\");\n        return sig;\n    }\n\n    /**\n     * @notice Verifies that the provided digest was signed with using the\n     * secret key corresponding to the provided private key and the specified\n     * signing algorithm.\n     *\n     * The `method`, `context_or_digest` and `message` parameters have the same\n     * meaning as described above in the [sign()](#sign) function.\n     *\n     * #### Precompile address\n     *\n     * `0x0100000000000000000000000000000000000007`\n     *\n     * #### Gas cost\n     *\n     * The algorithm-specific base cost below, with an additional **8 gas per\n     * 32 bytes** of `context` and `message` for the `Ed25519Oasis`,\n     * `Ed25519Pure` and `Secp256k1Oasis` algorithms.\n     *\n     * - `0` (`Ed25519Oasis`): 2,000 gas\n     * - `1` (`Ed25519Pure`): 2,000 gas\n     * - `2` (`Ed25519PrehashedSha512`): 2,000 gas\n     * - `3` (`Secp256k1Oasis`): 3,000 gas\n     * - `4` (`Secp256k1PrehashedKeccak256`): 3,000 gas\n     * - `5` (`Secp256k1PrehashedSha256`): 3,000 gas\n     * - `7` (`Secp256r1PrehashedSha256`): 7,900 gas\n     *\n     * #### Example\n     *\n     * ```solidity\n     * Sapphire.SigningAlg alg = Sapphire.SigningAlg.Secp256k1PrehashedKeccak256;\n     * bytes memory pk;\n     * bytes memory sk;\n     * bytes memory digest = abi.encodePacked(keccak256(\"signed message\"));\n     * (pk, sk) = Sapphire.generateSigningKeyPair(alg, Sapphire.randomBytes(32, \"\"));\n     * bytes memory signature = Sapphire.sign(alg, sk, digest, \"\");\n     * require( Sapphire.verify(alg, pk, digest, \"\", signature) );\n     * ```\n     *\n     * @param alg The signing algorithm by which the signature was generated.\n     * @param publicKey The public key against which to check the signature.\n     * @param contextOrHash Domain-Separator Context, or precomputed hash bytes\n     * @param message The hash of the message that was signed, should be\n     * zero-length if precomputed hash was given.\n     * @param signature The signature to check.\n     * @return verified Whether the signature is valid for the given parameters.\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_verify\n     */\n    function verify(\n        SigningAlg alg,\n        bytes memory publicKey,\n        bytes memory contextOrHash,\n        bytes memory message,\n        bytes memory signature\n    ) internal view returns (bool verified) {\n        (bool success, bytes memory v) = VERIFY_DIGEST.staticcall(\n            abi.encode(alg, publicKey, contextOrHash, message, signature)\n        );\n        require(success, \"verify: failed\");\n        return abi.decode(v, (bool));\n    }\n\n    /**\n     * @notice Set the current transactions gas usage to a specific amount\n     * @dev Will cause a reversion if the current usage is more than the amount.\n     * @param toAmount Gas usage will be set to this amount\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/gas.rs :: call_pad_gas\n     *\n     */\n    function padGas(uint128 toAmount) internal view {\n        (bool success, ) = PAD_GAS.staticcall(abi.encode(toAmount));\n        require(success, \"verify: failed\");\n    }\n\n    /**\n     * @notice Returns the amount of gas currently used by the transaction\n     * @custom:see @oasisprotocol/oasis-sdk :: precompile/gas.rs :: call_gas_used\n     */\n    function gasUsed() internal view returns (uint64) {\n        (bool success, bytes memory v) = GAS_USED.staticcall(\"\");\n        require(success, \"gasused: failed\");\n        return abi.decode(v, (uint64));\n    }\n}\n\n/**\n * @notice Hash the input data with SHA-512/256, according to\n * [NIST.FIPS.180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n *\n * #### Precompile address\n *\n * `0x0100000000000000000000000000000000000102`\n *\n * #### Gas cost\n *\n * 115 gas, then 13 gas per word\n *\n * #### Example\n *\n * ```solidity\n * bytes32 result = sha512_256(abi.encodePacked(\"input data\"));\n * ```\n *\n * #### Warning: SHA-512 vs SHA-512/256 Length-Extension Attacks\n *\n * [SHA-512](function.sha512.md#sha512) is vulnerable to [length-extension\n * attacks](https://en.wikipedia.org/wiki/Length_extension_attack), which are\n * relevant if you are computing the hash of a secret message. The\n * [SHA-512/256](function.sha512_256.md#sha512_256) variant is **not**\n * vulnerable to length-extension attacks.\n *\n * @param input Bytes to hash.\n * @return result 32 byte digest.\n * @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n * @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha512_256\n */\nfunction sha512_256(bytes memory input) view returns (bytes32 result) {\n    (bool success, bytes memory output) = Sapphire.SHA512_256.staticcall(input);\n\n    require(success, \"sha512_256\");\n\n    return bytes32(output);\n}\n\n/**\n * @notice Hash the input data with SHA-512, according to\n * [NIST.FIPS.180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf)\n *\n * #### Precompile address\n *\n * `0x0100000000000000000000000000000000000101`\n *\n * #### Warning: SHA-512 vs SHA-512/256 Length-Extension Attacks\n *\n * [SHA-512](function.sha512.md#sha512) is vulnerable to [length-extension\n * attacks](https://en.wikipedia.org/wiki/Length_extension_attack), which are\n * relevant if you are computing the hash of a secret message. The\n * [SHA-512/256](function.sha512_256.md#sha512_256) variant is **not**\n * vulnerable to length-extension attacks.\n *\n * #### Gas Cost\n *\n * 115 gas, then 13 gas per word\n *\n * #### Example\n *\n * ```solidity\n * bytes memory result = sha512(abi.encodePacked(\"input data\"));\n * ```\n *\n * @param input Bytes to hash.\n * @return output 64 byte digest.\n * @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n * @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha512\n */\nfunction sha512(bytes memory input) view returns (bytes memory output) {\n    bool success;\n\n    (success, output) = Sapphire.SHA512.staticcall(input);\n\n    require(success, \"sha512\");\n}\n\n/**\n * @notice Hash the input data with SHA-384.\n * @param input Bytes to hash.\n * @return output 48 byte digest.\n * @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n * @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha384\n */\nfunction sha384(bytes memory input) view returns (bytes memory output) {\n    bool success;\n\n    (success, output) = Sapphire.SHA384.staticcall(input);\n\n    require(success, \"sha384\");\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/CustomOpinionMaker.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\ncontract CustomOpinionMaker is Ownable {\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    struct Execution {\n        uint kernelId;\n        bytes result;\n        bytes proof;\n        bool isValidated;\n    }\n\n    struct KernelResult {\n        address addr;\n        bool flag;\n        string name;\n        uint score;\n    }\n\n    // Function to get an opinion based on execution plans\n    function getOpinion(bytes calldata executionPlan, uint kernelId)\n        external\n        view\n        onlyOwner\n        returns (bool opinion, bool isFinalized, bytes memory updatedPlan)\n    {\n        (opinion, isFinalized, updatedPlan) = _validateExecution(executionPlan, kernelId);\n    }\n\n    // Internal validation logic\n    function _validateExecution(bytes calldata executionPlan, uint kernelId)\n        private\n        pure\n        returns (bool opinion, bool isFinalized, bytes memory updatedPlan)\n    {\n        Execution[] memory executions = abi.decode(executionPlan, (Execution[]));\n\n        for (uint i = 0; i < executions.length; i++) {\n            Execution memory execution = executions[i];\n            if (execution.kernelId == kernelId) {\n                if (kernelId == 1) {\n                    // Custom Criteria for Kernel 1\n                    (bool success, uint value) = abi.decode(execution.result, (bool, uint));\n                    (bool proofValid) = abi.decode(execution.proof, (bool));\n                    if (success && value > 100 && proofValid) {\n                        opinion = true;\n                    } else {\n                        isFinalized = true;\n                    }\n                } else if (kernelId == 2) {\n                    // Custom Criteria for Kernel 2\n                    (KernelResult memory res) = abi.decode(execution.result, (KernelResult));\n                    (bool proofValid) = abi.decode(execution.proof, (bool));\n                    if (res.flag && res.addr != address(0) && proofValid) {\n                        opinion = true;\n                    } else {\n                        isFinalized = true;\n                    }\n                }\n\n                if (i == executions.length - 1) {\n                    isFinalized = true;\n                }\n\n                executions[i].isValidated = true;\n                break;\n            }\n        }\n\n        updatedPlan = abi.encode(executions);\n    }\n}\n"},"contracts/CustomTokenAuthority.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\";\nimport \"@oasisprotocol/sapphire-contracts/contracts/EthereumUtils.sol\";\n\n    // Constructor to set initial owner and initialize keys\ncontract CustomTokenAuthority is Ownable {\n    struct Keypair {\n        bytes pubKey;\n        bytes privKey;\n    }\n\n    struct Execution {\n        uint256 kernelId;\n        bytes result;\n        bytes proof;\n        bool isValidated;\n    }\n\n    Keypair private signingKeypair;\n    Keypair private accessKeypair;\n    bytes32 private signingKeypairRetrievalPassword;\n    address private opinionMaker;\n\n    mapping(address => bool) private whitelist;\n    mapping(bytes32 => bool) private runtimeDigests;\n    mapping(uint256 => bool) private allowedKernels;\n\n    constructor(address _initialOwner, address _opinionMaker) Ownable(_initialOwner) {\n        require(_initialOwner != address(0), \"Owner address cannot be zero\");\n        require(_opinionMaker != address(0), \"Opinion maker address cannot be zero\");\n        opinionMaker = _opinionMaker;\n    }\n\n\n    // Keypair generation function\n    function generateKey() external onlyOwner {\n        bytes memory seed = Sapphire.randomBytes(32, \"\");\n        (bytes memory pubKey, bytes memory privKey) = Sapphire.generateSigningKeyPair(\n            Sapphire.SigningAlg.Secp256k1PrehashedKeccak256,\n            seed\n        );\n        signingKeypair = Keypair(pubKey, privKey);\n        accessKeypair = Keypair(pubKey, privKey); // Example - update appropriately\n    }\n\n    // Updates the opinion maker address\n    function setOpinionMaker(address newOpinionMaker) external onlyOwner {\n        require(newOpinionMaker != address(0), \"Invalid opinion maker address\");\n        opinionMaker = newOpinionMaker;\n    }\n\n    // Allows the owner to update the signing keypair\n    function setSigningKeypair(bytes calldata pubKey, bytes calldata privKey) external onlyOwner {\n        signingKeypair = Keypair(pubKey, privKey);\n    }\n\n    // Sets a password for retrieving the private signing key\n    function setSigningKeypairRetrievalPassword(string calldata password) external onlyOwner {\n        signingKeypairRetrievalPassword = keccak256(abi.encodePacked(password));\n    }\n\n    // Returns the public key and its derived Ethereum address\n    function getSigningKeypairPublicKey() external view returns (bytes memory, address) {\n        address signingKeypairAddress = EthereumUtils.k256PubkeyToEthereumAddress(signingKeypair.pubKey);\n        return (signingKeypair.pubKey, signingKeypairAddress);\n    }\n\n    // Returns the private key if the correct password is provided\n    function getSigningKeypairPrivateKey(string calldata password) external view onlyOwner returns (bytes memory) {\n        require(\n            signingKeypairRetrievalPassword == keccak256(abi.encodePacked(password)),\n            \"Invalid password\"\n        );\n        return signingKeypair.privKey;\n    }\n\n    // Adds or removes a kernel node from the whitelist\n    function setWhitelist(address kernelNodePubKey, bool isAllowed) external onlyOwner {\n        whitelist[kernelNodePubKey] = isAllowed;\n    }\n\n    // Updates the runtime digest state\n    function setRuntimeDigest(bytes32 runtimeDigest, bool isAllowed) external onlyOwner {\n        runtimeDigests[runtimeDigest] = isAllowed;\n    }\n\n    // Adds or removes an allowed kernel\n    function setKernel(uint256 kernelId, bool isAllowed) external onlyOwner {\n        allowedKernels[kernelId] = isAllowed;\n    }\n\n    // Checks if a kernel is allowed (no modifier needed)\n    function isKernelAllowed(uint256 kernelId) external view returns (bool) {\n            return allowedKernels[kernelId];\n    }\n    modifier onlyAllowedKernel(uint256 kernelId) {\n        require(allowedKernels[kernelId], \"Kernel is not allowed\");\n        _;\n    }\n\n    // Retrieves an opinion for a given kernel ID\n function getOpinion(uint256 kernelId)\n    external\n    view\n    onlyAllowedKernel(kernelId)\n    returns (bool, bool, bytes memory)\n{\n    (bool success, bytes memory data) = opinionMaker.staticcall(\n        abi.encodeWithSignature(\"getOpinion(uint256)\", kernelId)\n    );\n    require(success, \"Opinion retrieval failed\");\n\n    (bool opinion, bool isFinalized, bytes memory updatedPlan) = abi.decode(data, (bool, bool, bytes));\n    return (opinion, isFinalized, updatedPlan);\n}\n\n\n    // Signs kernel-related data and returns the results\n    function sign(\n        address senderAddress,\n        bytes calldata /* executionPlan */,\n        bytes calldata functionParams,\n        bytes calldata kernelParamObjects,\n        bytes calldata kernelResponses\n    ) external view returns (bytes memory, bytes32, bytes memory, bytes32) {\n        bytes32 functionParamsDigest = keccak256(abi.encode(functionParams));\n        bytes32 kernelParamObjectsDigest = kernelParamObjects.length > 0\n            ? keccak256(abi.encode(kernelParamObjects))\n            : bytes32(0);\n        bytes32 dataDigest = keccak256(\n            abi.encode(functionParamsDigest, kernelParamObjectsDigest, senderAddress)\n        );\n        bytes32 kernelResponsesDigest = keccak256(abi.encode(kernelResponses, senderAddress));\n\n        bytes memory kernelResponsesSignature = Sapphire.sign(\n            Sapphire.SigningAlg.Secp256k1PrehashedKeccak256,\n            abi.encodePacked(signingKeypair.privKey),\n            abi.encode(kernelResponsesDigest),\n            \"\"\n        );\n\n        bytes32 nonce = bytes32(Sapphire.randomBytes(32, \"\"));\n        bytes memory signatureToken = Sapphire.sign(\n            Sapphire.SigningAlg.Secp256k1PrehashedKeccak256,\n            abi.encodePacked(signingKeypair.privKey),\n            abi.encode(dataDigest, nonce),\n            \"\"\n        );\n\n        return (kernelResponsesSignature, kernelResponsesDigest, signatureToken, nonce);\n    }\n}\n"},"contracts/KRNL.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract KRNLTestToken is ERC20, Ownable {\n    mapping(address => bool) public whitelist_;\n    mapping(address => bool) public claimed;\n    bool public distributionStarted_;\n\n    event Whitelisted(address indexed _address);\n    event TokensClaimed(address indexed _address, uint256 amount);\n    event DistributionStarted();\n    event DistributionStopped();\n\n    // Specify custom decimals here\n    uint8 private constant CUSTOM_DECIMALS = 0;\n\n    constructor() ERC20(\"KRNL Test Token\", \"KRNL\") Ownable(msg.sender) {\n        _mint(msg.sender, 1000000); // Mint the total supply to the contract owner\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return CUSTOM_DECIMALS;\n    }\n\n    function addToWhitelist(address _address) public onlyOwner {\n        whitelist_[_address] = true;\n        emit Whitelisted(_address);\n    }\n\n    function addToWhitelistBatch(address[] calldata _addresses) public onlyOwner {\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            whitelist_[_addresses[i]] = true;\n            emit Whitelisted(_addresses[i]);\n        }\n    }\n\n    function startDistribution() public onlyOwner {\n        distributionStarted_ = true;\n        emit DistributionStarted();\n    }\n\n    function stopDistribution() public onlyOwner {\n        distributionStarted_ = false;\n        emit DistributionStopped();\n    }\n\n    function claimTokens() public {\n        require(distributionStarted_, \"Distribution not started\");\n        require(whitelist_[msg.sender], \"Not on whitelist\");\n        require(!claimed[msg.sender], \"Tokens already claimed\");\n\n        claimed[msg.sender] = true;\n        _transfer(owner(), msg.sender, 1000); // Transfer 1000 tokens to the caller\n        emit TokensClaimed(msg.sender, 1000);\n    }\n}\n"},"contracts/KrnlRegistered.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {MessageHashUtils} from \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\n\n// Struct to group the parameters\nstruct KrnlPayload {\n    bytes auth;\n    bytes kernelResponses;\n    bytes kernelParamObjects;\n}\n\n// Draft Version\ncontract KrnlRegistered is Ownable {\n    error UnauthorizedTransaction();\n\n    address public tokenAuthorityPublicKey;\n    mapping(bytes => bool) public executed;\n\n    modifier onlyAuthorized(KrnlPayload memory krnlPayload, bytes memory params) {\n        if (!_isAuthorized(krnlPayload, params)) {\n            revert UnauthorizedTransaction();\n        }\n\n        _;\n    }\n\n    constructor(address _tokenAuthorityPublicKey) Ownable(msg.sender) {\n        tokenAuthorityPublicKey = _tokenAuthorityPublicKey;\n    }\n\n    function setTokenAuthorityPublicKey(address _tokenAuthorityPublicKey) external onlyOwner {\n        tokenAuthorityPublicKey = _tokenAuthorityPublicKey;\n    }\n\n    function _isAuthorized(KrnlPayload memory krnlPayload, bytes memory params) private returns (bool) {\n        (\n            bytes memory kernelResponsesSignature,\n            bytes32 kernelParamObjectsDigest,\n            bytes memory signatureToken,\n            bytes32 nonce\n        ) = abi.decode(krnlPayload.auth, (bytes, bytes32, bytes, bytes32));\n\n        if (executed[signatureToken]) {\n            return false;\n        }\n\n        bytes32 kernelResponsesDigest = keccak256(abi.encode(krnlPayload.kernelResponses, msg.sender));\n        bytes32 ethSignedKernelResponsesDigest = MessageHashUtils.toEthSignedMessageHash(kernelResponsesDigest);\n        address recoveredAddress = ECDSA.recover(ethSignedKernelResponsesDigest, kernelResponsesSignature);\n        if (recoveredAddress != tokenAuthorityPublicKey) {\n            return false;\n        }\n\n        bytes32 calculatedKernelParamObjectsDigest = keccak256(abi.encode(krnlPayload.kernelParamObjects, msg.sender));\n        if (calculatedKernelParamObjectsDigest != kernelParamObjectsDigest) {\n            return false;\n        }\n\n        bytes32 functionParamsDigest = keccak256(abi.encode(params));\n\n        bytes32 dataDigest = keccak256(abi.encode(functionParamsDigest, kernelParamObjectsDigest, msg.sender, nonce));\n        bytes32 ethSignedDataDigest = MessageHashUtils.toEthSignedMessageHash(dataDigest);\n        recoveredAddress = ECDSA.recover(ethSignedDataDigest, signatureToken);\n        if (recoveredAddress != tokenAuthorityPublicKey) {\n            return false;\n        }\n\n        executed[signatureToken] = true;\n        return true;\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@oasisprotocol/sapphire-contracts/contracts/EthereumUtils.sol":{"ast":{"absolutePath":"@oasisprotocol/sapphire-contracts/contracts/EthereumUtils.sol","exportedSymbols":{"EthereumUtils":[628],"Sapphire":[1072],"SignatureRSV":[10]},"id":629,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"40:23:0"},{"absolutePath":"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol","file":"./Sapphire.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":629,"sourceUnit":1156,"src":"65:40:0","symbolAliases":[{"foreign":{"id":2,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"73:8:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"SignatureRSV","id":10,"members":[{"constant":false,"id":5,"mutability":"mutable","name":"r","nameLocation":"141:1:0","nodeType":"VariableDeclaration","scope":10,"src":"133:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4,"name":"bytes32","nodeType":"ElementaryTypeName","src":"133:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"s","nameLocation":"156:1:0","nodeType":"VariableDeclaration","scope":10,"src":"148:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6,"name":"bytes32","nodeType":"ElementaryTypeName","src":"148:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"v","nameLocation":"171:1:0","nodeType":"VariableDeclaration","scope":10,"src":"163:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"163:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SignatureRSV","nameLocation":"114:12:0","nodeType":"StructDefinition","scope":629,"src":"107:68:0","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"EthereumUtils","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":628,"linearizedBaseContracts":[628],"name":"EthereumUtils","nameLocation":"185:13:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":13,"mutability":"constant","name":"K256_P","nameLocation":"231:6:0","nodeType":"VariableDeclaration","scope":628,"src":"205:109:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"205:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666656666666666633266","id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"248:66:0","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007908834671663_by_1","typeString":"int_const 1157...(70 digits omitted)...1663"},"value":"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"},"visibility":"internal"},{"constant":true,"id":16,"mutability":"constant","name":"K256_P_PLUS_1_OVER_4","nameLocation":"363:20:0","nodeType":"VariableDeclaration","scope":628,"src":"337:123:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"337:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307833666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666266666666663063","id":15,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"394:66:0","typeDescriptions":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001977208667916_by_1","typeString":"int_const 2894...(69 digits omitted)...7916"},"value":"0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffbfffff0c"},"visibility":"internal"},{"constant":true,"id":22,"mutability":"constant","name":"PRECOMPILE_BIGMODEXP","nameLocation":"493:20:0","nodeType":"VariableDeclaration","scope":628,"src":"467:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"467:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307835","id":20,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"524:3:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"0x5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":19,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"516:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"516:7:0","typeDescriptions":{}}},"id":21,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"516:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"errorSelector":"102875ed","id":24,"name":"expmod_Error","nameLocation":"541:12:0","nodeType":"ErrorDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[],"src":"553:2:0"},"src":"535:21:0"},{"body":{"id":77,"nodeType":"Block","src":"693:454:0","statements":[{"assignments":[36,38],"declarations":[{"constant":false,"id":36,"mutability":"mutable","name":"success","nameLocation":"709:7:0","nodeType":"VariableDeclaration","scope":77,"src":"704:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35,"name":"bool","nodeType":"ElementaryTypeName","src":"704:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"result","nameLocation":"731:6:0","nodeType":"VariableDeclaration","scope":77,"src":"718:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":37,"name":"bytes","nodeType":"ElementaryTypeName","src":"718:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":60,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30783230","id":45,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"828:4:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":44,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"820:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":43,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:0","typeDescriptions":{}}},"id":46,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"820:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30783230","id":49,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"877:4:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":48,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"869:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":47,"name":"uint256","nodeType":"ElementaryTypeName","src":"869:7:0","typeDescriptions":{}}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"869:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30783230","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"930:4:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":52,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:0","typeDescriptions":{}}},"id":54,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":55,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"974:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":56,"name":"exponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"996:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":57,"name":"modulus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"1022:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":41,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"786:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":42,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"790:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"786:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"786:257:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":39,"name":"PRECOMPILE_BIGMODEXP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"741:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"762:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"741:31:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"741:312:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"703:350:0"},{"condition":{"id":62,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1068:8:0","subExpression":{"id":61,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":66,"nodeType":"IfStatement","src":"1064:35:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":63,"name":"expmod_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"1085:12:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1085:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":65,"nodeType":"RevertStatement","src":"1078:21:0"}},{"expression":{"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":67,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1110:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":72,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"1132:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":71,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1124:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":70,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1124:7:0","typeDescriptions":{}}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1124:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1116:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:0","typeDescriptions":{}}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1110:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":76,"nodeType":"ExpressionStatement","src":"1110:30:0"}]},"id":78,"implemented":true,"kind":"function","modifiers":[],"name":"expmod","nameLocation":"571:6:0","nodeType":"FunctionDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"mutability":"mutable","name":"base","nameLocation":"595:4:0","nodeType":"VariableDeclaration","scope":78,"src":"587:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"587:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"exponent","nameLocation":"617:8:0","nodeType":"VariableDeclaration","scope":78,"src":"609:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"609:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30,"mutability":"mutable","name":"modulus","nameLocation":"643:7:0","nodeType":"VariableDeclaration","scope":78,"src":"635:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint256","nodeType":"ElementaryTypeName","src":"635:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:79:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"out","nameLocation":"688:3:0","nodeType":"VariableDeclaration","scope":78,"src":"680:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"679:13:0"},"scope":628,"src":"562:585:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"errorSelector":"ab4be041","id":80,"name":"k256DeriveY_Invalid_Prefix_Error","nameLocation":"1159:32:0","nodeType":"ErrorDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"1191:2:0"},"src":"1153:41:0"},{"body":{"id":141,"nodeType":"Block","src":"1496:445:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":90,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"1510:6:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30783032","id":91,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:4:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x02"},"src":"1510:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":93,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"1528:6:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30783033","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1538:4:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"0x03"},"src":"1528:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1510:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":100,"nodeType":"IfStatement","src":"1506:91:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":97,"name":"k256DeriveY_Invalid_Prefix_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1563:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1563:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"RevertStatement","src":"1556:41:0"}},{"expression":{"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1648:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":104,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"1666:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":106,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"1676:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":107,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"1679:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":108,"name":"K256_P","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1682:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":105,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"1669:6:0","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":110,"name":"K256_P","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1691:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":103,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"1659:6:0","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1659:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"37","id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},{"id":113,"name":"K256_P","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1703:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":102,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"1652:6:0","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1652:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1648:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":116,"nodeType":"ExpressionStatement","src":"1648:62:0"},{"expression":{"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":117,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1770:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":119,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1781:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":120,"name":"K256_P_PLUS_1_OVER_4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"1784:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":121,"name":"K256_P","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1806:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":118,"name":"expmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"1774:6:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1770:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":124,"nodeType":"ExpressionStatement","src":"1770:43:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":125,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1874:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":126,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"1878:6:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1874:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1873:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1888:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1873:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1893:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1873:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":140,"nodeType":"IfStatement","src":"1869:66:0","trueBody":{"id":139,"nodeType":"Block","src":"1896:39:0","statements":[{"expression":{"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":133,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1910:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":134,"name":"K256_P","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1914:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":135,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1923:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1914:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1910:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":138,"nodeType":"ExpressionStatement","src":"1910:14:0"}]}}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"1200:183:0","text":" @notice Recover Y coordinate from X coordinate and sign bit.\n @param prefix 0x02 or 0x03 indicates sign bit of compressed point.\n @param x X coordinate."},"id":142,"implemented":true,"kind":"function","modifiers":[],"name":"k256DeriveY","nameLocation":"1397:11:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"prefix","nameLocation":"1415:6:0","nodeType":"VariableDeclaration","scope":142,"src":"1409:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":82,"name":"uint8","nodeType":"ElementaryTypeName","src":"1409:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"x","nameLocation":"1431:1:0","nodeType":"VariableDeclaration","scope":142,"src":"1423:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1408:25:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"y","nameLocation":"1489:1:0","nodeType":"VariableDeclaration","scope":142,"src":"1481:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1480:11:0"},"scope":628,"src":"1388:553:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"errorSelector":"c88d458a","id":144,"name":"k256Decompress_Invalid_Length_Error","nameLocation":"1953:35:0","nodeType":"ErrorDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"1988:2:0"},"src":"1947:44:0"},{"body":{"id":175,"nodeType":"Block","src":"2282:258:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":154,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"2296:2:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2299:6:0","memberName":"length","nodeType":"MemberAccess","src":"2296:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3333","id":156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2309:2:0","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"src":"2296:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":161,"nodeType":"IfStatement","src":"2292:65:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":158,"name":"k256Decompress_Invalid_Length_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"2320:35:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":160,"nodeType":"RevertStatement","src":"2313:44:0"}},{"AST":{"nativeSrc":"2376:116:0","nodeType":"YulBlock","src":"2376:116:0","statements":[{"nativeSrc":"2459:23:0","nodeType":"YulAssignment","src":"2459:23:0","value":{"arguments":[{"arguments":[{"name":"pk","nativeSrc":"2474:2:0","nodeType":"YulIdentifier","src":"2474:2:0"},{"kind":"number","nativeSrc":"2478:2:0","nodeType":"YulLiteral","src":"2478:2:0","type":"","value":"33"}],"functionName":{"name":"add","nativeSrc":"2470:3:0","nodeType":"YulIdentifier","src":"2470:3:0"},"nativeSrc":"2470:11:0","nodeType":"YulFunctionCall","src":"2470:11:0"}],"functionName":{"name":"mload","nativeSrc":"2464:5:0","nodeType":"YulIdentifier","src":"2464:5:0"},"nativeSrc":"2464:18:0","nodeType":"YulFunctionCall","src":"2464:18:0"},"variableNames":[{"name":"x","nativeSrc":"2459:1:0","nodeType":"YulIdentifier","src":"2459:1:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":147,"isOffset":false,"isSlot":false,"src":"2474:2:0","valueSize":1},{"declaration":150,"isOffset":false,"isSlot":false,"src":"2459:1:0","valueSize":1}],"id":162,"nodeType":"InlineAssembly","src":"2367:125:0"},{"expression":{"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":163,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"2501:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":167,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"2523:2:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":169,"indexExpression":{"hexValue":"30","id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2526:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2523:5:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":165,"name":"uint8","nodeType":"ElementaryTypeName","src":"2517:5:0","typeDescriptions":{}}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":171,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"2531:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":164,"name":"k256DeriveY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2505:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint8_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint8,uint256) view returns (uint256)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":174,"nodeType":"ExpressionStatement","src":"2501:32:0"}]},"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"1997:166:0","text":" @notice Decompress SEC P256 k1 point.\n @param pk 33 byte compressed public key.\n @return x X coordinate.\n @return y Y coordinate."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"k256Decompress","nameLocation":"2177:14:0","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"pk","nameLocation":"2205:2:0","nodeType":"VariableDeclaration","scope":176,"src":"2192:15:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":146,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2191:17:0"},"returnParameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"x","nameLocation":"2264:1:0","nodeType":"VariableDeclaration","scope":176,"src":"2256:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2256:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"y","nameLocation":"2275:1:0","nodeType":"VariableDeclaration","scope":176,"src":"2267:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"2267:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2255:22:0"},"scope":628,"src":"2168:372:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":196,"nodeType":"Block","src":"2664:104:0","statements":[{"assignments":[184,186],"declarations":[{"constant":false,"id":184,"mutability":"mutable","name":"x","nameLocation":"2683:1:0","nodeType":"VariableDeclaration","scope":196,"src":"2675:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2675:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"y","nameLocation":"2694:1:0","nodeType":"VariableDeclaration","scope":196,"src":"2686:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2686:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":190,"initialValue":{"arguments":[{"id":188,"name":"pubkey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"2714:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":187,"name":"k256Decompress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2699:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes memory) view returns (uint256,uint256)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"2674:47:0"},{"expression":{"arguments":[{"id":192,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2756:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":193,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2759:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":191,"name":"toEthereumAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2738:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (uint256,uint256) pure returns (address)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":182,"id":195,"nodeType":"Return","src":"2731:30:0"}]},"id":197,"implemented":true,"kind":"function","modifiers":[],"name":"k256PubkeyToEthereumAddress","nameLocation":"2555:27:0","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"pubkey","nameLocation":"2596:6:0","nodeType":"VariableDeclaration","scope":197,"src":"2583:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":177,"name":"bytes","nodeType":"ElementaryTypeName","src":"2583:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2582:21:0"},"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"2651:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"2651:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2650:9:0"},"scope":628,"src":"2546:222:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":233,"nodeType":"Block","src":"3086:132:0","statements":[{"assignments":[208],"declarations":[{"constant":false,"id":208,"mutability":"mutable","name":"digest","nameLocation":"3104:6:0","nodeType":"VariableDeclaration","scope":233,"src":"3096:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3096:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":216,"initialValue":{"arguments":[{"arguments":[{"id":212,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"3140:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":213,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"3143:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":210,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3123:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3127:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"3123:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3123:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":209,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3113:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3113:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3096:50:0"},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":223,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"3189:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:0","typeDescriptions":{}}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3936","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3200:2:0","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3181:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3180:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3207:2:0","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3180:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3172:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":219,"name":"uint160","nodeType":"ElementaryTypeName","src":"3172:7:0","typeDescriptions":{}}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3172:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3164:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"3164:7:0","typeDescriptions":{}}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3164:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":206,"id":232,"nodeType":"Return","src":"3157:54:0"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2774:198:0","text":" @notice Convert SEC P256 k1 curve point to Ethereum address.\n @param x X coordinate.\n @param y Y coordinate.\n @custom:see https://gavwood.com/paper.pdf (pp. 212)"},"id":234,"implemented":true,"kind":"function","modifiers":[],"name":"toEthereumAddress","nameLocation":"2986:17:0","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"x","nameLocation":"3012:1:0","nodeType":"VariableDeclaration","scope":234,"src":"3004:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"3004:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"y","nameLocation":"3023:1:0","nodeType":"VariableDeclaration","scope":234,"src":"3015:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"3015:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3003:22:0"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":234,"src":"3073:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"3073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3072:9:0"},"scope":628,"src":"2977:241:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"errorSelector":"86cd05c5","id":236,"name":"DER_Split_Error","nameLocation":"3230:15:0","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[],"src":"3245:2:0"},"src":"3224:24:0"},{"body":{"id":449,"nodeType":"Block","src":"4406:1522:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":245,"name":"der","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4420:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4424:6:0","memberName":"length","nodeType":"MemberAccess","src":"4420:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"38","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4433:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4420:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":252,"nodeType":"IfStatement","src":"4416:44:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"DER_Split_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4443:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4443:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":251,"nodeType":"RevertStatement","src":"4436:24:0"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":253,"name":"der","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4474:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":255,"indexExpression":{"hexValue":"30","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4478:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4474:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30783330","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4484:4:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"0x30"},"src":"4474:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":261,"nodeType":"IfStatement","src":"4470:44:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":258,"name":"DER_Split_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4497:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":260,"nodeType":"RevertStatement","src":"4490:24:0"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":262,"name":"der","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4528:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":264,"indexExpression":{"hexValue":"32","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4532:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4528:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30783032","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4538:4:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x02"},"src":"4528:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":270,"nodeType":"IfStatement","src":"4524:44:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"DER_Split_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4551:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4544:24:0"}},{"assignments":[272],"declarations":[{"constant":false,"id":272,"mutability":"mutable","name":"zLen","nameLocation":"4587:4:0","nodeType":"VariableDeclaration","scope":449,"src":"4579:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":279,"initialValue":{"arguments":[{"baseExpression":{"id":275,"name":"der","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4600:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":277,"indexExpression":{"hexValue":"31","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4600:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4594:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":273,"name":"uint8","nodeType":"ElementaryTypeName","src":"4594:5:0","typeDescriptions":{}}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4594:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4579:28:0"},{"assignments":[281],"declarations":[{"constant":false,"id":281,"mutability":"mutable","name":"rLen","nameLocation":"4625:4:0","nodeType":"VariableDeclaration","scope":449,"src":"4617:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"4617:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":288,"initialValue":{"arguments":[{"baseExpression":{"id":284,"name":"der","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4638:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":286,"indexExpression":{"hexValue":"33","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4642:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4638:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4632:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":282,"name":"uint8","nodeType":"ElementaryTypeName","src":"4632:5:0","typeDescriptions":{}}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4632:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4617:28:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":289,"name":"rLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4659:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3333","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4666:2:0","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"src":"4659:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":295,"nodeType":"IfStatement","src":"4655:39:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":292,"name":"DER_Split_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4677:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4677:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"RevertStatement","src":"4670:24:0"}},{"assignments":[297],"declarations":[{"constant":false,"id":297,"mutability":"mutable","name":"sOffset","nameLocation":"4713:7:0","nodeType":"VariableDeclaration","scope":449,"src":"4705:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"4705:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":301,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4723:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":299,"name":"rLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4727:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4723:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4705:26:0"},{"assignments":[303],"declarations":[{"constant":false,"id":303,"mutability":"mutable","name":"sLen","nameLocation":"4749:4:0","nodeType":"VariableDeclaration","scope":449,"src":"4741:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":302,"name":"uint256","nodeType":"ElementaryTypeName","src":"4741:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[{"baseExpression":{"id":306,"name":"der","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4762:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":310,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":307,"name":"sOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"4766:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4776:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4766:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4762:16:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4756:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":304,"name":"uint8","nodeType":"ElementaryTypeName","src":"4756:5:0","typeDescriptions":{}}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4756:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4741:38:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":313,"name":"sLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"4793:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3333","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4800:2:0","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"src":"4793:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":319,"nodeType":"IfStatement","src":"4789:39:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"DER_Split_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4811:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":318,"nodeType":"RevertStatement","src":"4804:24:0"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":320,"name":"der","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4842:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":322,"indexExpression":{"id":321,"name":"sOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"4846:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4842:12:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30783032","id":323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4858:4:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x02"},"src":"4842:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":328,"nodeType":"IfStatement","src":"4838:50:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":325,"name":"DER_Split_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4871:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4871:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":327,"nodeType":"RevertStatement","src":"4864:24:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":329,"name":"rLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4903:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":330,"name":"sLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"4910:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4903:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4917:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4903:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":334,"name":"zLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4922:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4903:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":339,"nodeType":"IfStatement","src":"4899:53:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":336,"name":"DER_Split_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4935:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4935:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"RevertStatement","src":"4928:24:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":340,"name":"der","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4966:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4970:6:0","memberName":"length","nodeType":"MemberAccess","src":"4966:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":342,"name":"zLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4980:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4987:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4980:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4966:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":349,"nodeType":"IfStatement","src":"4962:52:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":346,"name":"DER_Split_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4997:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"RevertStatement","src":"4990:24:0"}},{"expression":{"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":350,"name":"sOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5025:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5036:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5025:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":353,"nodeType":"ExpressionStatement","src":"5025:12:0"},{"assignments":[355],"declarations":[{"constant":false,"id":355,"mutability":"mutable","name":"rOffset","nameLocation":"5055:7:0","nodeType":"VariableDeclaration","scope":449,"src":"5047:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"5047:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":357,"initialValue":{"hexValue":"34","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"VariableDeclarationStatement","src":"5047:19:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":358,"name":"rLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"5081:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3333","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:2:0","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"src":"5081:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":379,"nodeType":"IfStatement","src":"5077:134:0","trueBody":{"id":378,"nodeType":"Block","src":"5093:118:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":361,"name":"der","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"5111:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":363,"indexExpression":{"hexValue":"34","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5115:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5111:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30783030","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5121:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"src":"5111:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":369,"nodeType":"IfStatement","src":"5107:44:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":366,"name":"DER_Split_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"5134:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5134:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":368,"nodeType":"RevertStatement","src":"5127:24:0"}},{"expression":{"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":370,"name":"rOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"5165:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5176:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5165:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":373,"nodeType":"ExpressionStatement","src":"5165:12:0"},{"expression":{"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":374,"name":"rLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"5191:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5199:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5191:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":377,"nodeType":"ExpressionStatement","src":"5191:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":380,"name":"sLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5225:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3333","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5233:2:0","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"src":"5225:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":401,"nodeType":"IfStatement","src":"5221:140:0","trueBody":{"id":400,"nodeType":"Block","src":"5237:124:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":383,"name":"der","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"5255:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":385,"indexExpression":{"id":384,"name":"sOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5259:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5255:12:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30783030","id":386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5271:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"src":"5255:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":391,"nodeType":"IfStatement","src":"5251:50:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":388,"name":"DER_Split_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"5284:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5284:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"RevertStatement","src":"5277:24:0"}},{"expression":{"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":392,"name":"sOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5315:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5326:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5315:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":395,"nodeType":"ExpressionStatement","src":"5315:12:0"},{"expression":{"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":396,"name":"sLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5341:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5349:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5341:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":399,"nodeType":"ExpressionStatement","src":"5341:9:0"}]}},{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"r","nameLocation":"5379:1:0","nodeType":"VariableDeclaration","scope":449,"src":"5371:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5371:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":404,"nodeType":"VariableDeclarationStatement","src":"5371:9:0"},{"assignments":[406],"declarations":[{"constant":false,"id":406,"mutability":"mutable","name":"s","nameLocation":"5398:1:0","nodeType":"VariableDeclaration","scope":449,"src":"5390:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5390:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":407,"nodeType":"VariableDeclarationStatement","src":"5390:9:0"},{"AST":{"nativeSrc":"5419:113:0","nodeType":"YulBlock","src":"5419:113:0","statements":[{"nativeSrc":"5433:38:0","nodeType":"YulAssignment","src":"5433:38:0","value":{"arguments":[{"arguments":[{"name":"der","nativeSrc":"5448:3:0","nodeType":"YulIdentifier","src":"5448:3:0"},{"arguments":[{"kind":"number","nativeSrc":"5457:2:0","nodeType":"YulLiteral","src":"5457:2:0","type":"","value":"32"},{"name":"rOffset","nativeSrc":"5461:7:0","nodeType":"YulIdentifier","src":"5461:7:0"}],"functionName":{"name":"add","nativeSrc":"5453:3:0","nodeType":"YulIdentifier","src":"5453:3:0"},"nativeSrc":"5453:16:0","nodeType":"YulFunctionCall","src":"5453:16:0"}],"functionName":{"name":"add","nativeSrc":"5444:3:0","nodeType":"YulIdentifier","src":"5444:3:0"},"nativeSrc":"5444:26:0","nodeType":"YulFunctionCall","src":"5444:26:0"}],"functionName":{"name":"mload","nativeSrc":"5438:5:0","nodeType":"YulIdentifier","src":"5438:5:0"},"nativeSrc":"5438:33:0","nodeType":"YulFunctionCall","src":"5438:33:0"},"variableNames":[{"name":"r","nativeSrc":"5433:1:0","nodeType":"YulIdentifier","src":"5433:1:0"}]},{"nativeSrc":"5484:38:0","nodeType":"YulAssignment","src":"5484:38:0","value":{"arguments":[{"arguments":[{"name":"der","nativeSrc":"5499:3:0","nodeType":"YulIdentifier","src":"5499:3:0"},{"arguments":[{"kind":"number","nativeSrc":"5508:2:0","nodeType":"YulLiteral","src":"5508:2:0","type":"","value":"32"},{"name":"sOffset","nativeSrc":"5512:7:0","nodeType":"YulIdentifier","src":"5512:7:0"}],"functionName":{"name":"add","nativeSrc":"5504:3:0","nodeType":"YulIdentifier","src":"5504:3:0"},"nativeSrc":"5504:16:0","nodeType":"YulFunctionCall","src":"5504:16:0"}],"functionName":{"name":"add","nativeSrc":"5495:3:0","nodeType":"YulIdentifier","src":"5495:3:0"},"nativeSrc":"5495:26:0","nodeType":"YulFunctionCall","src":"5495:26:0"}],"functionName":{"name":"mload","nativeSrc":"5489:5:0","nodeType":"YulIdentifier","src":"5489:5:0"},"nativeSrc":"5489:33:0","nodeType":"YulFunctionCall","src":"5489:33:0"},"variableNames":[{"name":"s","nativeSrc":"5484:1:0","nodeType":"YulIdentifier","src":"5484:1:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":239,"isOffset":false,"isSlot":false,"src":"5448:3:0","valueSize":1},{"declaration":239,"isOffset":false,"isSlot":false,"src":"5499:3:0","valueSize":1},{"declaration":403,"isOffset":false,"isSlot":false,"src":"5433:1:0","valueSize":1},{"declaration":355,"isOffset":false,"isSlot":false,"src":"5461:7:0","valueSize":1},{"declaration":406,"isOffset":false,"isSlot":false,"src":"5484:1:0","valueSize":1},{"declaration":297,"isOffset":false,"isSlot":false,"src":"5512:7:0","valueSize":1}],"id":408,"nodeType":"InlineAssembly","src":"5410:122:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"rLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"5755:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5762:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5755:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":422,"nodeType":"IfStatement","src":"5751:61:0","trueBody":{"id":421,"nodeType":"Block","src":"5766:46:0","statements":[{"expression":{"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":412,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"5780:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5786:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5791:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":415,"name":"rLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"5796:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5791:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5790:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5786:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5780:21:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":420,"nodeType":"ExpressionStatement","src":"5780:21:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":423,"name":"sLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5826:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5833:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5826:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":436,"nodeType":"IfStatement","src":"5822:61:0","trueBody":{"id":435,"nodeType":"Block","src":"5837:46:0","statements":[{"expression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":426,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5851:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5857:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5862:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":429,"name":"sLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5867:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5861:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5857:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5851:21:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":434,"nodeType":"ExpressionStatement","src":"5851:21:0"}]}},{"expression":{"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":437,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"5893:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"id":439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5897:1:0","memberName":"r","nodeType":"MemberAccess","referencedDeclaration":5,"src":"5893:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":440,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"5901:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5893:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":442,"nodeType":"ExpressionStatement","src":"5893:9:0"},{"expression":{"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":443,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"5912:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"id":445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5916:1:0","memberName":"s","nodeType":"MemberAccess","referencedDeclaration":7,"src":"5912:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":446,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5920:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5912:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":448,"nodeType":"ExpressionStatement","src":"5912:9:0"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"3254:1026:0","text":" @notice Extracts the `r` and `s` parameters from a DER encoded ECDSA\n signature.\n The signature is an ASN1 encoded SEQUENCE of the variable length `r` and\n `s` INTEGERs.\n ```\n | 0x30 | len(z) | 0x02 | len(r) |  r   | 0x02 | len(s) |  s   | = hex value\n |  1   |   1    |   1  |   1    | 1-33 |  1   |   1    | 1-33 | = byte length\n ```\n If the highest bit of either `r` or `s` is set, it will be prefix padded\n with a zero byte. There is exponentially decreasing probability that\n either `r` or `s` will be below 32 bytes. There is a very high\n probability that either `r` or `s` will be 33 bytes. This function only\n works if either `r` or `s` are 256bits or lower.\n @param der DER encoded ECDSA signature\n @return rsv ECDSA R point X coordinate, and S scalar\n @custom:see https://bitcoin.stackexchange.com/questions/58853/how-do-you-figure-out-the-r-and-s-out-of-a-signature-using-python"},"id":450,"implemented":true,"kind":"function","modifiers":[],"name":"splitDERSignature","nameLocation":"4294:17:0","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"der","nameLocation":"4325:3:0","nodeType":"VariableDeclaration","scope":450,"src":"4312:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":238,"name":"bytes","nodeType":"ElementaryTypeName","src":"4312:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4311:18:0"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"rsv","nameLocation":"4397:3:0","nodeType":"VariableDeclaration","scope":450,"src":"4377:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV"},"typeName":{"id":242,"nodeType":"UserDefinedTypeName","pathNode":{"id":241,"name":"SignatureRSV","nameLocations":["4377:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":10,"src":"4377:12:0"},"referencedDeclaration":10,"src":"4377:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_storage_ptr","typeString":"struct SignatureRSV"}},"visibility":"internal"}],"src":"4376:25:0"},"scope":628,"src":"4285:1643:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"errorSelector":"4532600d","id":452,"name":"recoverV_Error","nameLocation":"5940:14:0","nodeType":"ErrorDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[],"src":"5954:2:0"},"src":"5934:23:0"},{"body":{"id":509,"nodeType":"Block","src":"6086:272:0","statements":[{"expression":{"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":462,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6096:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"id":464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6100:1:0","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":9,"src":"6096:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3237","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6104:2:0","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6096:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":467,"nodeType":"ExpressionStatement","src":"6096:10:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":469,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"6131:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":472,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6145:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"id":473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6149:1:0","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":9,"src":"6145:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6139:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":470,"name":"uint8","nodeType":"ElementaryTypeName","src":"6139:5:0","typeDescriptions":{}}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6139:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":475,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6153:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"id":476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6157:1:0","memberName":"r","nodeType":"MemberAccess","referencedDeclaration":5,"src":"6153:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":477,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6160:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"id":478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6164:1:0","memberName":"s","nodeType":"MemberAccess","referencedDeclaration":7,"src":"6160:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":468,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6121:9:0","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6121:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":480,"name":"pubkeyAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"6170:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6121:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":508,"nodeType":"IfStatement","src":"6117:235:0","trueBody":{"id":507,"nodeType":"Block","src":"6182:170:0","statements":[{"expression":{"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":482,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6196:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6200:1:0","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":9,"src":"6196:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3238","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:2:0","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"6196:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":487,"nodeType":"ExpressionStatement","src":"6196:10:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":489,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"6235:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":492,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6249:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"id":493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6253:1:0","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":9,"src":"6249:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6243:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":490,"name":"uint8","nodeType":"ElementaryTypeName","src":"6243:5:0","typeDescriptions":{}}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":495,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6257:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"id":496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6261:1:0","memberName":"r","nodeType":"MemberAccess","referencedDeclaration":5,"src":"6257:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":497,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6264:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"id":498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6268:1:0","memberName":"s","nodeType":"MemberAccess","referencedDeclaration":7,"src":"6264:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":488,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6225:9:0","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":500,"name":"pubkeyAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"6274:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6225:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"6221:121:0","trueBody":{"id":505,"nodeType":"Block","src":"6286:56:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":502,"name":"recoverV_Error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6311:14:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6311:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"RevertStatement","src":"6304:23:0"}]}}]}}]},"id":510,"implemented":true,"kind":"function","modifiers":[],"name":"recoverV","nameLocation":"5972:8:0","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"pubkeyAddr","nameLocation":"5998:10:0","nodeType":"VariableDeclaration","scope":510,"src":"5990:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"5990:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"digest","nameLocation":"6026:6:0","nodeType":"VariableDeclaration","scope":510,"src":"6018:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6018:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"rsv","nameLocation":"6062:3:0","nodeType":"VariableDeclaration","scope":510,"src":"6042:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV"},"typeName":{"id":458,"nodeType":"UserDefinedTypeName","pathNode":{"id":457,"name":"SignatureRSV","nameLocations":["6042:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":10,"src":"6042:12:0"},"referencedDeclaration":10,"src":"6042:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_storage_ptr","typeString":"struct SignatureRSV"}},"visibility":"internal"}],"src":"5980:91:0"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[],"src":"6086:0:0"},"scope":628,"src":"5963:395:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":543,"nodeType":"Block","src":"7081:154:0","statements":[{"expression":{"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":525,"name":"pubkeyAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"7091:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":527,"name":"pubkey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7132:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":526,"name":"k256PubkeyToEthereumAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"7104:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory) view returns (address)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7104:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7091:48:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":530,"nodeType":"ExpressionStatement","src":"7091:48:0"},{"expression":{"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":531,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"7150:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":533,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"7174:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":532,"name":"splitDERSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7156:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_SignatureRSV_$10_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct SignatureRSV memory)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7156:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"src":"7150:34:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"id":536,"nodeType":"ExpressionStatement","src":"7150:34:0"},{"expression":{"arguments":[{"id":538,"name":"pubkeyAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"7204:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":539,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"7216:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":540,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"7224:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}],"id":537,"name":"recoverV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"7195:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_struct$_SignatureRSV_$10_memory_ptr_$returns$__$","typeString":"function (address,bytes32,struct SignatureRSV memory) pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7195:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"7195:33:0"}]},"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"6364:524:0","text":" @notice Convert a Secp256k1PrehashedKeccak256 signature to one accepted\n by ecrecover.\n @param pubkey 33 byte compressed public key.\n @param digest 32 byte pre-hashed message digest.\n @param signature ASN.1 DER encoded signature, as returned from\n [`Sapphire.sign`](../Sapphire.sol/library.Sapphire.md#sign).\n @return pubkeyAddr 20 byte Ethereum address.\n @return rsv Ethereum EcDSA RSV signature values.\n @custom:see https://gavwood.com/paper.pdf (pp. 206)"},"id":544,"implemented":true,"kind":"function","modifiers":[],"name":"toEthereumSignature","nameLocation":"6902:19:0","nodeType":"FunctionDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"pubkey","nameLocation":"6944:6:0","nodeType":"VariableDeclaration","scope":544,"src":"6931:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":512,"name":"bytes","nodeType":"ElementaryTypeName","src":"6931:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"digest","nameLocation":"6968:6:0","nodeType":"VariableDeclaration","scope":544,"src":"6960:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6960:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"signature","nameLocation":"6997:9:0","nodeType":"VariableDeclaration","scope":544,"src":"6984:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":516,"name":"bytes","nodeType":"ElementaryTypeName","src":"6984:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6921:91:0"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"pubkeyAddr","nameLocation":"7044:10:0","nodeType":"VariableDeclaration","scope":544,"src":"7036:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"7036:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"rsv","nameLocation":"7076:3:0","nodeType":"VariableDeclaration","scope":544,"src":"7056:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV"},"typeName":{"id":522,"nodeType":"UserDefinedTypeName","pathNode":{"id":521,"name":"SignatureRSV","nameLocations":["7056:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":10,"src":"7056:12:0"},"referencedDeclaration":10,"src":"7056:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_storage_ptr","typeString":"struct SignatureRSV"}},"visibility":"internal"}],"src":"7035:45:0"},"scope":628,"src":"6893:342:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":586,"nodeType":"Block","src":"7388:310:0","statements":[{"assignments":[557],"declarations":[{"constant":false,"id":557,"mutability":"mutable","name":"signature","nameLocation":"7411:9:0","nodeType":"VariableDeclaration","scope":586,"src":"7398:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":556,"name":"bytes","nodeType":"ElementaryTypeName","src":"7398:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":573,"initialValue":{"arguments":[{"expression":{"expression":{"id":560,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"7450:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7459:10:0","memberName":"SigningAlg","nodeType":"MemberAccess","referencedDeclaration":684,"src":"7450:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SigningAlg_$684_$","typeString":"type(enum Sapphire.SigningAlg)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7470:27:0","memberName":"Secp256k1PrehashedKeccak256","nodeType":"MemberAccess","referencedDeclaration":679,"src":"7450:47:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"}},{"arguments":[{"id":565,"name":"secretKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"7528:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":563,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7511:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7515:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"7511:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7511:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":569,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"7569:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":567,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7552:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7556:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"7552:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7590:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":558,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"7423:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7432:4:0","memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":973,"src":"7423:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_SigningAlg_$684_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum Sapphire.SigningAlg,bytes memory,bytes memory,bytes memory) view returns (bytes memory)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7423:179:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7398:204:0"},{"expression":{"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":574,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"7613:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":576,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"7637:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":575,"name":"splitDERSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7619:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_SignatureRSV_$10_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct SignatureRSV memory)"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7619:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"src":"7613:34:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}},"id":579,"nodeType":"ExpressionStatement","src":"7613:34:0"},{"expression":{"arguments":[{"id":581,"name":"pubkeyAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7667:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":582,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"7679:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":583,"name":"rsv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"7687:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV memory"}],"id":580,"name":"recoverV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"7658:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_struct$_SignatureRSV_$10_memory_ptr_$returns$__$","typeString":"function (address,bytes32,struct SignatureRSV memory) pure"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7658:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"ExpressionStatement","src":"7658:33:0"}]},"id":587,"implemented":true,"kind":"function","modifiers":[],"name":"sign","nameLocation":"7250:4:0","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"pubkeyAddr","nameLocation":"7272:10:0","nodeType":"VariableDeclaration","scope":587,"src":"7264:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"7264:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"secretKey","nameLocation":"7300:9:0","nodeType":"VariableDeclaration","scope":587,"src":"7292:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7292:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"digest","nameLocation":"7327:6:0","nodeType":"VariableDeclaration","scope":587,"src":"7319:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7319:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7254:85:0"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"rsv","nameLocation":"7383:3:0","nodeType":"VariableDeclaration","scope":587,"src":"7363:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_memory_ptr","typeString":"struct SignatureRSV"},"typeName":{"id":553,"nodeType":"UserDefinedTypeName","pathNode":{"id":552,"name":"SignatureRSV","nameLocations":["7363:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":10,"src":"7363:12:0"},"referencedDeclaration":10,"src":"7363:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureRSV_$10_storage_ptr","typeString":"struct SignatureRSV"}},"visibility":"internal"}],"src":"7362:25:0"},"scope":628,"src":"7241:457:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":626,"nodeType":"Block","src":"8043:321:0","statements":[{"assignments":[596],"declarations":[{"constant":false,"id":596,"mutability":"mutable","name":"randSeed","nameLocation":"8066:8:0","nodeType":"VariableDeclaration","scope":626,"src":"8053:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":595,"name":"bytes","nodeType":"ElementaryTypeName","src":"8053:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":602,"initialValue":{"arguments":[{"hexValue":"3332","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8098:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"hexValue":"","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8102:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":597,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"8077:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8086:11:0","memberName":"randomBytes","nodeType":"MemberAccess","referencedDeclaration":715,"src":"8077:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,bytes memory) view returns (bytes memory)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8077:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8053:52:0"},{"expression":{"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":603,"name":"secretKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8116:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":606,"name":"randSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"8136:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8128:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8128:7:0","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8128:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8116:29:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":609,"nodeType":"ExpressionStatement","src":"8116:29:0"},{"assignments":[611,null],"declarations":[{"constant":false,"id":611,"mutability":"mutable","name":"pk","nameLocation":"8170:2:0","nodeType":"VariableDeclaration","scope":626,"src":"8157:15:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":610,"name":"bytes","nodeType":"ElementaryTypeName","src":"8157:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},null],"id":619,"initialValue":{"arguments":[{"expression":{"expression":{"id":614,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"8223:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8232:10:0","memberName":"SigningAlg","nodeType":"MemberAccess","referencedDeclaration":684,"src":"8223:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SigningAlg_$684_$","typeString":"type(enum Sapphire.SigningAlg)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8243:27:0","memberName":"Secp256k1PrehashedKeccak256","nodeType":"MemberAccess","referencedDeclaration":679,"src":"8223:47:0","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"}},{"id":617,"name":"randSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"8284:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":612,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"8178:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8187:22:0","memberName":"generateSigningKeyPair","nodeType":"MemberAccess","referencedDeclaration":935,"src":"8178:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_SigningAlg_$684_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function (enum Sapphire.SigningAlg,bytes memory) view returns (bytes memory,bytes memory)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8178:124:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8156:146:0"},{"expression":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":620,"name":"pubkeyAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8313:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":622,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"8354:2:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":621,"name":"k256PubkeyToEthereumAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"8326:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory) view returns (address)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8326:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8313:44:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":625,"nodeType":"ExpressionStatement","src":"8313:44:0"}]},"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"7704:217:0","text":" @notice Generate an Ethereum compatible SEC P256 k1 keypair and\n corresponding public address.\n @return pubkeyAddr Ethereum address.\n @return secretKey Secret key used for signing."},"id":627,"implemented":true,"kind":"function","modifiers":[],"name":"generateKeypair","nameLocation":"7935:15:0","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[],"src":"7950:2:0"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"pubkeyAddr","nameLocation":"8008:10:0","nodeType":"VariableDeclaration","scope":627,"src":"8000:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"8000:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"secretKey","nameLocation":"8028:9:0","nodeType":"VariableDeclaration","scope":627,"src":"8020:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8020:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7999:39:0"},"scope":628,"src":"7926:438:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":629,"src":"177:8189:0","usedErrors":[24,80,144,236,452],"usedEvents":[]}],"src":"40:8327:0"},"id":0},"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol":{"ast":{"absolutePath":"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol","exportedSymbols":{"Sapphire":[1072],"sha384":[1155],"sha512":[1128],"sha512_256":[1101]},"id":1156,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":630,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"Sapphire","contractDependencies":[],"contractKind":"library","documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"64:1052:1","text":" @title Sapphire\n @notice This library provides a number of convenient wrappers for\n cryptographic operations such as the x25519 key derivation, Deoxys-II-based\n encryption and decryption, signing key generation, message digest signing and\n verification, gas padding and hashing.\n Most of the mentioned functions are implemented as Sapphire's precompiles and\n are cheap to call.\n #### Calling Precompiles Manually\n You can override the wrappers and call Sapphire precompiles by dispatching\n calls to specific well-known contract addresses, as described below. The\n __Precompile address__ section of each function will show you the address\n of the corresponding precompile.\n Input parameters should be packed into a contiguous memory region with each\n chunk of data padded to 32 bytes as usual. The recommended way to construct\n parameter byte sequences in Solidity is with `abi.encode` and `abi.decode`,\n which will transparently handle things like putting `bytes` lengths in the\n correct position."},"fullyImplemented":true,"id":1072,"linearizedBaseContracts":[1072],"name":"Sapphire","nameLocation":"1125:8:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":634,"mutability":"constant","name":"RANDOM_BYTES","nameLocation":"1214:12:1","nodeType":"VariableDeclaration","scope":1072,"src":"1188:91:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"1188:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303031","id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1237:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000001"},"visibility":"internal"},{"constant":true,"id":637,"mutability":"constant","name":"DERIVE_KEY","nameLocation":"1311:10:1","nodeType":"VariableDeclaration","scope":1072,"src":"1285:89:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303032","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000002"},"visibility":"internal"},{"constant":true,"id":640,"mutability":"constant","name":"ENCRYPT","nameLocation":"1406:7:1","nodeType":"VariableDeclaration","scope":1072,"src":"1380:86:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"1380:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303033","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1424:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000003"},"visibility":"internal"},{"constant":true,"id":643,"mutability":"constant","name":"DECRYPT","nameLocation":"1498:7:1","nodeType":"VariableDeclaration","scope":1072,"src":"1472:86:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303034","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1516:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000004"},"visibility":"internal"},{"constant":true,"id":646,"mutability":"constant","name":"GENERATE_SIGNING_KEYPAIR","nameLocation":"1590:24:1","nodeType":"VariableDeclaration","scope":1072,"src":"1564:103:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"1564:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303035","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1625:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000005"},"visibility":"internal"},{"constant":true,"id":649,"mutability":"constant","name":"SIGN_DIGEST","nameLocation":"1699:11:1","nodeType":"VariableDeclaration","scope":1072,"src":"1673:90:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"1673:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303036","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1721:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000006"},"visibility":"internal"},{"constant":true,"id":652,"mutability":"constant","name":"VERIFY_DIGEST","nameLocation":"1795:13:1","nodeType":"VariableDeclaration","scope":1072,"src":"1769:92:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303037","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1819:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000007"},"visibility":"internal"},{"constant":true,"id":655,"mutability":"constant","name":"CURVE25519_PUBLIC_KEY","nameLocation":"1893:21:1","nodeType":"VariableDeclaration","scope":1072,"src":"1867:100:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303038","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1925:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000008"},"visibility":"internal"},{"constant":true,"id":658,"mutability":"constant","name":"GAS_USED","nameLocation":"1999:8:1","nodeType":"VariableDeclaration","scope":1072,"src":"1973:87:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303039","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2018:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000009"},"visibility":"internal"},{"constant":true,"id":661,"mutability":"constant","name":"PAD_GAS","nameLocation":"2092:7:1","nodeType":"VariableDeclaration","scope":1072,"src":"2066:86:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030303061","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2110:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x010000000000000000000000000000000000000a"},"visibility":"internal"},{"constant":true,"id":664,"mutability":"constant","name":"SHA512_256","nameLocation":"2228:10:1","nodeType":"VariableDeclaration","scope":1072,"src":"2202:89:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"2202:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030313031","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2249:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000101"},"visibility":"internal"},{"constant":true,"id":667,"mutability":"constant","name":"SHA512","nameLocation":"2323:6:1","nodeType":"VariableDeclaration","scope":1072,"src":"2297:85:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"2297:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030313032","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2340:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000102"},"visibility":"internal"},{"constant":true,"id":670,"mutability":"constant","name":"SHA384","nameLocation":"2414:6:1","nodeType":"VariableDeclaration","scope":1072,"src":"2388:85:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"2388:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830313030303030303030303030303030303030303030303030303030303030303030303030313034","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2431:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0100000000000000000000000000000000000104"},"visibility":"internal"},{"canonicalName":"Sapphire.Curve25519PublicKey","id":672,"name":"Curve25519PublicKey","nameLocation":"2485:19:1","nodeType":"UserDefinedValueTypeDefinition","src":"2480:36:1","underlyingType":{"id":671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2508:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"Sapphire.Curve25519SecretKey","id":674,"name":"Curve25519SecretKey","nameLocation":"2526:19:1","nodeType":"UserDefinedValueTypeDefinition","src":"2521:36:1","underlyingType":{"id":673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2549:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"Sapphire.SigningAlg","id":684,"members":[{"id":675,"name":"Ed25519Oasis","nameLocation":"2782:12:1","nodeType":"EnumValue","src":"2782:12:1"},{"id":676,"name":"Ed25519Pure","nameLocation":"2861:11:1","nodeType":"EnumValue","src":"2861:11:1"},{"id":677,"name":"Ed25519PrehashedSha512","nameLocation":"2956:22:1","nodeType":"EnumValue","src":"2956:22:1"},{"id":678,"name":"Secp256k1Oasis","nameLocation":"3183:14:1","nodeType":"EnumValue","src":"3183:14:1"},{"id":679,"name":"Secp256k1PrehashedKeccak256","nameLocation":"3344:27:1","nodeType":"EnumValue","src":"3344:27:1"},{"id":680,"name":"Secp256k1PrehashedSha256","nameLocation":"3447:24:1","nodeType":"EnumValue","src":"3447:24:1"},{"id":681,"name":"Sr25519","nameLocation":"3538:7:1","nodeType":"EnumValue","src":"3538:7:1"},{"id":682,"name":"Secp256r1PrehashedSha256","nameLocation":"3621:24:1","nodeType":"EnumValue","src":"3621:24:1"},{"id":683,"name":"Secp384r1PrehashedSha384","nameLocation":"3721:24:1","nodeType":"EnumValue","src":"3721:24:1"}],"name":"SigningAlg","nameLocation":"2568:10:1","nodeType":"EnumDefinition","src":"2563:1188:1"},{"body":{"id":714,"nodeType":"Block","src":"6117:202:1","statements":[{"assignments":[695,697],"declarations":[{"constant":false,"id":695,"mutability":"mutable","name":"success","nameLocation":"6133:7:1","nodeType":"VariableDeclaration","scope":714,"src":"6128:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":694,"name":"bool","nodeType":"ElementaryTypeName","src":"6128:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"entropy","nameLocation":"6155:7:1","nodeType":"VariableDeclaration","scope":714,"src":"6142:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":696,"name":"bytes","nodeType":"ElementaryTypeName","src":"6142:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":706,"initialValue":{"arguments":[{"arguments":[{"id":702,"name":"numBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"6214:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":703,"name":"pers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"6224:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":700,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6203:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6207:6:1","memberName":"encode","nodeType":"MemberAccess","src":"6203:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6203:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":698,"name":"RANDOM_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"6166:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6179:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"6166:23:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6166:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6127:112:1"},{"expression":{"arguments":[{"id":708,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"6257:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"72616e646f6d42797465733a206661696c6564","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6266:21:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac","typeString":"literal_string \"randomBytes: failed\""},"value":"randomBytes: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_54f87774dc8d710bae7c8849a070812ab4228b580286569c644fb9102fd93bac","typeString":"literal_string \"randomBytes: failed\""}],"id":707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6249:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6249:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"ExpressionStatement","src":"6249:39:1"},{"expression":{"id":712,"name":"entropy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"6305:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":693,"id":713,"nodeType":"Return","src":"6298:14:1"}]},"documentation":{"id":685,"nodeType":"StructuredDocumentation","src":"3757:2232:1","text":" @notice Generate `num_bytes` pseudo-random bytes, with an optional\n personalization string (`pers`) added into the hashing algorithm to\n increase domain separation when needed.\n #### Precompile address\n `0x0100000000000000000000000000000000000001`\n #### Gas cost\n 10,000 minimum plus 240 per output word plus 60 per word of the\n personalization string.\n #### Implementation details\n The mode (e.g. simulation or \"view call\" vs transaction execution) is fed\n to TupleHash (among other block-dependent components) to derive the \"key\n id\", which is then used to derive a per-block VRF key from\n epoch-ephemeral entropy (using KMAC256 and cSHAKE) so a different key\n id will result in a unique per-block VRF key. This per-block VRF key is\n then used to create the per-block root RNG which is then used to derive\n domain-separated (using Merlin transcripts) per-transaction random RNGs\n which are then exposed via this precompile. The KMAC, cSHAKE and\n TupleHash algorithms are SHA-3 derived functions defined in [NIST\n Special Publication 800-185](https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-185.pdf).\n #### DANGER: Prior to Sapphire ParaTime 0.6.0\n All view queries and simulated transactions (via `eth_call`) would\n receive the same entropy in-between blocks if they use the same\n `num_bytes` and `pers` parameters. If your contract requires\n confidentiality you should generate a secret in the constructor to be\n used with view calls:\n ```solidity\n Sapphire.randomBytes(64, abi.encodePacked(msg.sender, this.perContactSecret));\n ```\n #### Example\n ```solidity\n bytes memory randomPad = Sapphire.randomBytes(64, \"\");\n ```\n @param numBytes The number of bytes to return.\n @param pers An optional personalization string to increase domain\n        separation.\n @return The random bytes. If the number of bytes requested is too large\n         (over 1024), a smaller amount (1024) will be returned."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"randomBytes","nameLocation":"6003:11:1","nodeType":"FunctionDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"numBytes","nameLocation":"6023:8:1","nodeType":"VariableDeclaration","scope":715,"src":"6015:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"6015:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"pers","nameLocation":"6046:4:1","nodeType":"VariableDeclaration","scope":715,"src":"6033:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":688,"name":"bytes","nodeType":"ElementaryTypeName","src":"6033:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6014:37:1"},"returnParameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":715,"src":"6099:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":691,"name":"bytes","nodeType":"ElementaryTypeName","src":"6099:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6098:14:1"},"scope":1072,"src":"5994:325:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"6814:604:1","statements":[{"assignments":[728],"declarations":[{"constant":false,"id":728,"mutability":"mutable","name":"scalar","nameLocation":"6837:6:1","nodeType":"VariableDeclaration","scope":782,"src":"6824:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":727,"name":"bytes","nodeType":"ElementaryTypeName","src":"6824:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":733,"initialValue":{"arguments":[{"hexValue":"3332","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6858:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":731,"name":"pers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"6862:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":729,"name":"randomBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"6846:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,bytes memory) view returns (bytes memory)"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6846:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6824:43:1"},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":734,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6928:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":736,"indexExpression":{"hexValue":"30","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6935:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6928:9:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"&=","rightHandSide":{"hexValue":"30786638","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6941:4:1","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"0xf8"},"src":"6928:17:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":739,"nodeType":"ExpressionStatement","src":"6928:17:1"},{"expression":{"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":740,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7015:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":742,"indexExpression":{"hexValue":"3331","id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7022:2:1","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7015:10:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"&=","rightHandSide":{"hexValue":"30783766","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7029:4:1","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"0x7f"},"src":"7015:18:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":745,"nodeType":"ExpressionStatement","src":"7015:18:1"},{"expression":{"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":746,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7068:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":748,"indexExpression":{"hexValue":"3331","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7075:2:1","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7068:10:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"hexValue":"30783430","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7082:4:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"7068:18:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":751,"nodeType":"ExpressionStatement","src":"7068:18:1"},{"assignments":[753,755],"declarations":[{"constant":false,"id":753,"mutability":"mutable","name":"success","nameLocation":"7123:7:1","nodeType":"VariableDeclaration","scope":782,"src":"7118:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":752,"name":"bool","nodeType":"ElementaryTypeName","src":"7118:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"pkBytes","nameLocation":"7145:7:1","nodeType":"VariableDeclaration","scope":782,"src":"7132:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":754,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":760,"initialValue":{"arguments":[{"id":758,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7202:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":756,"name":"CURVE25519_PUBLIC_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"7156:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7178:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"7156:32:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7156:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7117:101:1"},{"expression":{"arguments":[{"id":762,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7236:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"67656e206375727665323535313920706b3a206661696c6564","id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7245:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a9a56956fb564bd7fa7e5455f2d50e37d7cff16ebd3280d11122562b576157d","typeString":"literal_string \"gen curve25519 pk: failed\""},"value":"gen curve25519 pk: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a9a56956fb564bd7fa7e5455f2d50e37d7cff16ebd3280d11122562b576157d","typeString":"literal_string \"gen curve25519 pk: failed\""}],"id":761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7228:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7228:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":765,"nodeType":"ExpressionStatement","src":"7228:45:1"},{"expression":{"components":[{"arguments":[{"arguments":[{"id":770,"name":"pkBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7337:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7329:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7329:7:1","typeDescriptions":{}}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7329:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":766,"name":"Curve25519PublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"7304:19:1","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Curve25519PublicKey_$672_$","typeString":"type(Sapphire.Curve25519PublicKey)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7324:4:1","memberName":"wrap","nodeType":"MemberAccess","src":"7304:24:1","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Curve25519PublicKey_$672_$","typeString":"function (bytes32) pure returns (Sapphire.Curve25519PublicKey)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7304:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$672","typeString":"Sapphire.Curve25519PublicKey"}},{"arguments":[{"arguments":[{"id":777,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7393:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7385:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7385:7:1","typeDescriptions":{}}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7385:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":773,"name":"Curve25519SecretKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"7360:19:1","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Curve25519SecretKey_$674_$","typeString":"type(Sapphire.Curve25519SecretKey)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7380:4:1","memberName":"wrap","nodeType":"MemberAccess","src":"7360:24:1","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Curve25519SecretKey_$674_$","typeString":"function (bytes32) pure returns (Sapphire.Curve25519SecretKey)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7360:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$674","typeString":"Sapphire.Curve25519SecretKey"}}],"id":780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7290:121:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Curve25519PublicKey_$672_$_t_userDefinedValueType$_Curve25519SecretKey_$674_$","typeString":"tuple(Sapphire.Curve25519PublicKey,Sapphire.Curve25519SecretKey)"}},"functionReturnParameters":726,"id":781,"nodeType":"Return","src":"7283:128:1"}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"6325:331:1","text":" @notice Generates a Curve25519 keypair.\n @param pers An optional personalization string used to add domain\n separation.\n @return pk The Curve25519 public key. Useful for key exchange.\n @return sk The Curve25519 secret key. Pairs well with\n [deriveSymmetricKey](#derivesymmetrickey)."},"id":783,"implemented":true,"kind":"function","modifiers":[],"name":"generateCurve25519KeyPair","nameLocation":"6670:25:1","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"pers","nameLocation":"6709:4:1","nodeType":"VariableDeclaration","scope":783,"src":"6696:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":717,"name":"bytes","nodeType":"ElementaryTypeName","src":"6696:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6695:19:1"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"pk","nameLocation":"6782:2:1","nodeType":"VariableDeclaration","scope":783,"src":"6762:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$672","typeString":"Sapphire.Curve25519PublicKey"},"typeName":{"id":721,"nodeType":"UserDefinedTypeName","pathNode":{"id":720,"name":"Curve25519PublicKey","nameLocations":["6762:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"6762:19:1"},"referencedDeclaration":672,"src":"6762:19:1","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$672","typeString":"Sapphire.Curve25519PublicKey"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"sk","nameLocation":"6806:2:1","nodeType":"VariableDeclaration","scope":783,"src":"6786:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$674","typeString":"Sapphire.Curve25519SecretKey"},"typeName":{"id":724,"nodeType":"UserDefinedTypeName","pathNode":{"id":723,"name":"Curve25519SecretKey","nameLocations":["6786:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":674,"src":"6786:19:1"},"referencedDeclaration":674,"src":"6786:19:1","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$674","typeString":"Sapphire.Curve25519SecretKey"}},"visibility":"internal"}],"src":"6761:48:1"},"scope":1072,"src":"6661:757:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":818,"nodeType":"Block","src":"8156:230:1","statements":[{"assignments":[796,798],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"success","nameLocation":"8172:7:1","nodeType":"VariableDeclaration","scope":818,"src":"8167:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":795,"name":"bool","nodeType":"ElementaryTypeName","src":"8167:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"symmetric","nameLocation":"8194:9:1","nodeType":"VariableDeclaration","scope":818,"src":"8181:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":797,"name":"bytes","nodeType":"ElementaryTypeName","src":"8181:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":807,"initialValue":{"arguments":[{"arguments":[{"id":803,"name":"peerPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"8253:13:1","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$672","typeString":"Sapphire.Curve25519PublicKey"}},{"id":804,"name":"secretKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"8268:9:1","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$674","typeString":"Sapphire.Curve25519SecretKey"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$672","typeString":"Sapphire.Curve25519PublicKey"},{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$674","typeString":"Sapphire.Curve25519SecretKey"}],"expression":{"id":801,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8242:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8246:6:1","memberName":"encode","nodeType":"MemberAccess","src":"8242:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8242:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":799,"name":"DERIVE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8207:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8218:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"8207:21:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8207:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8166:122:1"},{"expression":{"arguments":[{"id":809,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"8306:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"64657269766553796d6d65747269634b65793a206661696c6564","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8315:28:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_987d340c438896174a2eb0db3a73ef80f720679a81bbb0b9ea3aa4467ab72d02","typeString":"literal_string \"deriveSymmetricKey: failed\""},"value":"deriveSymmetricKey: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_987d340c438896174a2eb0db3a73ef80f720679a81bbb0b9ea3aa4467ab72d02","typeString":"literal_string \"deriveSymmetricKey: failed\""}],"id":808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8298:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8298:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"8298:46:1"},{"expression":{"arguments":[{"id":815,"name":"symmetric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"8369:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8361:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":813,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:1","typeDescriptions":{}}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":794,"id":817,"nodeType":"Return","src":"8354:25:1"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"7424:579:1","text":" @notice Derive a symmetric key from a pair of keys using x25519.\n #### Precompile address\n `0x0100000000000000000000000000000000000002`\n #### Gas cost\n 100,000\n #### Example\n ```solidity\n bytes32 publicKey = ... ;\n bytes32 privateKey = ... ;\n bytes32 symmetric = Sapphire.deriveSymmetricKey(publicKey, privateKey);\n ```\n @param peerPublicKey The peer's public key.\n @param secretKey Your secret key.\n @return A derived symmetric key."},"id":819,"implemented":true,"kind":"function","modifiers":[],"name":"deriveSymmetricKey","nameLocation":"8017:18:1","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"peerPublicKey","nameLocation":"8065:13:1","nodeType":"VariableDeclaration","scope":819,"src":"8045:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$672","typeString":"Sapphire.Curve25519PublicKey"},"typeName":{"id":786,"nodeType":"UserDefinedTypeName","pathNode":{"id":785,"name":"Curve25519PublicKey","nameLocations":["8045:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"8045:19:1"},"referencedDeclaration":672,"src":"8045:19:1","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519PublicKey_$672","typeString":"Sapphire.Curve25519PublicKey"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"secretKey","nameLocation":"8108:9:1","nodeType":"VariableDeclaration","scope":819,"src":"8088:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$674","typeString":"Sapphire.Curve25519SecretKey"},"typeName":{"id":789,"nodeType":"UserDefinedTypeName","pathNode":{"id":788,"name":"Curve25519SecretKey","nameLocations":["8088:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":674,"src":"8088:19:1"},"referencedDeclaration":674,"src":"8088:19:1","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Curve25519SecretKey_$674","typeString":"Sapphire.Curve25519SecretKey"}},"visibility":"internal"}],"src":"8035:88:1"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":819,"src":"8147:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8147:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8146:9:1"},"scope":1072,"src":"8008:378:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":855,"nodeType":"Block","src":"9556:222:1","statements":[{"assignments":[834,836],"declarations":[{"constant":false,"id":834,"mutability":"mutable","name":"success","nameLocation":"9572:7:1","nodeType":"VariableDeclaration","scope":855,"src":"9567:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":833,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"ciphertext","nameLocation":"9594:10:1","nodeType":"VariableDeclaration","scope":855,"src":"9581:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":835,"name":"bytes","nodeType":"ElementaryTypeName","src":"9581:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":847,"initialValue":{"arguments":[{"arguments":[{"id":841,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"9651:3:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":842,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"9656:5:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":843,"name":"plaintext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"9663:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":844,"name":"additionalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"9674:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":839,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9640:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9644:6:1","memberName":"encode","nodeType":"MemberAccess","src":"9640:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9640:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":837,"name":"ENCRYPT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"9608:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9616:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"9608:18:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9608:91:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9566:133:1"},{"expression":{"arguments":[{"id":849,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"9717:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"656e63727970743a206661696c6564","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9726:17:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_5614603d541e467d6f35299b6c494d6d7c96318fd9033e95f551373c3052a781","typeString":"literal_string \"encrypt: failed\""},"value":"encrypt: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5614603d541e467d6f35299b6c494d6d7c96318fd9033e95f551373c3052a781","typeString":"literal_string \"encrypt: failed\""}],"id":848,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9709:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9709:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"9709:35:1"},{"expression":{"id":853,"name":"ciphertext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"9761:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":832,"id":854,"nodeType":"Return","src":"9754:17:1"}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"8392:986:1","text":" @notice Encrypt and authenticate the plaintext and additional data using\n DeoxysII.\n #### Precompile address\n `0x0100000000000000000000000000000000000003`\n #### Gas cost\n 50,000 minimum plus 100 per word of input\n #### Example\n ```solidity\n bytes32 key = ... ;\n bytes32 nonce = ... ;\n bytes memory text = \"plain text\";\n bytes memory ad = \"additional data\";\n bytes memory encrypted = Sapphire.encrypt(key, nonce, text, ad);\n bytes memory decrypted = Sapphire.decrypt(key, nonce, encrypted, ad);\n ```\n @param key The key to use for encryption.\n @param nonce The nonce. Note that only the first 15 bytes of this\n parameter are used.\n @param plaintext The plaintext to encrypt and authenticate.\n @param additionalData The additional data to authenticate.\n @return The ciphertext with appended auth tag."},"id":856,"implemented":true,"kind":"function","modifiers":[],"name":"encrypt","nameLocation":"9392:7:1","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"key","nameLocation":"9417:3:1","nodeType":"VariableDeclaration","scope":856,"src":"9409:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9409:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"nonce","nameLocation":"9438:5:1","nodeType":"VariableDeclaration","scope":856,"src":"9430:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9430:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"plaintext","nameLocation":"9466:9:1","nodeType":"VariableDeclaration","scope":856,"src":"9453:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":825,"name":"bytes","nodeType":"ElementaryTypeName","src":"9453:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"additionalData","nameLocation":"9498:14:1","nodeType":"VariableDeclaration","scope":856,"src":"9485:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":827,"name":"bytes","nodeType":"ElementaryTypeName","src":"9485:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9399:119:1"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":856,"src":"9542:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":830,"name":"bytes","nodeType":"ElementaryTypeName","src":"9542:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9541:14:1"},"scope":1072,"src":"9383:395:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":892,"nodeType":"Block","src":"11014:221:1","statements":[{"assignments":[871,873],"declarations":[{"constant":false,"id":871,"mutability":"mutable","name":"success","nameLocation":"11030:7:1","nodeType":"VariableDeclaration","scope":892,"src":"11025:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":870,"name":"bool","nodeType":"ElementaryTypeName","src":"11025:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"plaintext","nameLocation":"11052:9:1","nodeType":"VariableDeclaration","scope":892,"src":"11039:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":872,"name":"bytes","nodeType":"ElementaryTypeName","src":"11039:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":884,"initialValue":{"arguments":[{"arguments":[{"id":878,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"11108:3:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":879,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"11113:5:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":880,"name":"ciphertext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"11120:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":881,"name":"additionalData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"11132:14:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":876,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11097:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11101:6:1","memberName":"encode","nodeType":"MemberAccess","src":"11097:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11097:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":874,"name":"DECRYPT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"11065:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11073:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"11065:18:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:92:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11024:133:1"},{"expression":{"arguments":[{"id":886,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"11175:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"646563727970743a206661696c6564","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11184:17:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_903e0471dcbfc795d05065e8a540355c389c64753c3dd674c3f3e786b2d3807c","typeString":"literal_string \"decrypt: failed\""},"value":"decrypt: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_903e0471dcbfc795d05065e8a540355c389c64753c3dd674c3f3e786b2d3807c","typeString":"literal_string \"decrypt: failed\""}],"id":885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11167:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11167:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":889,"nodeType":"ExpressionStatement","src":"11167:35:1"},{"expression":{"id":890,"name":"plaintext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"11219:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":869,"id":891,"nodeType":"Return","src":"11212:16:1"}]},"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"9784:1051:1","text":" @notice Decrypt and authenticate the ciphertext and additional data using\n DeoxysII. Reverts if the auth tag is incorrect.\n #### Precompile address\n `0x0100000000000000000000000000000000000004`\n #### Gas cost\n 50,000 minimum plus 100 per word of input\n #### Example\n ```solidity\n bytes32 key = ... ;\n bytes32 nonce = ... ;\n bytes memory text = \"plain text\";\n bytes memory ad = \"additional data\";\n bytes memory encrypted = Sapphire.encrypt(key, nonce, text, ad);\n bytes memory decrypted = Sapphire.decrypt(key, nonce, encrypted, ad);\n ```\n @param key The key to use for decryption.\n @param nonce The nonce. Note that only the first 15 bytes of this\n parameter are used.\n @param ciphertext The ciphertext with tag to decrypt and authenticate.\n @param additionalData The additional data to authenticate against the\n ciphertext.\n @return The original plaintext."},"id":893,"implemented":true,"kind":"function","modifiers":[],"name":"decrypt","nameLocation":"10849:7:1","nodeType":"FunctionDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"key","nameLocation":"10874:3:1","nodeType":"VariableDeclaration","scope":893,"src":"10866:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10866:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"nonce","nameLocation":"10895:5:1","nodeType":"VariableDeclaration","scope":893,"src":"10887:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"ciphertext","nameLocation":"10923:10:1","nodeType":"VariableDeclaration","scope":893,"src":"10910:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":862,"name":"bytes","nodeType":"ElementaryTypeName","src":"10910:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"additionalData","nameLocation":"10956:14:1","nodeType":"VariableDeclaration","scope":893,"src":"10943:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":864,"name":"bytes","nodeType":"ElementaryTypeName","src":"10943:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10856:120:1"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":893,"src":"11000:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":867,"name":"bytes","nodeType":"ElementaryTypeName","src":"11000:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10999:14:1"},"scope":1072,"src":"10840:395:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":934,"nodeType":"Block","src":"13244:236:1","statements":[{"assignments":[907,909],"declarations":[{"constant":false,"id":907,"mutability":"mutable","name":"success","nameLocation":"13260:7:1","nodeType":"VariableDeclaration","scope":934,"src":"13255:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":906,"name":"bool","nodeType":"ElementaryTypeName","src":"13255:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"keypair","nameLocation":"13282:7:1","nodeType":"VariableDeclaration","scope":934,"src":"13269:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":908,"name":"bytes","nodeType":"ElementaryTypeName","src":"13269:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":918,"initialValue":{"arguments":[{"arguments":[{"id":914,"name":"alg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"13353:3:1","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"}},{"id":915,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"13358:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":912,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13342:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13346:6:1","memberName":"encode","nodeType":"MemberAccess","src":"13342:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13342:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":910,"name":"GENERATE_SIGNING_KEYPAIR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"13293:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13331:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"13293:48:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13293:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13254:110:1"},{"expression":{"arguments":[{"id":920,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"13382:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"67656e207369676e696e67206b6579706169723a206661696c6564","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13391:29:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b9267465e161c284a8a39384fdde2f97aa1902373695a1437fb9bfd91d7de20","typeString":"literal_string \"gen signing keypair: failed\""},"value":"gen signing keypair: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7b9267465e161c284a8a39384fdde2f97aa1902373695a1437fb9bfd91d7de20","typeString":"literal_string \"gen signing keypair: failed\""}],"id":919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13374:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13374:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":923,"nodeType":"ExpressionStatement","src":"13374:47:1"},{"expression":{"arguments":[{"id":926,"name":"keypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"13449:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13459:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":927,"name":"bytes","nodeType":"ElementaryTypeName","src":"13459:5:1","typeDescriptions":{}}},{"id":930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13466:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":929,"name":"bytes","nodeType":"ElementaryTypeName","src":"13466:5:1","typeDescriptions":{}}}],"id":931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:14:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(bytes storage pointer),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(bytes storage pointer),type(bytes storage pointer))"}],"expression":{"id":924,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13438:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13442:6:1","memberName":"decode","nodeType":"MemberAccess","src":"13438:10:1","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13438:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,bytes memory)"}},"functionReturnParameters":905,"id":933,"nodeType":"Return","src":"13431:42:1"}]},"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"11241:1832:1","text":" @notice Generate a public/private key pair using the specified method and\n seed. The available methods are items in the\n [`Sapphire.SigningAlg`](#signingalg) enum. Note, however, that the\n generation method ignores subvariants, so all three Ed25519-based are\n equivalent, and all Secp256k1 & Secp256r1 based methods are equivalent.\n Sr25519 is not available and will return an error.\n #### Precompile address\n `0x0100000000000000000000000000000000000005`\n #### Gas Cost\n ##### Ed25519: 1,000 gas\n - `0` (`Ed25519Oasis`)\n - `1` (`Ed25519Pure`)\n - `2` (`Ed25519PrehashedSha512`)\n ##### Secp256k1: 1,500 gas.\n - `3` (`Secp256k1Oasis`)\n - `4` (`Secp256k1PrehashedKeccak256`)\n - `5` (`Secp256k1PrehashedSha256`)\n ##### Secp256r1: 4,000 gas\n - `7` (`Secp256r1PrehashedSha256`)\n #### Public Key Format\n ##### Ed25519\n 32 bytes\n ##### Secp256k1 & Secp256r1\n 33 bytes, compressed format (`0x02` or `0x03` prefix, then 32 byte X\n coordinate).\n #### Example\n ```solidity\n bytes memory seed = hex\"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\";\n bytes memory publicKey;\n bytes memory privateKey;\n (publicKey, privateKey) = Sapphire.generateSigningKeyPair(Sapphire.SigningAlg.Ed25519Pure, seed);\n ```\n @param alg The signing alg for which to generate a keypair.\n @param seed The seed to use for generating the key pair. You can use the\n `randomBytes` method if you don't already have a seed.\n @return publicKey The public half of the keypair.\n @return secretKey The secret half of the keypair."},"id":935,"implemented":true,"kind":"function","modifiers":[],"name":"generateSigningKeyPair","nameLocation":"13087:22:1","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"alg","nameLocation":"13121:3:1","nodeType":"VariableDeclaration","scope":935,"src":"13110:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"},"typeName":{"id":896,"nodeType":"UserDefinedTypeName","pathNode":{"id":895,"name":"SigningAlg","nameLocations":["13110:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":684,"src":"13110:10:1"},"referencedDeclaration":684,"src":"13110:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"seed","nameLocation":"13139:4:1","nodeType":"VariableDeclaration","scope":935,"src":"13126:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":898,"name":"bytes","nodeType":"ElementaryTypeName","src":"13126:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13109:35:1"},"returnParameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"publicKey","nameLocation":"13205:9:1","nodeType":"VariableDeclaration","scope":935,"src":"13192:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":901,"name":"bytes","nodeType":"ElementaryTypeName","src":"13192:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"secretKey","nameLocation":"13229:9:1","nodeType":"VariableDeclaration","scope":935,"src":"13216:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":903,"name":"bytes","nodeType":"ElementaryTypeName","src":"13216:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13191:48:1"},"scope":1072,"src":"13078:402:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":972,"nodeType":"Block","src":"16286:210:1","statements":[{"assignments":[951,953],"declarations":[{"constant":false,"id":951,"mutability":"mutable","name":"success","nameLocation":"16302:7:1","nodeType":"VariableDeclaration","scope":972,"src":"16297:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":950,"name":"bool","nodeType":"ElementaryTypeName","src":"16297:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"sig","nameLocation":"16324:3:1","nodeType":"VariableDeclaration","scope":972,"src":"16311:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":952,"name":"bytes","nodeType":"ElementaryTypeName","src":"16311:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":964,"initialValue":{"arguments":[{"arguments":[{"id":958,"name":"alg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"16378:3:1","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"}},{"id":959,"name":"secretKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"16383:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":960,"name":"contextOrHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"16394:13:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":961,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"16409:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":956,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16367:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16371:6:1","memberName":"encode","nodeType":"MemberAccess","src":"16367:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16367:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":954,"name":"SIGN_DIGEST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"16331:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16343:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"16331:22:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16331:96:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16296:131:1"},{"expression":{"arguments":[{"id":966,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"16445:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7369676e3a206661696c6564","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16454:14:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_30424c91df67870892b008f1299c54dc8a7ff30cbedf2b16aaa52c514b69b2af","typeString":"literal_string \"sign: failed\""},"value":"sign: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30424c91df67870892b008f1299c54dc8a7ff30cbedf2b16aaa52c514b69b2af","typeString":"literal_string \"sign: failed\""}],"id":965,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16437:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16437:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":969,"nodeType":"ExpressionStatement","src":"16437:32:1"},{"expression":{"id":970,"name":"sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"16486:3:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":949,"id":971,"nodeType":"Return","src":"16479:10:1"}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"13486:2606:1","text":" @notice Sign a message within the provided context using the specified\n algorithm, and return the signature. The `context_or_digest` and\n `messages` parameters change in meaning slightly depending on the method\n requested. For methods that take a context in addition to the message you\n must pass the context in the `context_or_digest` parameter and use\n `message` as expected. For methods that take a pre-existing hash of the\n message, pass that in `context_or_digest` and leave `message` empty.\n Specifically the `Ed25519Oasis` and `Secp256k1Oasis` variants take both a\n context and a message (each are variable length `bytes`), the context\n serves as a domain separator.\n #### Precompile address\n `0x0100000000000000000000000000000000000006`\n #### Gas cost\n See below for the method-dependent base cost, plus 8 gas per 32 bytes of\n context and message except digest.\n #### Signing algorithms\n - `0` (`Ed25519Oasis`): 1,500 gas, variable length context and message.\n - `1` (`Ed25519Pure`): 1,500 gas, empty context, variable length message.\n - `2` (`Ed25519PrehashedSha512`): 1,500 gas, pre-existing SHA-512 hash\n   (64 bytes) as context, empty message.\n - `3` (`Secp256k1Oasis`): 3,000 gas, variable length context and message\n - `4` (`Secp256k1PrehashedKeccak256`): 3,000 gas, pre-existing hash\n   (32 bytes) as context, empty message.\n - `5` (`Secp256k1PrehashedSha256`): 3,000 gas, pre-existing hash (32\n   bytes) as context, empty message.\n - `7` (`Secp256r1PrehashedSha256`): 9,000 gas, pre-existing hash (32\n   bytes) as context, empty message.\n #### Example\n ```solidity\n Sapphire.SigningAlg alg = Sapphire.SigningAlg.Ed25519Pure;\n bytes memory pk;\n bytes memory sk;\n (pk, sk) = Sapphire.generateSigningKeyPair(alg, Sapphire.randomBytes(32, \"\"));\n bytes memory signature = Sapphire.sign(alg, sk, \"\", \"signed message\");\n ```\n @param alg The signing algorithm to use.\n @param secretKey The secret key to use for signing. The key must be valid\n for use with the requested algorithm.\n @param contextOrHash Domain-Separator Context, or precomputed hash bytes.\n @param message Message to sign, should be zero-length if precomputed hash\n given.\n @return signature The resulting signature.\n @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_sign"},"id":973,"implemented":true,"kind":"function","modifiers":[],"name":"sign","nameLocation":"16106:4:1","nodeType":"FunctionDefinition","parameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"alg","nameLocation":"16131:3:1","nodeType":"VariableDeclaration","scope":973,"src":"16120:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"},"typeName":{"id":938,"nodeType":"UserDefinedTypeName","pathNode":{"id":937,"name":"SigningAlg","nameLocations":["16120:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":684,"src":"16120:10:1"},"referencedDeclaration":684,"src":"16120:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"secretKey","nameLocation":"16157:9:1","nodeType":"VariableDeclaration","scope":973,"src":"16144:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":940,"name":"bytes","nodeType":"ElementaryTypeName","src":"16144:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"contextOrHash","nameLocation":"16189:13:1","nodeType":"VariableDeclaration","scope":973,"src":"16176:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":942,"name":"bytes","nodeType":"ElementaryTypeName","src":"16176:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"message","nameLocation":"16225:7:1","nodeType":"VariableDeclaration","scope":973,"src":"16212:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":944,"name":"bytes","nodeType":"ElementaryTypeName","src":"16212:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16110:128:1"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"signature","nameLocation":"16275:9:1","nodeType":"VariableDeclaration","scope":973,"src":"16262:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":947,"name":"bytes","nodeType":"ElementaryTypeName","src":"16262:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16261:24:1"},"scope":1072,"src":"16097:399:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1019,"nodeType":"Block","src":"18816:241:1","statements":[{"assignments":[991,993],"declarations":[{"constant":false,"id":991,"mutability":"mutable","name":"success","nameLocation":"18832:7:1","nodeType":"VariableDeclaration","scope":1019,"src":"18827:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":990,"name":"bool","nodeType":"ElementaryTypeName","src":"18827:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"v","nameLocation":"18854:1:1","nodeType":"VariableDeclaration","scope":1019,"src":"18841:14:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":992,"name":"bytes","nodeType":"ElementaryTypeName","src":"18841:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1005,"initialValue":{"arguments":[{"arguments":[{"id":998,"name":"alg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"18908:3:1","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"}},{"id":999,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"18913:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1000,"name":"contextOrHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"18924:13:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1001,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"18939:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1002,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"18948:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":996,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18897:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18901:6:1","memberName":"encode","nodeType":"MemberAccess","src":"18897:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18897:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":994,"name":"VERIFY_DIGEST","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"18859:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18873:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"18859:24:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18859:109:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18826:142:1"},{"expression":{"arguments":[{"id":1007,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"18986:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7665726966793a206661696c6564","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18995:16:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2","typeString":"literal_string \"verify: failed\""},"value":"verify: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2","typeString":"literal_string \"verify: failed\""}],"id":1006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18978:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18978:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1010,"nodeType":"ExpressionStatement","src":"18978:34:1"},{"expression":{"arguments":[{"id":1013,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"19040:1:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19044:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1014,"name":"bool","nodeType":"ElementaryTypeName","src":"19044:4:1","typeDescriptions":{}}}],"id":1016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19043:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1011,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19029:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19033:6:1","memberName":"decode","nodeType":"MemberAccess","src":"19029:10:1","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19029:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":989,"id":1018,"nodeType":"Return","src":"19022:28:1"}]},"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"16502:2095:1","text":" @notice Verifies that the provided digest was signed with using the\n secret key corresponding to the provided private key and the specified\n signing algorithm.\n The `method`, `context_or_digest` and `message` parameters have the same\n meaning as described above in the [sign()](#sign) function.\n #### Precompile address\n `0x0100000000000000000000000000000000000007`\n #### Gas cost\n The algorithm-specific base cost below, with an additional **8 gas per\n 32 bytes** of `context` and `message` for the `Ed25519Oasis`,\n `Ed25519Pure` and `Secp256k1Oasis` algorithms.\n - `0` (`Ed25519Oasis`): 2,000 gas\n - `1` (`Ed25519Pure`): 2,000 gas\n - `2` (`Ed25519PrehashedSha512`): 2,000 gas\n - `3` (`Secp256k1Oasis`): 3,000 gas\n - `4` (`Secp256k1PrehashedKeccak256`): 3,000 gas\n - `5` (`Secp256k1PrehashedSha256`): 3,000 gas\n - `7` (`Secp256r1PrehashedSha256`): 7,900 gas\n #### Example\n ```solidity\n Sapphire.SigningAlg alg = Sapphire.SigningAlg.Secp256k1PrehashedKeccak256;\n bytes memory pk;\n bytes memory sk;\n bytes memory digest = abi.encodePacked(keccak256(\"signed message\"));\n (pk, sk) = Sapphire.generateSigningKeyPair(alg, Sapphire.randomBytes(32, \"\"));\n bytes memory signature = Sapphire.sign(alg, sk, digest, \"\");\n require( Sapphire.verify(alg, pk, digest, \"\", signature) );\n ```\n @param alg The signing algorithm by which the signature was generated.\n @param publicKey The public key against which to check the signature.\n @param contextOrHash Domain-Separator Context, or precomputed hash bytes\n @param message The hash of the message that was signed, should be\n zero-length if precomputed hash was given.\n @param signature The signature to check.\n @return verified Whether the signature is valid for the given parameters.\n @custom:see @oasisprotocol/oasis-sdk :: precompile/confidential.rs :: call_verify"},"id":1020,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"18611:6:1","nodeType":"FunctionDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"alg","nameLocation":"18638:3:1","nodeType":"VariableDeclaration","scope":1020,"src":"18627:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"},"typeName":{"id":976,"nodeType":"UserDefinedTypeName","pathNode":{"id":975,"name":"SigningAlg","nameLocations":["18627:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":684,"src":"18627:10:1"},"referencedDeclaration":684,"src":"18627:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"publicKey","nameLocation":"18664:9:1","nodeType":"VariableDeclaration","scope":1020,"src":"18651:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":978,"name":"bytes","nodeType":"ElementaryTypeName","src":"18651:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"contextOrHash","nameLocation":"18696:13:1","nodeType":"VariableDeclaration","scope":1020,"src":"18683:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":980,"name":"bytes","nodeType":"ElementaryTypeName","src":"18683:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"message","nameLocation":"18732:7:1","nodeType":"VariableDeclaration","scope":1020,"src":"18719:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":982,"name":"bytes","nodeType":"ElementaryTypeName","src":"18719:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"signature","nameLocation":"18762:9:1","nodeType":"VariableDeclaration","scope":1020,"src":"18749:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":984,"name":"bytes","nodeType":"ElementaryTypeName","src":"18749:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18617:160:1"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"verified","nameLocation":"18806:8:1","nodeType":"VariableDeclaration","scope":1020,"src":"18801:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":987,"name":"bool","nodeType":"ElementaryTypeName","src":"18801:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18800:15:1"},"scope":1072,"src":"18602:455:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1041,"nodeType":"Block","src":"19431:120:1","statements":[{"assignments":[1027,null],"declarations":[{"constant":false,"id":1027,"mutability":"mutable","name":"success","nameLocation":"19447:7:1","nodeType":"VariableDeclaration","scope":1041,"src":"19442:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1026,"name":"bool","nodeType":"ElementaryTypeName","src":"19442:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1035,"initialValue":{"arguments":[{"arguments":[{"id":1032,"name":"toAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"19490:8:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1030,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19479:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19483:6:1","memberName":"encode","nodeType":"MemberAccess","src":"19479:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19479:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1028,"name":"PAD_GAS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"19460:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19468:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"19460:18:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19460:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19441:59:1"},{"expression":{"arguments":[{"id":1037,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"19518:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7665726966793a206661696c6564","id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19527:16:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2","typeString":"literal_string \"verify: failed\""},"value":"verify: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34526ef19154ceba3d8d1dd62e0cc9f5c1f5642117c7e6d24bd503b2df5eeaa2","typeString":"literal_string \"verify: failed\""}],"id":1036,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19510:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19510:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1040,"nodeType":"ExpressionStatement","src":"19510:34:1"}]},"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"19063:315:1","text":" @notice Set the current transactions gas usage to a specific amount\n @dev Will cause a reversion if the current usage is more than the amount.\n @param toAmount Gas usage will be set to this amount\n @custom:see @oasisprotocol/oasis-sdk :: precompile/gas.rs :: call_pad_gas"},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"padGas","nameLocation":"19392:6:1","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"toAmount","nameLocation":"19407:8:1","nodeType":"VariableDeclaration","scope":1042,"src":"19399:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1022,"name":"uint128","nodeType":"ElementaryTypeName","src":"19399:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"19398:18:1"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[],"src":"19431:0:1"},"scope":1072,"src":"19383:168:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1070,"nodeType":"Block","src":"19780:158:1","statements":[{"assignments":[1049,1051],"declarations":[{"constant":false,"id":1049,"mutability":"mutable","name":"success","nameLocation":"19796:7:1","nodeType":"VariableDeclaration","scope":1070,"src":"19791:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1048,"name":"bool","nodeType":"ElementaryTypeName","src":"19791:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"v","nameLocation":"19818:1:1","nodeType":"VariableDeclaration","scope":1070,"src":"19805:14:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1050,"name":"bytes","nodeType":"ElementaryTypeName","src":"19805:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1056,"initialValue":{"arguments":[{"hexValue":"","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19843:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1052,"name":"GAS_USED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"19823:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19832:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"19823:19:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19823:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19790:56:1"},{"expression":{"arguments":[{"id":1058,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"19864:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"676173757365643a206661696c6564","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19873:17:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e653402a1869061703cc1f5117b0dbd597348261905e9f4272ef2962baf4e02","typeString":"literal_string \"gasused: failed\""},"value":"gasused: failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e653402a1869061703cc1f5117b0dbd597348261905e9f4272ef2962baf4e02","typeString":"literal_string \"gasused: failed\""}],"id":1057,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19856:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19856:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"ExpressionStatement","src":"19856:35:1"},{"expression":{"arguments":[{"id":1064,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"19919:1:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19923:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1065,"name":"uint64","nodeType":"ElementaryTypeName","src":"19923:6:1","typeDescriptions":{}}}],"id":1067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19922:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"expression":{"id":1062,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19908:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19912:6:1","memberName":"decode","nodeType":"MemberAccess","src":"19908:10:1","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":1047,"id":1069,"nodeType":"Return","src":"19901:30:1"}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"19557:168:1","text":" @notice Returns the amount of gas currently used by the transaction\n @custom:see @oasisprotocol/oasis-sdk :: precompile/gas.rs :: call_gas_used"},"id":1071,"implemented":true,"kind":"function","modifiers":[],"name":"gasUsed","nameLocation":"19739:7:1","nodeType":"FunctionDefinition","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"19746:2:1"},"returnParameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1071,"src":"19772:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1045,"name":"uint64","nodeType":"ElementaryTypeName","src":"19772:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"19771:8:1"},"scope":1072,"src":"19730:208:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1156,"src":"1117:18823:1","usedErrors":[],"usedEvents":[]},{"body":{"id":1100,"nodeType":"Block","src":"21042:150:1","statements":[{"assignments":[1081,1083],"declarations":[{"constant":false,"id":1081,"mutability":"mutable","name":"success","nameLocation":"21054:7:1","nodeType":"VariableDeclaration","scope":1100,"src":"21049:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1080,"name":"bool","nodeType":"ElementaryTypeName","src":"21049:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"output","nameLocation":"21076:6:1","nodeType":"VariableDeclaration","scope":1100,"src":"21063:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1082,"name":"bytes","nodeType":"ElementaryTypeName","src":"21063:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1089,"initialValue":{"arguments":[{"id":1087,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"21117:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":1084,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"21086:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21095:10:1","memberName":"SHA512_256","nodeType":"MemberAccess","referencedDeclaration":664,"src":"21086:19:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21106:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"21086:30:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21086:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"21048:75:1"},{"expression":{"arguments":[{"id":1091,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"21138:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7368613531325f323536","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21147:12:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f75c2d6150bf32cccbc5bf7d89da5f677facb56533342da88f5e98d14214b528","typeString":"literal_string \"sha512_256\""},"value":"sha512_256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f75c2d6150bf32cccbc5bf7d89da5f677facb56533342da88f5e98d14214b528","typeString":"literal_string \"sha512_256\""}],"id":1090,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21130:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21130:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1094,"nodeType":"ExpressionStatement","src":"21130:30:1"},{"expression":{"arguments":[{"id":1097,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"21182:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21174:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21174:7:1","typeDescriptions":{}}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21174:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1079,"id":1099,"nodeType":"Return","src":"21167:22:1"}]},"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"19942:1029:1","text":" @notice Hash the input data with SHA-512/256, according to\n [NIST.FIPS.180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n #### Precompile address\n `0x0100000000000000000000000000000000000102`\n #### Gas cost\n 115 gas, then 13 gas per word\n #### Example\n ```solidity\n bytes32 result = sha512_256(abi.encodePacked(\"input data\"));\n ```\n #### Warning: SHA-512 vs SHA-512/256 Length-Extension Attacks\n [SHA-512](function.sha512.md#sha512) is vulnerable to [length-extension\n attacks](https://en.wikipedia.org/wiki/Length_extension_attack), which are\n relevant if you are computing the hash of a secret message. The\n [SHA-512/256](function.sha512_256.md#sha512_256) variant is **not**\n vulnerable to length-extension attacks.\n @param input Bytes to hash.\n @return result 32 byte digest.\n @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha512_256"},"id":1101,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"sha512_256","nameLocation":"20981:10:1","nodeType":"FunctionDefinition","parameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"input","nameLocation":"21005:5:1","nodeType":"VariableDeclaration","scope":1101,"src":"20992:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1074,"name":"bytes","nodeType":"ElementaryTypeName","src":"20992:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20991:20:1"},"returnParameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"result","nameLocation":"21034:6:1","nodeType":"VariableDeclaration","scope":1101,"src":"21026:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21026:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21025:16:1"},"scope":1156,"src":"20972:220:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1127,"nodeType":"Block","src":"22287:114:1","statements":[{"assignments":[1110],"declarations":[{"constant":false,"id":1110,"mutability":"mutable","name":"success","nameLocation":"22298:7:1","nodeType":"VariableDeclaration","scope":1127,"src":"22293:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1109,"name":"bool","nodeType":"ElementaryTypeName","src":"22293:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1111,"nodeType":"VariableDeclarationStatement","src":"22293:12:1"},{"expression":{"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1112,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"22313:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1113,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"22322:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1114,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"22312:17:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1118,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"22359:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":1115,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"22332:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22341:6:1","memberName":"SHA512","nodeType":"MemberAccess","referencedDeclaration":667,"src":"22332:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22348:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"22332:26:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22332:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"22312:53:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"ExpressionStatement","src":"22312:53:1"},{"expression":{"arguments":[{"id":1123,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"22380:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736861353132","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22389:8:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c0b70e157f7134bd6b024ec9293ed6f48b7e87b8f08a110da3cb9d2624b426a","typeString":"literal_string \"sha512\""},"value":"sha512"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c0b70e157f7134bd6b024ec9293ed6f48b7e87b8f08a110da3cb9d2624b426a","typeString":"literal_string \"sha512\""}],"id":1122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22372:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22372:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"22372:26:1"}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"21194:1021:1","text":" @notice Hash the input data with SHA-512, according to\n [NIST.FIPS.180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf)\n #### Precompile address\n `0x0100000000000000000000000000000000000101`\n #### Warning: SHA-512 vs SHA-512/256 Length-Extension Attacks\n [SHA-512](function.sha512.md#sha512) is vulnerable to [length-extension\n attacks](https://en.wikipedia.org/wiki/Length_extension_attack), which are\n relevant if you are computing the hash of a secret message. The\n [SHA-512/256](function.sha512_256.md#sha512_256) variant is **not**\n vulnerable to length-extension attacks.\n #### Gas Cost\n 115 gas, then 13 gas per word\n #### Example\n ```solidity\n bytes memory result = sha512(abi.encodePacked(\"input data\"));\n ```\n @param input Bytes to hash.\n @return output 64 byte digest.\n @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha512"},"id":1128,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"sha512","nameLocation":"22225:6:1","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"input","nameLocation":"22245:5:1","nodeType":"VariableDeclaration","scope":1128,"src":"22232:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1103,"name":"bytes","nodeType":"ElementaryTypeName","src":"22232:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22231:20:1"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"output","nameLocation":"22279:6:1","nodeType":"VariableDeclaration","scope":1128,"src":"22266:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1106,"name":"bytes","nodeType":"ElementaryTypeName","src":"22266:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22265:21:1"},"scope":1156,"src":"22216:185:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1154,"nodeType":"Block","src":"22748:114:1","statements":[{"assignments":[1137],"declarations":[{"constant":false,"id":1137,"mutability":"mutable","name":"success","nameLocation":"22759:7:1","nodeType":"VariableDeclaration","scope":1154,"src":"22754:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1136,"name":"bool","nodeType":"ElementaryTypeName","src":"22754:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1138,"nodeType":"VariableDeclarationStatement","src":"22754:12:1"},{"expression":{"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1139,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"22774:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1140,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"22783:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1141,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"22773:17:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1145,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"22820:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":1142,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"22793:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22802:6:1","memberName":"SHA384","nodeType":"MemberAccess","referencedDeclaration":670,"src":"22793:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22809:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"22793:26:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22793:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"22773:53:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1148,"nodeType":"ExpressionStatement","src":"22773:53:1"},{"expression":{"arguments":[{"id":1150,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"22841:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736861333834","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22850:8:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec6ff49708e722818e70930a24e1ab730a40b63a2d8cfc1f9445eec73ca5b6a9","typeString":"literal_string \"sha384\""},"value":"sha384"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec6ff49708e722818e70930a24e1ab730a40b63a2d8cfc1f9445eec73ca5b6a9","typeString":"literal_string \"sha384\""}],"id":1149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22833:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22833:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1153,"nodeType":"ExpressionStatement","src":"22833:26:1"}]},"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"22403:273:1","text":" @notice Hash the input data with SHA-384.\n @param input Bytes to hash.\n @return output 48 byte digest.\n @custom:standard https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n @custom:see @oasisprotocol/oasis-sdk :: precompile/sha2.rs :: call_sha384"},"id":1155,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"sha384","nameLocation":"22686:6:1","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"input","nameLocation":"22706:5:1","nodeType":"VariableDeclaration","scope":1155,"src":"22693:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1130,"name":"bytes","nodeType":"ElementaryTypeName","src":"22693:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22692:20:1"},"returnParameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"output","nameLocation":"22740:6:1","nodeType":"VariableDeclaration","scope":1155,"src":"22727:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1133,"name":"bytes","nodeType":"ElementaryTypeName","src":"22727:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22726:21:1"},"scope":1156,"src":"22677:185:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"src":"39:22824:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2089],"Ownable":[1303]},"id":1304,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1157,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1304,"sourceUnit":2090,"src":"128:45:2","symbolAliases":[{"foreign":{"id":1158,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1161,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2089,"src":"692:7:2"},"id":1162,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1303,"linearizedBaseContracts":[1303,2089],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1164,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":1303,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":1169,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":1169,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":1174,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":1174,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1180,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":1180,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1178,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":1180,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":1205,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1200,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":1199,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1192,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1198,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":1202,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1201,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1204,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":1206,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":1206,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":1303,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1213,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1209,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":1212,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":1214,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":1222,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":1220,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1219,"id":1221,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1223,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1223,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":1303,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1239,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1227,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1229,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1238,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":1237,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1233,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1232,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1236,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":1240,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":1303,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1253,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1246,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1252,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1254,"implemented":true,"kind":"function","modifiers":[{"id":1244,"kind":"modifierInvocation","modifierName":{"id":1243,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":1303,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1281,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1262,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1276,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":1275,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1268,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1274,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":1278,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1277,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1280,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1282,"implemented":true,"kind":"function","modifiers":[{"id":1260,"kind":"modifierInvocation","modifierName":{"id":1259,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":1282,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":1303,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1301,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":1301,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1291,"initialValue":{"id":1290,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1292,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1293,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1295,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":1297,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1298,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1296,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1300,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":1302,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":1303,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1304,"src":"663:2438:2","usedErrors":[1169,1174],"usedEvents":[1180]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1440],"IERC20Errors":[1345],"IERC721Errors":[1393]},"id":1441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1305,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"138:141:3","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":1345,"linearizedBaseContracts":[1345],"name":"IERC20Errors","nameLocation":"290:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"309:309:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1315,"name":"ERC20InsufficientBalance","nameLocation":"629:24:3","nodeType":"ErrorDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"sender","nameLocation":"662:6:3","nodeType":"VariableDeclaration","scope":1315,"src":"654:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1308,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1311,"mutability":"mutable","name":"balance","nameLocation":"678:7:3","nodeType":"VariableDeclaration","scope":1315,"src":"670:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1313,"mutability":"mutable","name":"needed","nameLocation":"695:6:3","nodeType":"VariableDeclaration","scope":1315,"src":"687:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:3"},"src":"623:80:3"},{"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"709:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1320,"name":"ERC20InvalidSender","nameLocation":"872:18:3","nodeType":"ErrorDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"sender","nameLocation":"899:6:3","nodeType":"VariableDeclaration","scope":1320,"src":"891:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:3"},"src":"866:41:3"},{"documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"913:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1325,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:3","nodeType":"ErrorDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:3","nodeType":"VariableDeclaration","scope":1325,"src":"1104:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:3"},"src":"1077:45:3"},{"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"1128:345:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1334,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:3","nodeType":"ErrorDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"spender","nameLocation":"1519:7:3","nodeType":"VariableDeclaration","scope":1334,"src":"1511:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:3","nodeType":"VariableDeclaration","scope":1334,"src":"1528:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"needed","nameLocation":"1555:6:3","nodeType":"VariableDeclaration","scope":1334,"src":"1547:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:3"},"src":"1478:85:3"},{"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"1569:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1339,"name":"ERC20InvalidApprover","nameLocation":"1754:20:3","nodeType":"ErrorDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"approver","nameLocation":"1783:8:3","nodeType":"VariableDeclaration","scope":1339,"src":"1775:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:3"},"src":"1748:45:3"},{"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"1799:195:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1344,"name":"ERC20InvalidSpender","nameLocation":"2005:19:3","nodeType":"ErrorDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"spender","nameLocation":"2033:7:3","nodeType":"VariableDeclaration","scope":1344,"src":"2025:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:3"},"src":"1999:43:3"}],"scope":1441,"src":"280:1764:3","usedErrors":[1315,1320,1325,1334,1339,1344],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"2046:143:3","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":1393,"linearizedBaseContracts":[1393],"name":"IERC721Errors","nameLocation":"2200:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"2220:219:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1351,"name":"ERC721InvalidOwner","nameLocation":"2450:18:3","nodeType":"ErrorDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"owner","nameLocation":"2477:5:3","nodeType":"VariableDeclaration","scope":1351,"src":"2469:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:3"},"src":"2444:40:3"},{"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"2490:132:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1356,"name":"ERC721NonexistentToken","nameLocation":"2633:22:3","nodeType":"ErrorDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:3","nodeType":"VariableDeclaration","scope":1356,"src":"2656:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:3"},"src":"2627:46:3"},{"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"2679:289:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1365,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:3","nodeType":"ErrorDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"sender","nameLocation":"3008:6:3","nodeType":"VariableDeclaration","scope":1365,"src":"3000:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:3","nodeType":"VariableDeclaration","scope":1365,"src":"3016:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"owner","nameLocation":"3041:5:3","nodeType":"VariableDeclaration","scope":1365,"src":"3033:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1362,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:3"},"src":"2973:75:3"},{"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"3054:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1370,"name":"ERC721InvalidSender","nameLocation":"3217:19:3","nodeType":"ErrorDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"sender","nameLocation":"3245:6:3","nodeType":"VariableDeclaration","scope":1370,"src":"3237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:3"},"src":"3211:42:3"},{"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"3259:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1375,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:3","nodeType":"ErrorDefinition","parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:3","nodeType":"VariableDeclaration","scope":1375,"src":"3451:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:3"},"src":"3423:46:3"},{"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"3475:247:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1382,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:3","nodeType":"ErrorDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"operator","nameLocation":"3768:8:3","nodeType":"VariableDeclaration","scope":1382,"src":"3760:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:3","nodeType":"VariableDeclaration","scope":1382,"src":"3778:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:3"},"src":"3727:68:3"},{"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"3801:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1387,"name":"ERC721InvalidApprover","nameLocation":"3986:21:3","nodeType":"ErrorDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"approver","nameLocation":"4016:8:3","nodeType":"VariableDeclaration","scope":1387,"src":"4008:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:3"},"src":"3980:46:3"},{"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"4032:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1392,"name":"ERC721InvalidOperator","nameLocation":"4240:21:3","nodeType":"ErrorDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"operator","nameLocation":"4270:8:3","nodeType":"VariableDeclaration","scope":1392,"src":"4262:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:3"},"src":"4234:46:3"}],"scope":1441,"src":"2190:2092:3","usedErrors":[1351,1356,1365,1370,1375,1382,1387,1392],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"4284:145:3","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":1440,"linearizedBaseContracts":[1440],"name":"IERC1155Errors","nameLocation":"4440:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"4461:361:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1405,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:3","nodeType":"ErrorDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"sender","nameLocation":"4868:6:3","nodeType":"VariableDeclaration","scope":1405,"src":"4860:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"balance","nameLocation":"4884:7:3","nodeType":"VariableDeclaration","scope":1405,"src":"4876:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"needed","nameLocation":"4901:6:3","nodeType":"VariableDeclaration","scope":1405,"src":"4893:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:3","nodeType":"VariableDeclaration","scope":1405,"src":"4909:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:3"},"src":"4827:99:3"},{"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"4932:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1410,"name":"ERC1155InvalidSender","nameLocation":"5095:20:3","nodeType":"ErrorDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"sender","nameLocation":"5124:6:3","nodeType":"VariableDeclaration","scope":1410,"src":"5116:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1407,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:3"},"src":"5089:43:3"},{"documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"5138:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1415,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:3","nodeType":"ErrorDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:3","nodeType":"VariableDeclaration","scope":1415,"src":"5331:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1412,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:3"},"src":"5302:47:3"},{"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"5355:256:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1422,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:3","nodeType":"ErrorDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"operator","nameLocation":"5659:8:3","nodeType":"VariableDeclaration","scope":1422,"src":"5651:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"owner","nameLocation":"5677:5:3","nodeType":"VariableDeclaration","scope":1422,"src":"5669:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:3"},"src":"5616:68:3"},{"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"5690:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1427,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:3","nodeType":"ErrorDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"approver","nameLocation":"5906:8:3","nodeType":"VariableDeclaration","scope":1427,"src":"5898:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:3"},"src":"5869:47:3"},{"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"5922:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1432,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:3","nodeType":"ErrorDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"operator","nameLocation":"6161:8:3","nodeType":"VariableDeclaration","scope":1432,"src":"6153:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:3"},"src":"6124:47:3"},{"documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"6177:280:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1439,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:3","nodeType":"ErrorDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:3","nodeType":"VariableDeclaration","scope":1439,"src":"6494:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:3","nodeType":"VariableDeclaration","scope":1439,"src":"6513:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:3"},"src":"6462:73:3"}],"scope":1441,"src":"4430:2107:3","usedErrors":[1405,1410,1415,1422,1427,1432,1439],"usedEvents":[]}],"src":"112:6426:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2089],"ERC20":[1955],"IERC20":[2033],"IERC20Errors":[1345],"IERC20Metadata":[2059]},"id":1956,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1442,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1956,"sourceUnit":2034,"src":"131:36:4","symbolAliases":[{"foreign":{"id":1443,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"139:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1956,"sourceUnit":2060,"src":"168:63:4","symbolAliases":[{"foreign":{"id":1445,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"176:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1956,"sourceUnit":2090,"src":"232:48:4","symbolAliases":[{"foreign":{"id":1447,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"240:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1956,"sourceUnit":1441,"src":"281:65:4","symbolAliases":[{"foreign":{"id":1449,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"289:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1452,"name":"Context","nameLocations":["1133:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2089,"src":"1133:7:4"},"id":1453,"nodeType":"InheritanceSpecifier","src":"1133:7:4"},{"baseName":{"id":1454,"name":"IERC20","nameLocations":["1142:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2033,"src":"1142:6:4"},"id":1455,"nodeType":"InheritanceSpecifier","src":"1142:6:4"},{"baseName":{"id":1456,"name":"IERC20Metadata","nameLocations":["1150:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":2059,"src":"1150:14:4"},"id":1457,"nodeType":"InheritanceSpecifier","src":"1150:14:4"},{"baseName":{"id":1458,"name":"IERC20Errors","nameLocations":["1166:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1345,"src":"1166:12:4"},"id":1459,"nodeType":"InheritanceSpecifier","src":"1166:12:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1451,"nodeType":"StructuredDocumentation","src":"348:757:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1955,"linearizedBaseContracts":[1955,1345,2059,2033,2089],"name":"ERC20","nameLocation":"1124:5:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1463,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:4","nodeType":"VariableDeclaration","scope":1955,"src":"1185:53:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1462,"keyName":"account","keyNameLocation":"1201:7:4","keyType":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1469,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:4","nodeType":"VariableDeclaration","scope":1955,"src":"1245:83:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1468,"keyName":"account","keyNameLocation":"1261:7:4","keyType":{"id":1464,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1467,"keyName":"spender","keyNameLocation":"1288:7:4","keyType":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1471,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:4","nodeType":"VariableDeclaration","scope":1955,"src":"1335:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1473,"mutability":"mutable","name":"_name","nameLocation":"1385:5:4","nodeType":"VariableDeclaration","scope":1955,"src":"1370:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1472,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1475,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:4","nodeType":"VariableDeclaration","scope":1955,"src":"1396:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1474,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1491,"nodeType":"Block","src":"1657:57:4","statements":[{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1483,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"1667:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1484,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"1675:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1486,"nodeType":"ExpressionStatement","src":"1667:13:4"},{"expression":{"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1487,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"1690:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1488,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"1700:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1490,"nodeType":"ExpressionStatement","src":"1690:17:4"}]},"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"1425:171:4","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1492,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"name_","nameLocation":"1627:5:4","nodeType":"VariableDeclaration","scope":1492,"src":"1613:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1477,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1480,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:4","nodeType":"VariableDeclaration","scope":1492,"src":"1634:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1479,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:4"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[],"src":"1657:0:4"},"scope":1955,"src":"1601:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2046],"body":{"id":1500,"nodeType":"Block","src":"1839:29:4","statements":[{"expression":{"id":1498,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"1856:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1497,"id":1499,"nodeType":"Return","src":"1849:12:4"}]},"documentation":{"id":1493,"nodeType":"StructuredDocumentation","src":"1720:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1501,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:4","nodeType":"FunctionDefinition","parameters":{"id":1494,"nodeType":"ParameterList","parameters":[],"src":"1792:2:4"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1501,"src":"1824:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1495,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:4"},"scope":1955,"src":"1779:89:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2052],"body":{"id":1509,"nodeType":"Block","src":"2043:31:4","statements":[{"expression":{"id":1507,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"2060:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1506,"id":1508,"nodeType":"Return","src":"2053:14:4"}]},"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"1874:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:4","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"1996:2:4"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"2028:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1504,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:4"},"scope":1955,"src":"1981:93:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2058],"body":{"id":1518,"nodeType":"Block","src":"2763:26:4","statements":[{"expression":{"hexValue":"3138","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1515,"id":1517,"nodeType":"Return","src":"2773:9:4"}]},"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"2080:622:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1519,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:4","nodeType":"FunctionDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[],"src":"2724:2:4"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1519,"src":"2756:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1513,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:4"},"scope":1955,"src":"2707:82:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1982],"body":{"id":1527,"nodeType":"Block","src":"2910:36:4","statements":[{"expression":{"id":1525,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2927:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1524,"id":1526,"nodeType":"Return","src":"2920:19:4"}]},"documentation":{"id":1520,"nodeType":"StructuredDocumentation","src":"2795:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1528,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:4","nodeType":"FunctionDefinition","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[],"src":"2869:2:4"},"returnParameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1528,"src":"2901:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:4"},"scope":1955,"src":"2849:97:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1990],"body":{"id":1540,"nodeType":"Block","src":"3078:42:4","statements":[{"expression":{"baseExpression":{"id":1536,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"3095:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1538,"indexExpression":{"id":1537,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"3105:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1535,"id":1539,"nodeType":"Return","src":"3088:25:4"}]},"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"2952:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1541,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:4","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"account","nameLocation":"3031:7:4","nodeType":"VariableDeclaration","scope":1541,"src":"3023:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:4"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"3069:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:4"},"scope":1955,"src":"3004:116:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2000],"body":{"id":1564,"nodeType":"Block","src":"3390:103:4","statements":[{"assignments":[1552],"declarations":[{"constant":false,"id":1552,"mutability":"mutable","name":"owner","nameLocation":"3408:5:4","nodeType":"VariableDeclaration","scope":1564,"src":"3400:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1555,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1553,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"3416:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:4"},{"expression":{"arguments":[{"id":1557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"3448:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1558,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"3455:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"3459:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1556,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"3438:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1561,"nodeType":"ExpressionStatement","src":"3438:27:4"},{"expression":{"hexValue":"74727565","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1550,"id":1563,"nodeType":"Return","src":"3475:11:4"}]},"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"3126:184:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1565,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:4","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"to","nameLocation":"3341:2:4","nodeType":"VariableDeclaration","scope":1565,"src":"3333:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"value","nameLocation":"3353:5:4","nodeType":"VariableDeclaration","scope":1565,"src":"3345:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:4"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"3384:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1548,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:4"},"scope":1955,"src":"3315:178:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2010],"body":{"id":1581,"nodeType":"Block","src":"3640:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1575,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"3657:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1577,"indexExpression":{"id":1576,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"3669:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1579,"indexExpression":{"id":1578,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"3676:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1574,"id":1580,"nodeType":"Return","src":"3650:34:4"}]},"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"3499:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1582,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:4","nodeType":"FunctionDefinition","parameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"owner","nameLocation":"3578:5:4","nodeType":"VariableDeclaration","scope":1582,"src":"3570:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"spender","nameLocation":"3593:7:4","nodeType":"VariableDeclaration","scope":1582,"src":"3585:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:4"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1582,"src":"3631:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:4"},"scope":1955,"src":"3551:140:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2020],"body":{"id":1605,"nodeType":"Block","src":"4077:107:4","statements":[{"assignments":[1593],"declarations":[{"constant":false,"id":1593,"mutability":"mutable","name":"owner","nameLocation":"4095:5:4","nodeType":"VariableDeclaration","scope":1605,"src":"4087:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1596,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1594,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"4103:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:4"},{"expression":{"arguments":[{"id":1598,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"4134:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1599,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"4141:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"4150:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1597,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1846,1906],"referencedDeclaration":1846,"src":"4125:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1602,"nodeType":"ExpressionStatement","src":"4125:31:4"},{"expression":{"hexValue":"74727565","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1591,"id":1604,"nodeType":"Return","src":"4166:11:4"}]},"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"3697:296:4","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:4","nodeType":"FunctionDefinition","parameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"spender","nameLocation":"4023:7:4","nodeType":"VariableDeclaration","scope":1606,"src":"4015:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"value","nameLocation":"4040:5:4","nodeType":"VariableDeclaration","scope":1606,"src":"4032:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:4"},"returnParameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"4071:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1589,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:4"},"scope":1955,"src":"3998:186:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2032],"body":{"id":1637,"nodeType":"Block","src":"4869:151:4","statements":[{"assignments":[1619],"declarations":[{"constant":false,"id":1619,"mutability":"mutable","name":"spender","nameLocation":"4887:7:4","nodeType":"VariableDeclaration","scope":1637,"src":"4879:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1622,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1620,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"4897:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:4"},{"expression":{"arguments":[{"id":1624,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"4935:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1625,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"4941:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"4950:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1623,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"4919:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1628,"nodeType":"ExpressionStatement","src":"4919:37:4"},{"expression":{"arguments":[{"id":1630,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"4976:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"4982:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"4986:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1629,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"4966:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"ExpressionStatement","src":"4966:26:4"},{"expression":{"hexValue":"74727565","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1617,"id":1636,"nodeType":"Return","src":"5002:11:4"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"4190:581:4","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1638,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:4","nodeType":"FunctionDefinition","parameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"from","nameLocation":"4806:4:4","nodeType":"VariableDeclaration","scope":1638,"src":"4798:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"to","nameLocation":"4820:2:4","nodeType":"VariableDeclaration","scope":1638,"src":"4812:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"value","nameLocation":"4832:5:4","nodeType":"VariableDeclaration","scope":1638,"src":"4824:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:4"},"returnParameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1638,"src":"4863:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1615,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:4"},"scope":1955,"src":"4776:244:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1684,"nodeType":"Block","src":"5462:231:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1648,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"5476:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1649,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:4","typeDescriptions":{}}},"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1662,"nodeType":"IfStatement","src":"5472:86:4","trueBody":{"id":1661,"nodeType":"Block","src":"5496:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1655,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:4","typeDescriptions":{}}},"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1654,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"5517:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"RevertStatement","src":"5510:37:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1663,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"5571:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1664,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:4","typeDescriptions":{}}},"id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1677,"nodeType":"IfStatement","src":"5567:86:4","trueBody":{"id":1676,"nodeType":"Block","src":"5589:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:4","typeDescriptions":{}}},"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1669,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"5610:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"RevertStatement","src":"5603:39:4"}]}},{"expression":{"arguments":[{"id":1679,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"5670:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"5676:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"5680:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1678,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5662:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1683,"nodeType":"ExpressionStatement","src":"5662:24:4"}]},"documentation":{"id":1639,"nodeType":"StructuredDocumentation","src":"5026:362:4","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:4","nodeType":"FunctionDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"from","nameLocation":"5420:4:4","nodeType":"VariableDeclaration","scope":1685,"src":"5412:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1640,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"to","nameLocation":"5434:2:4","nodeType":"VariableDeclaration","scope":1685,"src":"5426:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1642,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"value","nameLocation":"5446:5:4","nodeType":"VariableDeclaration","scope":1685,"src":"5438:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:4"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[],"src":"5462:0:4"},"scope":1955,"src":"5393:300:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1761,"nodeType":"Block","src":"6083:1032:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1695,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"6097:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:4","typeDescriptions":{}}},"id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1732,"nodeType":"Block","src":"6271:362:4","statements":[{"assignments":[1707],"declarations":[{"constant":false,"id":1707,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:4","nodeType":"VariableDeclaration","scope":1732,"src":"6285:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1711,"initialValue":{"baseExpression":{"id":1708,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6307:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1710,"indexExpression":{"id":1709,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"6317:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"6340:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"6354:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1722,"nodeType":"IfStatement","src":"6336:115:4","trueBody":{"id":1721,"nodeType":"Block","src":"6361:90:4","statements":[{"errorCall":{"arguments":[{"id":1716,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"6411:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1717,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"6417:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"6430:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1715,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"6386:24:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1720,"nodeType":"RevertStatement","src":"6379:57:4"}]}},{"id":1731,"nodeType":"UncheckedBlock","src":"6464:159:4","statements":[{"expression":{"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1723,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6571:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1725,"indexExpression":{"id":1724,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"6581:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1726,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"6589:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"6603:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1730,"nodeType":"ExpressionStatement","src":"6571:37:4"}]}]},"id":1733,"nodeType":"IfStatement","src":"6093:540:4","trueBody":{"id":1705,"nodeType":"Block","src":"6117:148:4","statements":[{"expression":{"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1701,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"6233:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"6249:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1704,"nodeType":"ExpressionStatement","src":"6233:21:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1734,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"6647:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1735,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:4","typeDescriptions":{}}},"id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1753,"nodeType":"Block","src":"6862:206:4","statements":[{"id":1752,"nodeType":"UncheckedBlock","src":"6876:182:4","statements":[{"expression":{"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1746,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"7021:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1748,"indexExpression":{"id":1747,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"7031:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"7038:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1751,"nodeType":"ExpressionStatement","src":"7021:22:4"}]}]},"id":1754,"nodeType":"IfStatement","src":"6643:425:4","trueBody":{"id":1745,"nodeType":"Block","src":"6665:191:4","statements":[{"id":1744,"nodeType":"UncheckedBlock","src":"6679:167:4","statements":[{"expression":{"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1740,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"6810:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"6826:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1743,"nodeType":"ExpressionStatement","src":"6810:21:4"}]}]}},{"eventCall":{"arguments":[{"id":1756,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"7092:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1757,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"7098:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"7102:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1755,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"7083:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1760,"nodeType":"EmitStatement","src":"7078:30:4"}]},"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"5699:304:4","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1762,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:4","nodeType":"FunctionDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"from","nameLocation":"6033:4:4","nodeType":"VariableDeclaration","scope":1762,"src":"6025:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1687,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"to","nameLocation":"6047:2:4","nodeType":"VariableDeclaration","scope":1762,"src":"6039:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"value","nameLocation":"6059:5:4","nodeType":"VariableDeclaration","scope":1762,"src":"6051:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:4"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[],"src":"6083:0:4"},"scope":1955,"src":"6008:1107:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1794,"nodeType":"Block","src":"7514:152:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1770,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"7528:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1771,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:4","typeDescriptions":{}}},"id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1784,"nodeType":"IfStatement","src":"7524:91:4","trueBody":{"id":1783,"nodeType":"Block","src":"7551:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:4","typeDescriptions":{}}},"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1776,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"7572:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1782,"nodeType":"RevertStatement","src":"7565:39:4"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1786,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:4","typeDescriptions":{}}},"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1790,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"7644:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"7653:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1785,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"7624:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1793,"nodeType":"ExpressionStatement","src":"7624:35:4"}]},"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"7121:332:4","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1795,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:4","nodeType":"FunctionDefinition","parameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"account","nameLocation":"7481:7:4","nodeType":"VariableDeclaration","scope":1795,"src":"7473:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1764,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"value","nameLocation":"7498:5:4","nodeType":"VariableDeclaration","scope":1795,"src":"7490:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:4"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[],"src":"7514:0:4"},"scope":1955,"src":"7458:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1827,"nodeType":"Block","src":"8040:150:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"8054:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1804,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:4","typeDescriptions":{}}},"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1817,"nodeType":"IfStatement","src":"8050:89:4","trueBody":{"id":1816,"nodeType":"Block","src":"8077:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:4","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1809,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"8098:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1815,"nodeType":"RevertStatement","src":"8091:37:4"}]}},{"expression":{"arguments":[{"id":1819,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"8156:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:4","typeDescriptions":{}}},"id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"8177:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1818,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"8148:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1826,"nodeType":"ExpressionStatement","src":"8148:35:4"}]},"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"7672:307:4","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1828,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:4","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"account","nameLocation":"8007:7:4","nodeType":"VariableDeclaration","scope":1828,"src":"7999:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"value","nameLocation":"8024:5:4","nodeType":"VariableDeclaration","scope":1828,"src":"8016:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:4"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[],"src":"8040:0:4"},"scope":1955,"src":"7984:206:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1845,"nodeType":"Block","src":"8800:54:4","statements":[{"expression":{"arguments":[{"id":1839,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"8819:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1840,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"8826:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"8835:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1838,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1846,1906],"referencedDeclaration":1906,"src":"8810:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1844,"nodeType":"ExpressionStatement","src":"8810:37:4"}]},"documentation":{"id":1829,"nodeType":"StructuredDocumentation","src":"8196:525:4","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1846,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:4","nodeType":"FunctionDefinition","parameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"owner","nameLocation":"8752:5:4","nodeType":"VariableDeclaration","scope":1846,"src":"8744:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1830,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1833,"mutability":"mutable","name":"spender","nameLocation":"8767:7:4","nodeType":"VariableDeclaration","scope":1846,"src":"8759:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1832,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1835,"mutability":"mutable","name":"value","nameLocation":"8784:5:4","nodeType":"VariableDeclaration","scope":1846,"src":"8776:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:4"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[],"src":"8800:0:4"},"scope":1955,"src":"8726:128:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1905,"nodeType":"Block","src":"9799:334:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1858,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"9813:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1859,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:4","typeDescriptions":{}}},"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1872,"nodeType":"IfStatement","src":"9809:89:4","trueBody":{"id":1871,"nodeType":"Block","src":"9834:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1865,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:4","typeDescriptions":{}}},"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1864,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"9855:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1870,"nodeType":"RevertStatement","src":"9848:39:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1873,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"9911:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:4","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1887,"nodeType":"IfStatement","src":"9907:90:4","trueBody":{"id":1886,"nodeType":"Block","src":"9934:63:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:4","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1879,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"9955:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1885,"nodeType":"RevertStatement","src":"9948:38:4"}]}},{"expression":{"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1888,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"10006:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1891,"indexExpression":{"id":1889,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"10018:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1892,"indexExpression":{"id":1890,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"10025:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"10036:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1895,"nodeType":"ExpressionStatement","src":"10006:35:4"},{"condition":{"id":1896,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"10055:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1904,"nodeType":"IfStatement","src":"10051:76:4","trueBody":{"id":1903,"nodeType":"Block","src":"10066:61:4","statements":[{"eventCall":{"arguments":[{"id":1898,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"10094:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1899,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"10101:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"10110:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1897,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"10085:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1902,"nodeType":"EmitStatement","src":"10080:36:4"}]}}]},"documentation":{"id":1847,"nodeType":"StructuredDocumentation","src":"8860:836:4","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1906,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:4","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"owner","nameLocation":"9727:5:4","nodeType":"VariableDeclaration","scope":1906,"src":"9719:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1848,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"spender","nameLocation":"9742:7:4","nodeType":"VariableDeclaration","scope":1906,"src":"9734:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"value","nameLocation":"9759:5:4","nodeType":"VariableDeclaration","scope":1906,"src":"9751:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:4","nodeType":"VariableDeclaration","scope":1906,"src":"9766:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1854,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:4"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"9799:0:4"},"scope":1955,"src":"9701:432:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1953,"nodeType":"Block","src":"10504:388:4","statements":[{"assignments":[1917],"declarations":[{"constant":false,"id":1917,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:4","nodeType":"VariableDeclaration","scope":1953,"src":"10514:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1922,"initialValue":{"arguments":[{"id":1919,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"10551:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1920,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"10558:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1918,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"10541:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1923,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"10580:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10605:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"10605:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1924,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10600:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10614:3:4","memberName":"max","nodeType":"MemberAccess","src":"10600:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1952,"nodeType":"IfStatement","src":"10576:310:4","trueBody":{"id":1951,"nodeType":"Block","src":"10619:267:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1930,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"10637:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"10656:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10637:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1940,"nodeType":"IfStatement","src":"10633:130:4","trueBody":{"id":1939,"nodeType":"Block","src":"10663:100:4","statements":[{"errorCall":{"arguments":[{"id":1934,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"10715:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1935,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"10724:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"10742:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1933,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"10688:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1938,"nodeType":"RevertStatement","src":"10681:67:4"}]}},{"id":1950,"nodeType":"UncheckedBlock","src":"10776:100:4","statements":[{"expression":{"arguments":[{"id":1942,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"10813:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1943,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"10820:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1944,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"10829:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"10848:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10855:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1941,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1846,1906],"referencedDeclaration":1906,"src":"10804:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1949,"nodeType":"ExpressionStatement","src":"10804:57:4"}]}]}}]},"documentation":{"id":1907,"nodeType":"StructuredDocumentation","src":"10139:271:4","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1954,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:4","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"owner","nameLocation":"10448:5:4","nodeType":"VariableDeclaration","scope":1954,"src":"10440:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1908,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"spender","nameLocation":"10463:7:4","nodeType":"VariableDeclaration","scope":1954,"src":"10455:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1910,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"value","nameLocation":"10480:5:4","nodeType":"VariableDeclaration","scope":1954,"src":"10472:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:4"},"returnParameters":{"id":1915,"nodeType":"ParameterList","parameters":[],"src":"10504:0:4"},"scope":1955,"src":"10415:477:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1956,"src":"1106:9788:4","usedErrors":[1315,1320,1325,1334,1339,1344],"usedEvents":[1967,1976]}],"src":"105:10790:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2033]},"id":2034,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1957,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"132:71:5","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2033,"linearizedBaseContracts":[2033],"name":"IERC20","nameLocation":"214:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1959,"nodeType":"StructuredDocumentation","src":"227:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1967,"name":"Transfer","nameLocation":"396:8:5","nodeType":"EventDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:5","nodeType":"VariableDeclaration","scope":1967,"src":"405:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1963,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:5","nodeType":"VariableDeclaration","scope":1967,"src":"427:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1965,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:5","nodeType":"VariableDeclaration","scope":1967,"src":"447:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:5"},"src":"390:72:5"},{"anonymous":false,"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"468:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1976,"name":"Approval","nameLocation":"627:8:5","nodeType":"EventDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:5","nodeType":"VariableDeclaration","scope":1976,"src":"636:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1972,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:5","nodeType":"VariableDeclaration","scope":1976,"src":"659:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1971,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1974,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:5","nodeType":"VariableDeclaration","scope":1976,"src":"684:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:5"},"src":"621:78:5"},{"documentation":{"id":1977,"nodeType":"StructuredDocumentation","src":"705:65:5","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1982,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:5","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"795:2:5"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1982,"src":"821:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1979,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:5"},"scope":2033,"src":"775:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"836:71:5","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1990,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:5","nodeType":"FunctionDefinition","parameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"account","nameLocation":"939:7:5","nodeType":"VariableDeclaration","scope":1990,"src":"931:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:5"},"returnParameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1990,"src":"971:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:5"},"scope":2033,"src":"912:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"986:213:5","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2000,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:5","nodeType":"FunctionDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"to","nameLocation":"1230:2:5","nodeType":"VariableDeclaration","scope":2000,"src":"1222:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1992,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1995,"mutability":"mutable","name":"value","nameLocation":"1242:5:5","nodeType":"VariableDeclaration","scope":2000,"src":"1234:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:5"},"returnParameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2000,"src":"1267:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1997,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:5"},"scope":2033,"src":"1204:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"1279:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2010,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:5","nodeType":"FunctionDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"owner","nameLocation":"1575:5:5","nodeType":"VariableDeclaration","scope":2010,"src":"1567:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"spender","nameLocation":"1590:7:5","nodeType":"VariableDeclaration","scope":2010,"src":"1582:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:5"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2010,"src":"1622:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:5"},"scope":2033,"src":"1548:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"1637:667:5","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2020,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:5","nodeType":"FunctionDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"spender","nameLocation":"2334:7:5","nodeType":"VariableDeclaration","scope":2020,"src":"2326:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"value","nameLocation":"2351:5:5","nodeType":"VariableDeclaration","scope":2020,"src":"2343:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:5"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"2376:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2017,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:5"},"scope":2033,"src":"2309:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"2388:297:5","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2032,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:5","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"from","nameLocation":"2720:4:5","nodeType":"VariableDeclaration","scope":2032,"src":"2712:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"to","nameLocation":"2734:2:5","nodeType":"VariableDeclaration","scope":2032,"src":"2726:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2024,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"value","nameLocation":"2746:5:5","nodeType":"VariableDeclaration","scope":2032,"src":"2738:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:5"},"returnParameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2032,"src":"2771:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2029,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:5"},"scope":2033,"src":"2690:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2034,"src":"204:2575:5","usedErrors":[],"usedEvents":[1967,1976]}],"src":"106:2674:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2033],"IERC20Metadata":[2059]},"id":2060,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2035,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2060,"sourceUnit":2034,"src":"151:37:6","symbolAliases":[{"foreign":{"id":2036,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"159:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2039,"name":"IERC20","nameLocations":["306:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":2033,"src":"306:6:6"},"id":2040,"nodeType":"InheritanceSpecifier","src":"306:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"190:87:6","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2059,"linearizedBaseContracts":[2059,2033],"name":"IERC20Metadata","nameLocation":"288:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"319:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2046,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:6","nodeType":"FunctionDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[],"src":"391:2:6"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2046,"src":"417:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2043,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:6"},"scope":2059,"src":"378:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"438:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2052,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:6","nodeType":"FunctionDefinition","parameters":{"id":2048,"nodeType":"ParameterList","parameters":[],"src":"514:2:6"},"returnParameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2052,"src":"540:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2049,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:6"},"scope":2059,"src":"499:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"561:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2058,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:6","nodeType":"FunctionDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"648:2:6"},"returnParameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2058,"src":"674:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2055,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:6"},"scope":2059,"src":"631:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2060,"src":"278:405:6","usedErrors":[],"usedEvents":[1967,1976]}],"src":"125:559:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2089]},"id":2090,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2061,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"127:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2089,"linearizedBaseContracts":[2089],"name":"Context","nameLocation":"642:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":2070,"nodeType":"Block","src":"718:34:7","statements":[{"expression":{"expression":{"id":2067,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:7","memberName":"sender","nodeType":"MemberAccess","src":"735:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2066,"id":2069,"nodeType":"Return","src":"728:17:7"}]},"id":2071,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:7","nodeType":"FunctionDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[],"src":"675:2:7"},"returnParameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2071,"src":"709:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:7"},"scope":2089,"src":"656:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2079,"nodeType":"Block","src":"825:32:7","statements":[{"expression":{"expression":{"id":2076,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:7","memberName":"data","nodeType":"MemberAccess","src":"842:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2075,"id":2078,"nodeType":"Return","src":"835:15:7"}]},"id":2080,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:7","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[],"src":"775:2:7"},"returnParameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2080,"src":"809:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2073,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:7"},"scope":2089,"src":"758:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2087,"nodeType":"Block","src":"935:25:7","statements":[{"expression":{"hexValue":"30","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2084,"id":2086,"nodeType":"Return","src":"945:8:7"}]},"id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:7","nodeType":"FunctionDefinition","parameters":{"id":2081,"nodeType":"ParameterList","parameters":[],"src":"892:2:7"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2088,"src":"926:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2082,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:7"},"scope":2089,"src":"863:97:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2090,"src":"624:338:7","usedErrors":[],"usedEvents":[]}],"src":"101:862:7"},"id":7},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2141]},"id":2142,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2091,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"125:489:8","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2141,"linearizedBaseContracts":[2141],"name":"Panic","nameLocation":"665:5:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"677:36:8","text":"@dev generic / unspecified error"},"id":2096,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:8","nodeType":"VariableDeclaration","scope":2141,"src":"718:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2094,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2097,"nodeType":"StructuredDocumentation","src":"764:37:8","text":"@dev used by the assert() builtin"},"id":2100,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:8","nodeType":"VariableDeclaration","scope":2141,"src":"806:39:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2101,"nodeType":"StructuredDocumentation","src":"851:41:8","text":"@dev arithmetic underflow or overflow"},"id":2104,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:8","nodeType":"VariableDeclaration","scope":2141,"src":"897:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:8","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"950:35:8","text":"@dev division or modulo by zero"},"id":2108,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:8","nodeType":"VariableDeclaration","scope":2141,"src":"990:49:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2106,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2109,"nodeType":"StructuredDocumentation","src":"1045:30:8","text":"@dev enum conversion error"},"id":2112,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:8","nodeType":"VariableDeclaration","scope":2141,"src":"1080:54:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:8","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"1140:36:8","text":"@dev invalid encoding in storage"},"id":2116,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:8","nodeType":"VariableDeclaration","scope":2141,"src":"1181:55:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:8","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"1242:24:8","text":"@dev empty array pop"},"id":2120,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:8","nodeType":"VariableDeclaration","scope":2141,"src":"1271:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:8","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"1325:35:8","text":"@dev array out of bounds access"},"id":2124,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:8","nodeType":"VariableDeclaration","scope":2141,"src":"1365:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2125,"nodeType":"StructuredDocumentation","src":"1423:65:8","text":"@dev resource error (too large allocation or too large array)"},"id":2128,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:8","nodeType":"VariableDeclaration","scope":2141,"src":"1493:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"1546:42:8","text":"@dev calling invalid internal function"},"id":2132,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:8","nodeType":"VariableDeclaration","scope":2141,"src":"1593:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:8","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2139,"nodeType":"Block","src":"1819:151:8","statements":[{"AST":{"nativeSrc":"1854:110:8","nodeType":"YulBlock","src":"1854:110:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:8","nodeType":"YulLiteral","src":"1875:4:8","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:8","nodeType":"YulLiteral","src":"1881:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:8","nodeType":"YulIdentifier","src":"1868:6:8"},"nativeSrc":"1868:24:8","nodeType":"YulFunctionCall","src":"1868:24:8"},"nativeSrc":"1868:24:8","nodeType":"YulExpressionStatement","src":"1868:24:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:8","nodeType":"YulLiteral","src":"1912:4:8","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:8","nodeType":"YulIdentifier","src":"1918:4:8"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:8","nodeType":"YulIdentifier","src":"1905:6:8"},"nativeSrc":"1905:18:8","nodeType":"YulFunctionCall","src":"1905:18:8"},"nativeSrc":"1905:18:8","nodeType":"YulExpressionStatement","src":"1905:18:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:8","nodeType":"YulLiteral","src":"1943:4:8","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:8","nodeType":"YulLiteral","src":"1949:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:8","nodeType":"YulIdentifier","src":"1936:6:8"},"nativeSrc":"1936:18:8","nodeType":"YulFunctionCall","src":"1936:18:8"},"nativeSrc":"1936:18:8","nodeType":"YulExpressionStatement","src":"1936:18:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":2135,"isOffset":false,"isSlot":false,"src":"1918:4:8","valueSize":1}],"flags":["memory-safe"],"id":2138,"nodeType":"InlineAssembly","src":"1829:135:8"}]},"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"1658:113:8","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2140,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:8","nodeType":"FunctionDefinition","parameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"code","nameLocation":"1799:4:8","nodeType":"VariableDeclaration","scope":2140,"src":"1791:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:8"},"returnParameters":{"id":2137,"nodeType":"ParameterList","parameters":[],"src":"1819:0:8"},"scope":2141,"src":"1776:194:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2142,"src":"657:1315:8","usedErrors":[],"usedEvents":[]}],"src":"99:1874:8"},"id":8},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4489],"SignedMath":[6398],"Strings":[2461]},"id":2462,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2143,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2462,"sourceUnit":4490,"src":"127:37:9","symbolAliases":[{"foreign":{"id":2144,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"135:4:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2462,"sourceUnit":6399,"src":"165:49:9","symbolAliases":[{"foreign":{"id":2146,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"173:10:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2148,"nodeType":"StructuredDocumentation","src":"216:34:9","text":" @dev String operations."},"fullyImplemented":true,"id":2461,"linearizedBaseContracts":[2461],"name":"Strings","nameLocation":"259:7:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2151,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:9","nodeType":"VariableDeclaration","scope":2461,"src":"273:56:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2149,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2154,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:9","nodeType":"VariableDeclaration","scope":2461,"src":"335:42:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2152,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"384:81:9","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2161,"name":"StringsInsufficientHexLength","nameLocation":"476:28:9","nodeType":"ErrorDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"value","nameLocation":"513:5:9","nodeType":"VariableDeclaration","scope":2161,"src":"505:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"length","nameLocation":"528:6:9","nodeType":"VariableDeclaration","scope":2161,"src":"520:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:9"},"src":"470:66:9"},{"body":{"id":2208,"nodeType":"Block","src":"708:561:9","statements":[{"id":2207,"nodeType":"UncheckedBlock","src":"718:545:9","statements":[{"assignments":[2170],"declarations":[{"constant":false,"id":2170,"mutability":"mutable","name":"length","nameLocation":"750:6:9","nodeType":"VariableDeclaration","scope":2207,"src":"742:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2177,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"770:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2171,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"759:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4489_$","typeString":"type(library Math)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:9","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4261,"src":"759:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:9"},{"assignments":[2179],"declarations":[{"constant":false,"id":2179,"mutability":"mutable","name":"buffer","nameLocation":"808:6:9","nodeType":"VariableDeclaration","scope":2207,"src":"794:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2178,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2184,"initialValue":{"arguments":[{"id":2182,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"828:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2180,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:9"},{"assignments":[2186],"declarations":[{"constant":false,"id":2186,"mutability":"mutable","name":"ptr","nameLocation":"857:3:9","nodeType":"VariableDeclaration","scope":2207,"src":"849:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2187,"nodeType":"VariableDeclarationStatement","src":"849:11:9"},{"AST":{"nativeSrc":"899:67:9","nodeType":"YulBlock","src":"899:67:9","statements":[{"nativeSrc":"917:35:9","nodeType":"YulAssignment","src":"917:35:9","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:9","nodeType":"YulIdentifier","src":"928:6:9"},{"arguments":[{"kind":"number","nativeSrc":"940:2:9","nodeType":"YulLiteral","src":"940:2:9","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:9","nodeType":"YulIdentifier","src":"944:6:9"}],"functionName":{"name":"add","nativeSrc":"936:3:9","nodeType":"YulIdentifier","src":"936:3:9"},"nativeSrc":"936:15:9","nodeType":"YulFunctionCall","src":"936:15:9"}],"functionName":{"name":"add","nativeSrc":"924:3:9","nodeType":"YulIdentifier","src":"924:3:9"},"nativeSrc":"924:28:9","nodeType":"YulFunctionCall","src":"924:28:9"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:9","nodeType":"YulIdentifier","src":"917:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2179,"isOffset":false,"isSlot":false,"src":"928:6:9","valueSize":1},{"declaration":2170,"isOffset":false,"isSlot":false,"src":"944:6:9","valueSize":1},{"declaration":2186,"isOffset":false,"isSlot":false,"src":"917:3:9","valueSize":1}],"flags":["memory-safe"],"id":2188,"nodeType":"InlineAssembly","src":"874:92:9"},{"body":{"id":2203,"nodeType":"Block","src":"992:234:9","statements":[{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:9","subExpression":{"id":2190,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"1010:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2192,"nodeType":"ExpressionStatement","src":"1010:5:9"},{"AST":{"nativeSrc":"1058:86:9","nodeType":"YulBlock","src":"1058:86:9","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:9","nodeType":"YulIdentifier","src":"1088:3:9"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:9","nodeType":"YulIdentifier","src":"1102:5:9"},{"kind":"number","nativeSrc":"1109:2:9","nodeType":"YulLiteral","src":"1109:2:9","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:9","nodeType":"YulIdentifier","src":"1098:3:9"},"nativeSrc":"1098:14:9","nodeType":"YulFunctionCall","src":"1098:14:9"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:9","nodeType":"YulIdentifier","src":"1114:10:9"}],"functionName":{"name":"byte","nativeSrc":"1093:4:9","nodeType":"YulIdentifier","src":"1093:4:9"},"nativeSrc":"1093:32:9","nodeType":"YulFunctionCall","src":"1093:32:9"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:9","nodeType":"YulIdentifier","src":"1080:7:9"},"nativeSrc":"1080:46:9","nodeType":"YulFunctionCall","src":"1080:46:9"},"nativeSrc":"1080:46:9","nodeType":"YulExpressionStatement","src":"1080:46:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2151,"isOffset":false,"isSlot":false,"src":"1114:10:9","valueSize":1},{"declaration":2186,"isOffset":false,"isSlot":false,"src":"1088:3:9","valueSize":1},{"declaration":2164,"isOffset":false,"isSlot":false,"src":"1102:5:9","valueSize":1}],"flags":["memory-safe"],"id":2193,"nodeType":"InlineAssembly","src":"1033:111:9"},{"expression":{"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"1161:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2197,"nodeType":"ExpressionStatement","src":"1161:11:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"1194:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2202,"nodeType":"IfStatement","src":"1190:21:9","trueBody":{"id":2201,"nodeType":"Break","src":"1206:5:9"}}]},"condition":{"hexValue":"74727565","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2204,"nodeType":"WhileStatement","src":"979:247:9"},{"expression":{"id":2205,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"1246:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2168,"id":2206,"nodeType":"Return","src":"1239:13:9"}]}]},"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"542:90:9","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2209,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:9","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"value","nameLocation":"663:5:9","nodeType":"VariableDeclaration","scope":2209,"src":"655:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:9"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2209,"src":"693:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2166,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:9"},"scope":2461,"src":"637:632:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2234,"nodeType":"Block","src":"1445:92:9","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1476:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:9","trueExpression":{"hexValue":"2d","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1522:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2227,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"1507:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6398_$","typeString":"type(library SignedMath)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:9","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6397,"src":"1507:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2226,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"1498:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2217,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:9","typeDescriptions":{}}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:9","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2216,"id":2233,"nodeType":"Return","src":"1455:75:9"}]},"documentation":{"id":2210,"nodeType":"StructuredDocumentation","src":"1275:89:9","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2235,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:9","nodeType":"FunctionDefinition","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"value","nameLocation":"1400:5:9","nodeType":"VariableDeclaration","scope":2235,"src":"1393:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2211,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:9"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2235,"src":"1430:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2214,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:9"},"scope":2461,"src":"1369:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2254,"nodeType":"Block","src":"1716:100:9","statements":[{"id":2253,"nodeType":"UncheckedBlock","src":"1726:84:9","statements":[{"expression":{"arguments":[{"id":2244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"1769:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"1788:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2245,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"1776:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4489_$","typeString":"type(library Math)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:9","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4432,"src":"1776:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2243,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2255,2338,2358],"referencedDeclaration":2338,"src":"1757:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2242,"id":2252,"nodeType":"Return","src":"1750:49:9"}]}]},"documentation":{"id":2236,"nodeType":"StructuredDocumentation","src":"1543:94:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2255,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:9","nodeType":"FunctionDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"value","nameLocation":"1671:5:9","nodeType":"VariableDeclaration","scope":2255,"src":"1663:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:9"},"returnParameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2255,"src":"1701:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2240,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:9"},"scope":2461,"src":"1642:174:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2337,"nodeType":"Block","src":"2029:435:9","statements":[{"assignments":[2266],"declarations":[{"constant":false,"id":2266,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:9","nodeType":"VariableDeclaration","scope":2337,"src":"2039:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2268,"initialValue":{"id":2267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"2060:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:9"},{"assignments":[2270],"declarations":[{"constant":false,"id":2270,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:9","nodeType":"VariableDeclaration","scope":2337,"src":"2075:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2269,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2279,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2274,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"2111:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2271,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:9"},{"expression":{"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2280,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"2132:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2282,"indexExpression":{"hexValue":"30","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2285,"nodeType":"ExpressionStatement","src":"2132:15:9"},{"expression":{"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2286,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"2157:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2288,"indexExpression":{"hexValue":"31","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2291,"nodeType":"ExpressionStatement","src":"2157:15:9"},{"body":{"id":2320,"nodeType":"Block","src":"2227:95:9","statements":[{"expression":{"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2306,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"2241:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2308,"indexExpression":{"id":2307,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2248:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2309,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"2253:10:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2313,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2310,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"2264:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2315,"nodeType":"ExpressionStatement","src":"2241:40:9"},{"expression":{"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2316,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"2295:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2319,"nodeType":"ExpressionStatement","src":"2295:16:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2300,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2215:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2321,"initializationExpression":{"assignments":[2293],"declarations":[{"constant":false,"id":2293,"mutability":"mutable","name":"i","nameLocation":"2195:1:9","nodeType":"VariableDeclaration","scope":2321,"src":"2187:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2299,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2295,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"2203:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:9"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:9","subExpression":{"id":2303,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2224:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2305,"nodeType":"ExpressionStatement","src":"2222:3:9"},"nodeType":"ForStatement","src":"2182:140:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2322,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"2335:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2331,"nodeType":"IfStatement","src":"2331:96:9","trueBody":{"id":2330,"nodeType":"Block","src":"2352:75:9","statements":[{"errorCall":{"arguments":[{"id":2326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"2402:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2327,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"2409:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2325,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"2373:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2329,"nodeType":"RevertStatement","src":"2366:50:9"}]}},{"expression":{"arguments":[{"id":2334,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"2450:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2332,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:9","typeDescriptions":{}}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2264,"id":2336,"nodeType":"Return","src":"2436:21:9"}]},"documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"1822:112:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2338,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:9","nodeType":"FunctionDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"value","nameLocation":"1968:5:9","nodeType":"VariableDeclaration","scope":2338,"src":"1960:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"length","nameLocation":"1983:6:9","nodeType":"VariableDeclaration","scope":2338,"src":"1975:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:9"},"returnParameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2338,"src":"2014:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2262,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:9"},"scope":2461,"src":"1939:525:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2357,"nodeType":"Block","src":"2696:75:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2351,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"2741:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2349,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:9","typeDescriptions":{}}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:9","typeDescriptions":{}}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2354,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"2749:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2346,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2255,2338,2358],"referencedDeclaration":2338,"src":"2713:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2345,"id":2356,"nodeType":"Return","src":"2706:58:9"}]},"documentation":{"id":2339,"nodeType":"StructuredDocumentation","src":"2470:148:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2358,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:9","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"addr","nameLocation":"2652:4:9","nodeType":"VariableDeclaration","scope":2358,"src":"2644:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2340,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:9"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2358,"src":"2681:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2343,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:9"},"scope":2461,"src":"2623:148:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2422,"nodeType":"Block","src":"3028:642:9","statements":[{"assignments":[2367],"declarations":[{"constant":false,"id":2367,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:9","nodeType":"VariableDeclaration","scope":2422,"src":"3038:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2366,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2374,"initialValue":{"arguments":[{"arguments":[{"id":2371,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"3078:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2370,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2255,2338,2358],"referencedDeclaration":2358,"src":"3066:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2368,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:9","typeDescriptions":{}}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:9"},{"assignments":[2376],"declarations":[{"constant":false,"id":2376,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:9","nodeType":"VariableDeclaration","scope":2422,"src":"3169:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2377,"nodeType":"VariableDeclarationStatement","src":"3169:17:9"},{"AST":{"nativeSrc":"3221:78:9","nodeType":"YulBlock","src":"3221:78:9","statements":[{"nativeSrc":"3235:54:9","nodeType":"YulAssignment","src":"3235:54:9","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:9","nodeType":"YulLiteral","src":"3252:2:9","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:9","nodeType":"YulIdentifier","src":"3270:6:9"},{"kind":"number","nativeSrc":"3278:4:9","nodeType":"YulLiteral","src":"3278:4:9","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:9","nodeType":"YulIdentifier","src":"3266:3:9"},"nativeSrc":"3266:17:9","nodeType":"YulFunctionCall","src":"3266:17:9"},{"kind":"number","nativeSrc":"3285:2:9","nodeType":"YulLiteral","src":"3285:2:9","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:9","nodeType":"YulIdentifier","src":"3256:9:9"},"nativeSrc":"3256:32:9","nodeType":"YulFunctionCall","src":"3256:32:9"}],"functionName":{"name":"shr","nativeSrc":"3248:3:9","nodeType":"YulIdentifier","src":"3248:3:9"},"nativeSrc":"3248:41:9","nodeType":"YulFunctionCall","src":"3248:41:9"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:9","nodeType":"YulIdentifier","src":"3235:9:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2367,"isOffset":false,"isSlot":false,"src":"3270:6:9","valueSize":1},{"declaration":2376,"isOffset":false,"isSlot":false,"src":"3235:9:9","valueSize":1}],"flags":["memory-safe"],"id":2378,"nodeType":"InlineAssembly","src":"3196:103:9"},{"body":{"id":2415,"nodeType":"Block","src":"3342:291:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2389,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"3448:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:9","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2396,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3477:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2398,"indexExpression":{"id":2397,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3484:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2394,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:9","typeDescriptions":{}}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2410,"nodeType":"IfStatement","src":"3444:150:9","trueBody":{"id":2409,"nodeType":"Block","src":"3494:100:9","statements":[{"expression":{"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2403,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3562:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2405,"indexExpression":{"id":2404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3569:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2408,"nodeType":"ExpressionStatement","src":"3562:17:9"}]}},{"expression":{"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2411,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"3607:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2414,"nodeType":"ExpressionStatement","src":"3607:15:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3330:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2416,"initializationExpression":{"assignments":[2380],"declarations":[{"constant":false,"id":2380,"mutability":"mutable","name":"i","nameLocation":"3322:1:9","nodeType":"VariableDeclaration","scope":2416,"src":"3314:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2379,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2382,"initialValue":{"hexValue":"3431","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:9","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:9"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:9","subExpression":{"id":2386,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3339:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2388,"nodeType":"ExpressionStatement","src":"3337:3:9"},"nodeType":"ForStatement","src":"3309:324:9"},{"expression":{"arguments":[{"id":2419,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"3656:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2417,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:9","typeDescriptions":{}}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2365,"id":2421,"nodeType":"Return","src":"3642:21:9"}]},"documentation":{"id":2359,"nodeType":"StructuredDocumentation","src":"2777:165:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2423,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:9","nodeType":"FunctionDefinition","parameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"addr","nameLocation":"2984:4:9","nodeType":"VariableDeclaration","scope":2423,"src":"2976:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2360,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:9"},"returnParameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2423,"src":"3013:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2363,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:9"},"scope":2461,"src":"2947:723:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2459,"nodeType":"Block","src":"3825:104:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3848:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2433,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:9","typeDescriptions":{}}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:9","memberName":"length","nodeType":"MemberAccess","src":"3842:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2440,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"3867:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2438,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:9","typeDescriptions":{}}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:9","memberName":"length","nodeType":"MemberAccess","src":"3861:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2447,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3896:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2445,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:9","typeDescriptions":{}}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2444,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2453,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"3919:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2451,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:9","typeDescriptions":{}}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2450,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2432,"id":2458,"nodeType":"Return","src":"3835:87:9"}]},"documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"3676:66:9","text":" @dev Returns true if the two strings are equal."},"id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:9","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"a","nameLocation":"3776:1:9","nodeType":"VariableDeclaration","scope":2460,"src":"3762:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2425,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"b","nameLocation":"3793:1:9","nodeType":"VariableDeclaration","scope":2460,"src":"3779:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2427,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:9"},"returnParameters":{"id":2432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2460,"src":"3819:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2430,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:9"},"scope":2461,"src":"3747:182:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2462,"src":"251:3680:9","usedErrors":[2161],"usedEvents":[]}],"src":"101:3831:9"},"id":9},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2809]},"id":2810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2463,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"138:205:10","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2809,"linearizedBaseContracts":[2809],"name":"ECDSA","nameLocation":"352:5:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2469,"members":[{"id":2465,"name":"NoError","nameLocation":"392:7:10","nodeType":"EnumValue","src":"392:7:10"},{"id":2466,"name":"InvalidSignature","nameLocation":"409:16:10","nodeType":"EnumValue","src":"409:16:10"},{"id":2467,"name":"InvalidSignatureLength","nameLocation":"435:22:10","nodeType":"EnumValue","src":"435:22:10"},{"id":2468,"name":"InvalidSignatureS","nameLocation":"467:17:10","nodeType":"EnumValue","src":"467:17:10"}],"name":"RecoverError","nameLocation":"369:12:10","nodeType":"EnumDefinition","src":"364:126:10"},{"documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"496:63:10","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2472,"name":"ECDSAInvalidSignature","nameLocation":"570:21:10","nodeType":"ErrorDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[],"src":"591:2:10"},"src":"564:30:10"},{"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"600:60:10","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2477,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:10","nodeType":"ErrorDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"length","nameLocation":"707:6:10","nodeType":"VariableDeclaration","scope":2477,"src":"699:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:10"},"src":"665:50:10"},{"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"721:85:10","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2482,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:10","nodeType":"ErrorDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"s","nameLocation":"848:1:10","nodeType":"VariableDeclaration","scope":2482,"src":"840:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:10"},"src":"811:40:10"},{"body":{"id":2534,"nodeType":"Block","src":"2285:622:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2497,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2299:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:10","memberName":"length","nodeType":"MemberAccess","src":"2299:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2532,"nodeType":"Block","src":"2793:108:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:10","typeDescriptions":{}}},"id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2523,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2827:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2469_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:10","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"2827:35:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2527,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2872:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:10","memberName":"length","nodeType":"MemberAccess","src":"2872:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:10","typeDescriptions":{}}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2496,"id":2531,"nodeType":"Return","src":"2807:83:10"}]},"id":2533,"nodeType":"IfStatement","src":"2295:606:10","trueBody":{"id":2518,"nodeType":"Block","src":"2323:464:10","statements":[{"assignments":[2502],"declarations":[{"constant":false,"id":2502,"mutability":"mutable","name":"r","nameLocation":"2345:1:10","nodeType":"VariableDeclaration","scope":2518,"src":"2337:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2503,"nodeType":"VariableDeclarationStatement","src":"2337:9:10"},{"assignments":[2505],"declarations":[{"constant":false,"id":2505,"mutability":"mutable","name":"s","nameLocation":"2368:1:10","nodeType":"VariableDeclaration","scope":2518,"src":"2360:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2506,"nodeType":"VariableDeclarationStatement","src":"2360:9:10"},{"assignments":[2508],"declarations":[{"constant":false,"id":2508,"mutability":"mutable","name":"v","nameLocation":"2389:1:10","nodeType":"VariableDeclaration","scope":2518,"src":"2383:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2507,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2509,"nodeType":"VariableDeclarationStatement","src":"2383:7:10"},{"AST":{"nativeSrc":"2560:171:10","nodeType":"YulBlock","src":"2560:171:10","statements":[{"nativeSrc":"2578:32:10","nodeType":"YulAssignment","src":"2578:32:10","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:10","nodeType":"YulIdentifier","src":"2593:9:10"},{"kind":"number","nativeSrc":"2604:4:10","nodeType":"YulLiteral","src":"2604:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:10","nodeType":"YulIdentifier","src":"2589:3:10"},"nativeSrc":"2589:20:10","nodeType":"YulFunctionCall","src":"2589:20:10"}],"functionName":{"name":"mload","nativeSrc":"2583:5:10","nodeType":"YulIdentifier","src":"2583:5:10"},"nativeSrc":"2583:27:10","nodeType":"YulFunctionCall","src":"2583:27:10"},"variableNames":[{"name":"r","nativeSrc":"2578:1:10","nodeType":"YulIdentifier","src":"2578:1:10"}]},{"nativeSrc":"2627:32:10","nodeType":"YulAssignment","src":"2627:32:10","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:10","nodeType":"YulIdentifier","src":"2642:9:10"},{"kind":"number","nativeSrc":"2653:4:10","nodeType":"YulLiteral","src":"2653:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:10","nodeType":"YulIdentifier","src":"2638:3:10"},"nativeSrc":"2638:20:10","nodeType":"YulFunctionCall","src":"2638:20:10"}],"functionName":{"name":"mload","nativeSrc":"2632:5:10","nodeType":"YulIdentifier","src":"2632:5:10"},"nativeSrc":"2632:27:10","nodeType":"YulFunctionCall","src":"2632:27:10"},"variableNames":[{"name":"s","nativeSrc":"2627:1:10","nodeType":"YulIdentifier","src":"2627:1:10"}]},{"nativeSrc":"2676:41:10","nodeType":"YulAssignment","src":"2676:41:10","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:10","nodeType":"YulLiteral","src":"2686:1:10","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:10","nodeType":"YulIdentifier","src":"2699:9:10"},{"kind":"number","nativeSrc":"2710:4:10","nodeType":"YulLiteral","src":"2710:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:10","nodeType":"YulIdentifier","src":"2695:3:10"},"nativeSrc":"2695:20:10","nodeType":"YulFunctionCall","src":"2695:20:10"}],"functionName":{"name":"mload","nativeSrc":"2689:5:10","nodeType":"YulIdentifier","src":"2689:5:10"},"nativeSrc":"2689:27:10","nodeType":"YulFunctionCall","src":"2689:27:10"}],"functionName":{"name":"byte","nativeSrc":"2681:4:10","nodeType":"YulIdentifier","src":"2681:4:10"},"nativeSrc":"2681:36:10","nodeType":"YulFunctionCall","src":"2681:36:10"},"variableNames":[{"name":"v","nativeSrc":"2676:1:10","nodeType":"YulIdentifier","src":"2676:1:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2502,"isOffset":false,"isSlot":false,"src":"2578:1:10","valueSize":1},{"declaration":2505,"isOffset":false,"isSlot":false,"src":"2627:1:10","valueSize":1},{"declaration":2487,"isOffset":false,"isSlot":false,"src":"2593:9:10","valueSize":1},{"declaration":2487,"isOffset":false,"isSlot":false,"src":"2642:9:10","valueSize":1},{"declaration":2487,"isOffset":false,"isSlot":false,"src":"2699:9:10","valueSize":1},{"declaration":2508,"isOffset":false,"isSlot":false,"src":"2676:1:10","valueSize":1}],"flags":["memory-safe"],"id":2510,"nodeType":"InlineAssembly","src":"2535:196:10"},{"expression":{"arguments":[{"id":2512,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"2762:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2513,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"2768:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2514,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2771:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2515,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"2774:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2511,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2535,2615,2723],"referencedDeclaration":2723,"src":"2751:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2496,"id":2517,"nodeType":"Return","src":"2744:32:10"}]}}]},"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"857:1267:10","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2535,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:10","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"hash","nameLocation":"2166:4:10","nodeType":"VariableDeclaration","scope":2535,"src":"2158:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"signature","nameLocation":"2193:9:10","nodeType":"VariableDeclaration","scope":2535,"src":"2180:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2486,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:10"},"returnParameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:10","nodeType":"VariableDeclaration","scope":2535,"src":"2232:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2489,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"err","nameLocation":"2264:3:10","nodeType":"VariableDeclaration","scope":2535,"src":"2251:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2492,"nodeType":"UserDefinedTypeName","pathNode":{"id":2491,"name":"RecoverError","nameLocations":["2251:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2469,"src":"2251:12:10"},"referencedDeclaration":2469,"src":"2251:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:10","nodeType":"VariableDeclaration","scope":2535,"src":"2269:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:10"},"scope":2809,"src":"2129:778:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2564,"nodeType":"Block","src":"3801:168:10","statements":[{"assignments":[2546,2549,2551],"declarations":[{"constant":false,"id":2546,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:10","nodeType":"VariableDeclaration","scope":2564,"src":"3812:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2545,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"error","nameLocation":"3844:5:10","nodeType":"VariableDeclaration","scope":2564,"src":"3831:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2548,"nodeType":"UserDefinedTypeName","pathNode":{"id":2547,"name":"RecoverError","nameLocations":["3831:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2469,"src":"3831:12:10"},"referencedDeclaration":2469,"src":"3831:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:10","nodeType":"VariableDeclaration","scope":2564,"src":"3851:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2556,"initialValue":{"arguments":[{"id":2553,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"3882:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2554,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"3888:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2552,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2535,2615,2723],"referencedDeclaration":2535,"src":"3871:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:10"},{"expression":{"arguments":[{"id":2558,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"3920:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},{"id":2559,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"3927:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2557,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3908:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2469_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2561,"nodeType":"ExpressionStatement","src":"3908:28:10"},{"expression":{"id":2562,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"3953:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2544,"id":2563,"nodeType":"Return","src":"3946:16:10"}]},"documentation":{"id":2536,"nodeType":"StructuredDocumentation","src":"2913:796:10","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2565,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:10","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"hash","nameLocation":"3739:4:10","nodeType":"VariableDeclaration","scope":2565,"src":"3731:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2540,"mutability":"mutable","name":"signature","nameLocation":"3758:9:10","nodeType":"VariableDeclaration","scope":2565,"src":"3745:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2539,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:10"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2565,"src":"3792:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:10"},"scope":2809,"src":"3714:255:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2614,"nodeType":"Block","src":"4348:342:10","statements":[{"id":2613,"nodeType":"UncheckedBlock","src":"4358:326:10","statements":[{"assignments":[2583],"declarations":[{"constant":false,"id":2583,"mutability":"mutable","name":"s","nameLocation":"4390:1:10","nodeType":"VariableDeclaration","scope":2613,"src":"4382:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2590,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2584,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"4394:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:10","typeDescriptions":{}}},"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:10"},{"assignments":[2592],"declarations":[{"constant":false,"id":2592,"mutability":"mutable","name":"v","nameLocation":"4591:1:10","nodeType":"VariableDeclaration","scope":2613,"src":"4585:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2591,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2605,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2597,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"4610:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:10","typeDescriptions":{}}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:10","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2593,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:10","typeDescriptions":{}}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:10"},{"expression":{"arguments":[{"id":2607,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"4659:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2608,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"4665:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2609,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"4668:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2610,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4671:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2606,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2535,2615,2723],"referencedDeclaration":2723,"src":"4648:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2581,"id":2612,"nodeType":"Return","src":"4641:32:10"}]}]},"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"3975:205:10","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2615,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:10","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"hash","nameLocation":"4222:4:10","nodeType":"VariableDeclaration","scope":2615,"src":"4214:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"r","nameLocation":"4244:1:10","nodeType":"VariableDeclaration","scope":2615,"src":"4236:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"vs","nameLocation":"4263:2:10","nodeType":"VariableDeclaration","scope":2615,"src":"4255:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:10"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:10","nodeType":"VariableDeclaration","scope":2615,"src":"4295:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2574,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"err","nameLocation":"4327:3:10","nodeType":"VariableDeclaration","scope":2615,"src":"4314:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2577,"nodeType":"UserDefinedTypeName","pathNode":{"id":2576,"name":"RecoverError","nameLocations":["4314:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2469,"src":"4314:12:10"},"referencedDeclaration":2469,"src":"4314:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:10","nodeType":"VariableDeclaration","scope":2615,"src":"4332:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:10"},"scope":2809,"src":"4185:505:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2647,"nodeType":"Block","src":"4903:164:10","statements":[{"assignments":[2628,2631,2633],"declarations":[{"constant":false,"id":2628,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:10","nodeType":"VariableDeclaration","scope":2647,"src":"4914:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2627,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2631,"mutability":"mutable","name":"error","nameLocation":"4946:5:10","nodeType":"VariableDeclaration","scope":2647,"src":"4933:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2630,"nodeType":"UserDefinedTypeName","pathNode":{"id":2629,"name":"RecoverError","nameLocations":["4933:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2469,"src":"4933:12:10"},"referencedDeclaration":2469,"src":"4933:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2633,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:10","nodeType":"VariableDeclaration","scope":2647,"src":"4953:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2639,"initialValue":{"arguments":[{"id":2635,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"4984:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2636,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"4990:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2637,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"4993:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2634,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2535,2615,2723],"referencedDeclaration":2615,"src":"4973:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:10"},{"expression":{"arguments":[{"id":2641,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"5018:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},{"id":2642,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"5025:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2640,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"5006:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2469_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2644,"nodeType":"ExpressionStatement","src":"5006:28:10"},{"expression":{"id":2645,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5051:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2626,"id":2646,"nodeType":"Return","src":"5044:16:10"}]},"documentation":{"id":2616,"nodeType":"StructuredDocumentation","src":"4696:116:10","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2648,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:10","nodeType":"FunctionDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"hash","nameLocation":"4842:4:10","nodeType":"VariableDeclaration","scope":2648,"src":"4834:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"r","nameLocation":"4856:1:10","nodeType":"VariableDeclaration","scope":2648,"src":"4848:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2622,"mutability":"mutable","name":"vs","nameLocation":"4867:2:10","nodeType":"VariableDeclaration","scope":2648,"src":"4859:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:10"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2648,"src":"4894:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2624,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:10"},"scope":2809,"src":"4817:250:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2722,"nodeType":"Block","src":"5382:1372:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2669,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"6278:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:10","typeDescriptions":{}}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2683,"nodeType":"IfStatement","src":"6266:164:10","trueBody":{"id":2682,"nodeType":"Block","src":"6351:79:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2673,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:10","typeDescriptions":{}}},"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2677,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6385:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2469_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:10","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2468,"src":"6385:30:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},{"id":2679,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"6417:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2666,"id":2681,"nodeType":"Return","src":"6365:54:10"}]}},{"assignments":[2685],"declarations":[{"constant":false,"id":2685,"mutability":"mutable","name":"signer","nameLocation":"6532:6:10","nodeType":"VariableDeclaration","scope":2722,"src":"6524:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2692,"initialValue":{"arguments":[{"id":2687,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"6551:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2688,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"6557:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2689,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"6560:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2690,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"6563:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2686,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:10","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2693,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"6579:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2694,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:10","typeDescriptions":{}}},"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2712,"nodeType":"IfStatement","src":"6575:113:10","trueBody":{"id":2711,"nodeType":"Block","src":"6601:87:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2699,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:10","typeDescriptions":{}}},"id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2703,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6635:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2469_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:10","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2466,"src":"6635:29:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:10","typeDescriptions":{}}},"id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2709,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2666,"id":2710,"nodeType":"Return","src":"6615:62:10"}]}},{"expression":{"components":[{"id":2713,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"6706:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2714,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"6714:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2469_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:10","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"6714:20:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:10","typeDescriptions":{}}},"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2666,"id":2721,"nodeType":"Return","src":"6698:49:10"}]},"documentation":{"id":2649,"nodeType":"StructuredDocumentation","src":"5073:125:10","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2723,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:10","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"hash","nameLocation":"5240:4:10","nodeType":"VariableDeclaration","scope":2723,"src":"5232:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2653,"mutability":"mutable","name":"v","nameLocation":"5260:1:10","nodeType":"VariableDeclaration","scope":2723,"src":"5254:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2652,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"r","nameLocation":"5279:1:10","nodeType":"VariableDeclaration","scope":2723,"src":"5271:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"s","nameLocation":"5298:1:10","nodeType":"VariableDeclaration","scope":2723,"src":"5290:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:10"},"returnParameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:10","nodeType":"VariableDeclaration","scope":2723,"src":"5329:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2659,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2663,"mutability":"mutable","name":"err","nameLocation":"5361:3:10","nodeType":"VariableDeclaration","scope":2723,"src":"5348:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2662,"nodeType":"UserDefinedTypeName","pathNode":{"id":2661,"name":"RecoverError","nameLocations":["5348:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2469,"src":"5348:12:10"},"referencedDeclaration":2469,"src":"5348:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2665,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:10","nodeType":"VariableDeclaration","scope":2723,"src":"5366:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:10"},"scope":2809,"src":"5203:1551:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2758,"nodeType":"Block","src":"6981:166:10","statements":[{"assignments":[2738,2741,2743],"declarations":[{"constant":false,"id":2738,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:10","nodeType":"VariableDeclaration","scope":2758,"src":"6992:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2737,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"error","nameLocation":"7024:5:10","nodeType":"VariableDeclaration","scope":2758,"src":"7011:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2740,"nodeType":"UserDefinedTypeName","pathNode":{"id":2739,"name":"RecoverError","nameLocations":["7011:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2469,"src":"7011:12:10"},"referencedDeclaration":2469,"src":"7011:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:10","nodeType":"VariableDeclaration","scope":2758,"src":"7031:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2750,"initialValue":{"arguments":[{"id":2745,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7062:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2746,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"7068:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2747,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"7071:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2748,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"7074:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2744,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2535,2615,2723],"referencedDeclaration":2723,"src":"7051:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2469_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:10"},{"expression":{"arguments":[{"id":2752,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"7098:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},{"id":2753,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"7105:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2751,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"7086:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2469_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2755,"nodeType":"ExpressionStatement","src":"7086:28:10"},{"expression":{"id":2756,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"7131:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2736,"id":2757,"nodeType":"Return","src":"7124:16:10"}]},"documentation":{"id":2724,"nodeType":"StructuredDocumentation","src":"6760:122:10","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:10","nodeType":"FunctionDefinition","parameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"hash","nameLocation":"6912:4:10","nodeType":"VariableDeclaration","scope":2759,"src":"6904:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"v","nameLocation":"6924:1:10","nodeType":"VariableDeclaration","scope":2759,"src":"6918:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2727,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2730,"mutability":"mutable","name":"r","nameLocation":"6935:1:10","nodeType":"VariableDeclaration","scope":2759,"src":"6927:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2732,"mutability":"mutable","name":"s","nameLocation":"6946:1:10","nodeType":"VariableDeclaration","scope":2759,"src":"6938:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:10"},"returnParameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2759,"src":"6972:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:10"},"scope":2809,"src":"6887:260:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2807,"nodeType":"Block","src":"7352:460:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2768,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"7366:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2769,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"7375:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2469_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:10","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2465,"src":"7375:20:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2774,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"7462:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2775,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"7471:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2469_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:10","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2466,"src":"7471:29:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2782,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"7567:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2783,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"7576:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2469_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:10","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"7576:35:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2794,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"7701:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2795,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"7710:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2469_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:10","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2468,"src":"7710:30:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2803,"nodeType":"IfStatement","src":"7697:109:10","trueBody":{"id":2802,"nodeType":"Block","src":"7742:64:10","statements":[{"errorCall":{"arguments":[{"id":2799,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"7786:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2798,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"7763:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2801,"nodeType":"RevertStatement","src":"7756:39:10"}]}},"id":2804,"nodeType":"IfStatement","src":"7563:243:10","trueBody":{"id":2793,"nodeType":"Block","src":"7613:78:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2789,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"7670:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:10","typeDescriptions":{}}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2786,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"7634:27:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2792,"nodeType":"RevertStatement","src":"7627:53:10"}]}},"id":2805,"nodeType":"IfStatement","src":"7458:348:10","trueBody":{"id":2781,"nodeType":"Block","src":"7502:55:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2778,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"7523:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2780,"nodeType":"RevertStatement","src":"7516:30:10"}]}},"id":2806,"nodeType":"IfStatement","src":"7362:444:10","trueBody":{"id":2773,"nodeType":"Block","src":"7397:55:10","statements":[{"functionReturnParameters":2767,"id":2772,"nodeType":"Return","src":"7411:7:10"}]}}]},"documentation":{"id":2760,"nodeType":"StructuredDocumentation","src":"7153:122:10","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:10","nodeType":"FunctionDefinition","parameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"error","nameLocation":"7314:5:10","nodeType":"VariableDeclaration","scope":2808,"src":"7301:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2762,"nodeType":"UserDefinedTypeName","pathNode":{"id":2761,"name":"RecoverError","nameLocations":["7301:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2469,"src":"7301:12:10"},"referencedDeclaration":2469,"src":"7301:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2469","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2765,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:10","nodeType":"VariableDeclaration","scope":2808,"src":"7321:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:10"},"returnParameters":{"id":2767,"nodeType":"ParameterList","parameters":[],"src":"7352:0:10"},"scope":2809,"src":"7280:532:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2810,"src":"344:7470:10","usedErrors":[2472,2477,2482],"usedEvents":[]}],"src":"112:7703:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2883],"Strings":[2461]},"id":2884,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2811,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2813,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2884,"sourceUnit":2462,"src":"149:39:11","symbolAliases":[{"foreign":{"id":2812,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"157:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2814,"nodeType":"StructuredDocumentation","src":"190:330:11","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2883,"linearizedBaseContracts":[2883],"name":"MessageHashUtils","nameLocation":"529:16:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2823,"nodeType":"Block","src":"1314:341:11","statements":[{"AST":{"nativeSrc":"1349:300:11","nodeType":"YulBlock","src":"1349:300:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:11","nodeType":"YulLiteral","src":"1370:4:11","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:11","nodeType":"YulLiteral","src":"1376:34:11","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:11","nodeType":"YulIdentifier","src":"1363:6:11"},"nativeSrc":"1363:48:11","nodeType":"YulFunctionCall","src":"1363:48:11"},"nativeSrc":"1363:48:11","nodeType":"YulExpressionStatement","src":"1363:48:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:11","nodeType":"YulLiteral","src":"1472:4:11","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:11","nodeType":"YulIdentifier","src":"1478:11:11"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:11","nodeType":"YulIdentifier","src":"1465:6:11"},"nativeSrc":"1465:25:11","nodeType":"YulFunctionCall","src":"1465:25:11"},"nativeSrc":"1465:25:11","nodeType":"YulExpressionStatement","src":"1465:25:11"},{"nativeSrc":"1544:31:11","nodeType":"YulAssignment","src":"1544:31:11","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:11","nodeType":"YulLiteral","src":"1564:4:11","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:11","nodeType":"YulLiteral","src":"1570:4:11","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:11","nodeType":"YulIdentifier","src":"1554:9:11"},"nativeSrc":"1554:21:11","nodeType":"YulFunctionCall","src":"1554:21:11"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:11","nodeType":"YulIdentifier","src":"1544:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2820,"isOffset":false,"isSlot":false,"src":"1544:6:11","valueSize":1},{"declaration":2817,"isOffset":false,"isSlot":false,"src":"1478:11:11","valueSize":1}],"flags":["memory-safe"],"id":2822,"nodeType":"InlineAssembly","src":"1324:325:11"}]},"documentation":{"id":2815,"nodeType":"StructuredDocumentation","src":"552:665:11","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2824,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:11","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:11","nodeType":"VariableDeclaration","scope":2824,"src":"1254:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:11"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"digest","nameLocation":"1306:6:11","nodeType":"VariableDeclaration","scope":2824,"src":"1298:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:11"},"scope":2883,"src":"1222:433:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2849,"nodeType":"Block","src":"2207:143:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2841,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"2316:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:11","memberName":"length","nodeType":"MemberAccess","src":"2316:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2839,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"2299:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2461_$","typeString":"type(library Strings)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:11","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2209,"src":"2299:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2837,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:11","typeDescriptions":{}}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2845,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"2334:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2833,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:11","typeDescriptions":{}}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:11","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2832,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2831,"id":2848,"nodeType":"Return","src":"2217:126:11"}]},"documentation":{"id":2825,"nodeType":"StructuredDocumentation","src":"1661:455:11","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2850,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:11","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"message","nameLocation":"2166:7:11","nodeType":"VariableDeclaration","scope":2850,"src":"2153:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2826,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:11"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2850,"src":"2198:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:11"},"scope":2883,"src":"2121:229:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2869,"nodeType":"Block","src":"2804:80:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2864,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"2860:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2865,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"2871:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2861,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2860,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2859,"id":2868,"nodeType":"Return","src":"2814:63:11"}]},"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"2356:332:11","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:11","nodeType":"FunctionDefinition","parameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"validator","nameLocation":"2742:9:11","nodeType":"VariableDeclaration","scope":2870,"src":"2734:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2852,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2855,"mutability":"mutable","name":"data","nameLocation":"2766:4:11","nodeType":"VariableDeclaration","scope":2870,"src":"2753:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2854,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:11"},"returnParameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2870,"src":"2795:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:11"},"scope":2883,"src":"2693:191:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2881,"nodeType":"Block","src":"3435:265:11","statements":[{"AST":{"nativeSrc":"3470:224:11","nodeType":"YulBlock","src":"3470:224:11","statements":[{"nativeSrc":"3484:22:11","nodeType":"YulVariableDeclaration","src":"3484:22:11","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:11","nodeType":"YulLiteral","src":"3501:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:11","nodeType":"YulIdentifier","src":"3495:5:11"},"nativeSrc":"3495:11:11","nodeType":"YulFunctionCall","src":"3495:11:11"},"variables":[{"name":"ptr","nativeSrc":"3488:3:11","nodeType":"YulTypedName","src":"3488:3:11","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:11","nodeType":"YulIdentifier","src":"3526:3:11"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:11","nodeType":"YulLiteral","src":"3531:10:11","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:11","nodeType":"YulIdentifier","src":"3519:6:11"},"nativeSrc":"3519:23:11","nodeType":"YulFunctionCall","src":"3519:23:11"},"nativeSrc":"3519:23:11","nodeType":"YulExpressionStatement","src":"3519:23:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:11","nodeType":"YulIdentifier","src":"3566:3:11"},{"kind":"number","nativeSrc":"3571:4:11","nodeType":"YulLiteral","src":"3571:4:11","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:11","nodeType":"YulIdentifier","src":"3562:3:11"},"nativeSrc":"3562:14:11","nodeType":"YulFunctionCall","src":"3562:14:11"},{"name":"domainSeparator","nativeSrc":"3578:15:11","nodeType":"YulIdentifier","src":"3578:15:11"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:11","nodeType":"YulIdentifier","src":"3555:6:11"},"nativeSrc":"3555:39:11","nodeType":"YulFunctionCall","src":"3555:39:11"},"nativeSrc":"3555:39:11","nodeType":"YulExpressionStatement","src":"3555:39:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:11","nodeType":"YulIdentifier","src":"3618:3:11"},{"kind":"number","nativeSrc":"3623:4:11","nodeType":"YulLiteral","src":"3623:4:11","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:11","nodeType":"YulIdentifier","src":"3614:3:11"},"nativeSrc":"3614:14:11","nodeType":"YulFunctionCall","src":"3614:14:11"},{"name":"structHash","nativeSrc":"3630:10:11","nodeType":"YulIdentifier","src":"3630:10:11"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:11","nodeType":"YulIdentifier","src":"3607:6:11"},"nativeSrc":"3607:34:11","nodeType":"YulFunctionCall","src":"3607:34:11"},"nativeSrc":"3607:34:11","nodeType":"YulExpressionStatement","src":"3607:34:11"},{"nativeSrc":"3654:30:11","nodeType":"YulAssignment","src":"3654:30:11","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:11","nodeType":"YulIdentifier","src":"3674:3:11"},{"kind":"number","nativeSrc":"3679:4:11","nodeType":"YulLiteral","src":"3679:4:11","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:11","nodeType":"YulIdentifier","src":"3664:9:11"},"nativeSrc":"3664:20:11","nodeType":"YulFunctionCall","src":"3664:20:11"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:11","nodeType":"YulIdentifier","src":"3654:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2878,"isOffset":false,"isSlot":false,"src":"3654:6:11","valueSize":1},{"declaration":2873,"isOffset":false,"isSlot":false,"src":"3578:15:11","valueSize":1},{"declaration":2875,"isOffset":false,"isSlot":false,"src":"3630:10:11","valueSize":1}],"flags":["memory-safe"],"id":2880,"nodeType":"InlineAssembly","src":"3445:249:11"}]},"documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"2890:431:11","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2882,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:11","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:11","nodeType":"VariableDeclaration","scope":2882,"src":"3351:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:11","nodeType":"VariableDeclaration","scope":2882,"src":"3376:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:11"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"digest","nameLocation":"3427:6:11","nodeType":"VariableDeclaration","scope":2882,"src":"3419:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:11"},"scope":2883,"src":"3326:374:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2884,"src":"521:3181:11","usedErrors":[],"usedEvents":[]}],"src":"123:3580:11"},"id":11},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4489],"Panic":[2141],"SafeCast":[6254]},"id":4490,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2885,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2887,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4490,"sourceUnit":2142,"src":"129:35:12","symbolAliases":[{"foreign":{"id":2886,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"137:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2889,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4490,"sourceUnit":6255,"src":"165:40:12","symbolAliases":[{"foreign":{"id":2888,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"173:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2890,"nodeType":"StructuredDocumentation","src":"207:73:12","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4489,"linearizedBaseContracts":[4489],"name":"Math","nameLocation":"289:4:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2895,"members":[{"id":2891,"name":"Floor","nameLocation":"324:5:12","nodeType":"EnumValue","src":"324:5:12"},{"id":2892,"name":"Ceil","nameLocation":"367:4:12","nodeType":"EnumValue","src":"367:4:12"},{"id":2893,"name":"Trunc","nameLocation":"409:5:12","nodeType":"EnumValue","src":"409:5:12"},{"id":2894,"name":"Expand","nameLocation":"439:6:12","nodeType":"EnumValue","src":"439:6:12"}],"name":"Rounding","nameLocation":"305:8:12","nodeType":"EnumDefinition","src":"300:169:12"},{"body":{"id":2926,"nodeType":"Block","src":"677:140:12","statements":[{"id":2925,"nodeType":"UncheckedBlock","src":"687:124:12","statements":[{"assignments":[2908],"declarations":[{"constant":false,"id":2908,"mutability":"mutable","name":"c","nameLocation":"719:1:12","nodeType":"VariableDeclaration","scope":2925,"src":"711:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2912,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"723:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2910,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"727:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"746:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2914,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"750:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2920,"nodeType":"IfStatement","src":"742:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2906,"id":2919,"nodeType":"Return","src":"753:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2922,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"798:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2923,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2906,"id":2924,"nodeType":"Return","src":"784:16:12"}]}]},"documentation":{"id":2896,"nodeType":"StructuredDocumentation","src":"475:106:12","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":2927,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:12","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2898,"mutability":"mutable","name":"a","nameLocation":"610:1:12","nodeType":"VariableDeclaration","scope":2927,"src":"602:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2900,"mutability":"mutable","name":"b","nameLocation":"621:1:12","nodeType":"VariableDeclaration","scope":2927,"src":"613:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:12"},"returnParameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"success","nameLocation":"652:7:12","nodeType":"VariableDeclaration","scope":2927,"src":"647:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2902,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"result","nameLocation":"669:6:12","nodeType":"VariableDeclaration","scope":2927,"src":"661:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:12"},"scope":4489,"src":"586:231:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2954,"nodeType":"Block","src":"1028:113:12","statements":[{"id":2953,"nodeType":"UncheckedBlock","src":"1038:97:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2939,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"1066:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2940,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"1070:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2946,"nodeType":"IfStatement","src":"1062:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2938,"id":2945,"nodeType":"Return","src":"1073:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"1118:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2949,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"1122:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2938,"id":2952,"nodeType":"Return","src":"1104:20:12"}]}]},"documentation":{"id":2928,"nodeType":"StructuredDocumentation","src":"823:109:12","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:12","nodeType":"FunctionDefinition","parameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"a","nameLocation":"961:1:12","nodeType":"VariableDeclaration","scope":2955,"src":"953:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"b","nameLocation":"972:1:12","nodeType":"VariableDeclaration","scope":2955,"src":"964:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:12"},"returnParameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"success","nameLocation":"1003:7:12","nodeType":"VariableDeclaration","scope":2955,"src":"998:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2934,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"result","nameLocation":"1020:6:12","nodeType":"VariableDeclaration","scope":2955,"src":"1012:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:12"},"scope":4489,"src":"937:204:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2996,"nodeType":"Block","src":"1355:417:12","statements":[{"id":2995,"nodeType":"UncheckedBlock","src":"1365:401:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"1623:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"nodeType":"IfStatement","src":"1619:28:12","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2966,"id":2973,"nodeType":"Return","src":"1631:16:12"}},{"assignments":[2976],"declarations":[{"constant":false,"id":2976,"mutability":"mutable","name":"c","nameLocation":"1669:1:12","nodeType":"VariableDeclaration","scope":2995,"src":"1661:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2980,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"1673:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2978,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"1677:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"1696:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2982,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"1700:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2984,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"1705:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2990,"nodeType":"IfStatement","src":"1692:33:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2966,"id":2989,"nodeType":"Return","src":"1708:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2992,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"1753:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2966,"id":2994,"nodeType":"Return","src":"1739:16:12"}]}]},"documentation":{"id":2956,"nodeType":"StructuredDocumentation","src":"1147:112:12","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":2997,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:12","nodeType":"FunctionDefinition","parameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"a","nameLocation":"1288:1:12","nodeType":"VariableDeclaration","scope":2997,"src":"1280:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"b","nameLocation":"1299:1:12","nodeType":"VariableDeclaration","scope":2997,"src":"1291:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:12"},"returnParameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"success","nameLocation":"1330:7:12","nodeType":"VariableDeclaration","scope":2997,"src":"1325:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2962,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"result","nameLocation":"1347:6:12","nodeType":"VariableDeclaration","scope":2997,"src":"1339:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:12"},"scope":4489,"src":"1264:508:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3024,"nodeType":"Block","src":"1987:114:12","statements":[{"id":3023,"nodeType":"UncheckedBlock","src":"1997:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3009,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"2025:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3016,"nodeType":"IfStatement","src":"2021:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3008,"id":3015,"nodeType":"Return","src":"2033:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"2078:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3019,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"2082:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3008,"id":3022,"nodeType":"Return","src":"2064:20:12"}]}]},"documentation":{"id":2998,"nodeType":"StructuredDocumentation","src":"1778:113:12","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3025,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:12","nodeType":"FunctionDefinition","parameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"a","nameLocation":"1920:1:12","nodeType":"VariableDeclaration","scope":3025,"src":"1912:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"b","nameLocation":"1931:1:12","nodeType":"VariableDeclaration","scope":3025,"src":"1923:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:12"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"success","nameLocation":"1962:7:12","nodeType":"VariableDeclaration","scope":3025,"src":"1957:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3004,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3007,"mutability":"mutable","name":"result","nameLocation":"1979:6:12","nodeType":"VariableDeclaration","scope":3025,"src":"1971:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:12"},"scope":4489,"src":"1896:205:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3052,"nodeType":"Block","src":"2326:114:12","statements":[{"id":3051,"nodeType":"UncheckedBlock","src":"2336:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3037,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"2364:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3044,"nodeType":"IfStatement","src":"2360:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3036,"id":3043,"nodeType":"Return","src":"2372:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"2417:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3047,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"2421:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3036,"id":3050,"nodeType":"Return","src":"2403:20:12"}]}]},"documentation":{"id":3026,"nodeType":"StructuredDocumentation","src":"2107:123:12","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3053,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:12","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"a","nameLocation":"2259:1:12","nodeType":"VariableDeclaration","scope":3053,"src":"2251:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3030,"mutability":"mutable","name":"b","nameLocation":"2270:1:12","nodeType":"VariableDeclaration","scope":3053,"src":"2262:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:12"},"returnParameters":{"id":3036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"success","nameLocation":"2301:7:12","nodeType":"VariableDeclaration","scope":3053,"src":"2296:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3032,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3035,"mutability":"mutable","name":"result","nameLocation":"2318:6:12","nodeType":"VariableDeclaration","scope":3053,"src":"2310:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3034,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:12"},"scope":4489,"src":"2235:205:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3079,"nodeType":"Block","src":"2912:207:12","statements":[{"id":3078,"nodeType":"UncheckedBlock","src":"2922:191:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3065,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"3060:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"3066:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3067,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"3070:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3072,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"3091:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3070,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"3075:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"3075:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3064,"id":3077,"nodeType":"Return","src":"3053:49:12"}]}]},"documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"2446:374:12","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3080,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:12","nodeType":"FunctionDefinition","parameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"mutability":"mutable","name":"condition","nameLocation":"2847:9:12","nodeType":"VariableDeclaration","scope":3080,"src":"2842:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3055,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"a","nameLocation":"2866:1:12","nodeType":"VariableDeclaration","scope":3080,"src":"2858:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3060,"mutability":"mutable","name":"b","nameLocation":"2877:1:12","nodeType":"VariableDeclaration","scope":3080,"src":"2869:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:12"},"returnParameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3080,"src":"2903:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:12"},"scope":4489,"src":"2825:294:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3098,"nodeType":"Block","src":"3256:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3091,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"3281:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3092,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"3285:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3094,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"3288:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3095,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"3291:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3090,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"3273:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3089,"id":3097,"nodeType":"Return","src":"3266:27:12"}]},"documentation":{"id":3081,"nodeType":"StructuredDocumentation","src":"3125:59:12","text":" @dev Returns the largest of two numbers."},"id":3099,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:12","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"a","nameLocation":"3210:1:12","nodeType":"VariableDeclaration","scope":3099,"src":"3202:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3085,"mutability":"mutable","name":"b","nameLocation":"3221:1:12","nodeType":"VariableDeclaration","scope":3099,"src":"3213:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:12"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3099,"src":"3247:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:12"},"scope":4489,"src":"3189:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3117,"nodeType":"Block","src":"3438:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"3463:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"3467:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3113,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"3470:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3114,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"3473:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3109,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"3455:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3108,"id":3116,"nodeType":"Return","src":"3448:27:12"}]},"documentation":{"id":3100,"nodeType":"StructuredDocumentation","src":"3306:60:12","text":" @dev Returns the smallest of two numbers."},"id":3118,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:12","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"a","nameLocation":"3392:1:12","nodeType":"VariableDeclaration","scope":3118,"src":"3384:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"b","nameLocation":"3403:1:12","nodeType":"VariableDeclaration","scope":3118,"src":"3395:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:12"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3118,"src":"3429:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:12"},"scope":4489,"src":"3371:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3140,"nodeType":"Block","src":"3666:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3128,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"3721:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3129,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"3725:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3132,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"3731:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3133,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"3735:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3127,"id":3139,"nodeType":"Return","src":"3713:28:12"}]},"documentation":{"id":3119,"nodeType":"StructuredDocumentation","src":"3488:102:12","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3141,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:12","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"a","nameLocation":"3620:1:12","nodeType":"VariableDeclaration","scope":3141,"src":"3612:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3123,"mutability":"mutable","name":"b","nameLocation":"3631:1:12","nodeType":"VariableDeclaration","scope":3141,"src":"3623:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:12"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3141,"src":"3657:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:12"},"scope":4489,"src":"3595:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3181,"nodeType":"Block","src":"4040:633:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3151,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"4054:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3162,"nodeType":"IfStatement","src":"4050:150:12","trueBody":{"id":3161,"nodeType":"Block","src":"4062:138:12","statements":[{"expression":{"arguments":[{"expression":{"id":3157,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"4166:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2141_$","typeString":"type(library Panic)"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2108,"src":"4166:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3154,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"4154:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2141_$","typeString":"type(library Panic)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2140,"src":"4154:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3160,"nodeType":"ExpressionStatement","src":"4154:35:12"}]}},{"id":3180,"nodeType":"UncheckedBlock","src":"4583:84:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3165,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"4630:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3163,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"4614:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"4614:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3169,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"4641:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3173,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"4650:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3150,"id":3179,"nodeType":"Return","src":"4607:49:12"}]}]},"documentation":{"id":3142,"nodeType":"StructuredDocumentation","src":"3754:210:12","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:12","nodeType":"FunctionDefinition","parameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"mutability":"mutable","name":"a","nameLocation":"3994:1:12","nodeType":"VariableDeclaration","scope":3182,"src":"3986:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3146,"mutability":"mutable","name":"b","nameLocation":"4005:1:12","nodeType":"VariableDeclaration","scope":3182,"src":"3997:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:12"},"returnParameters":{"id":3150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3182,"src":"4031:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3148,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:12"},"scope":4489,"src":"3969:704:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3318,"nodeType":"Block","src":"5094:4128:12","statements":[{"id":3317,"nodeType":"UncheckedBlock","src":"5104:4112:12","statements":[{"assignments":[3195],"declarations":[{"constant":false,"id":3195,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:12","nodeType":"VariableDeclaration","scope":3317,"src":"5433:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3199,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3196,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"5449:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3197,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"5453:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:12"},{"assignments":[3201],"declarations":[{"constant":false,"id":3201,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:12","nodeType":"VariableDeclaration","scope":3317,"src":"5513:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3202,"nodeType":"VariableDeclarationStatement","src":"5513:13:12"},{"AST":{"nativeSrc":"5593:122:12","nodeType":"YulBlock","src":"5593:122:12","statements":[{"nativeSrc":"5611:30:12","nodeType":"YulVariableDeclaration","src":"5611:30:12","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:12","nodeType":"YulIdentifier","src":"5628:1:12"},{"name":"y","nativeSrc":"5631:1:12","nodeType":"YulIdentifier","src":"5631:1:12"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:12","nodeType":"YulLiteral","src":"5638:1:12","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:12","nodeType":"YulIdentifier","src":"5634:3:12"},"nativeSrc":"5634:6:12","nodeType":"YulFunctionCall","src":"5634:6:12"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:12","nodeType":"YulIdentifier","src":"5621:6:12"},"nativeSrc":"5621:20:12","nodeType":"YulFunctionCall","src":"5621:20:12"},"variables":[{"name":"mm","nativeSrc":"5615:2:12","nodeType":"YulTypedName","src":"5615:2:12","type":""}]},{"nativeSrc":"5658:43:12","nodeType":"YulAssignment","src":"5658:43:12","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:12","nodeType":"YulIdentifier","src":"5675:2:12"},{"name":"prod0","nativeSrc":"5679:5:12","nodeType":"YulIdentifier","src":"5679:5:12"}],"functionName":{"name":"sub","nativeSrc":"5671:3:12","nodeType":"YulIdentifier","src":"5671:3:12"},"nativeSrc":"5671:14:12","nodeType":"YulFunctionCall","src":"5671:14:12"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:12","nodeType":"YulIdentifier","src":"5690:2:12"},{"name":"prod0","nativeSrc":"5694:5:12","nodeType":"YulIdentifier","src":"5694:5:12"}],"functionName":{"name":"lt","nativeSrc":"5687:2:12","nodeType":"YulIdentifier","src":"5687:2:12"},"nativeSrc":"5687:13:12","nodeType":"YulFunctionCall","src":"5687:13:12"}],"functionName":{"name":"sub","nativeSrc":"5667:3:12","nodeType":"YulIdentifier","src":"5667:3:12"},"nativeSrc":"5667:34:12","nodeType":"YulFunctionCall","src":"5667:34:12"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:12","nodeType":"YulIdentifier","src":"5658:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3195,"isOffset":false,"isSlot":false,"src":"5679:5:12","valueSize":1},{"declaration":3195,"isOffset":false,"isSlot":false,"src":"5694:5:12","valueSize":1},{"declaration":3201,"isOffset":false,"isSlot":false,"src":"5658:5:12","valueSize":1},{"declaration":3185,"isOffset":false,"isSlot":false,"src":"5628:1:12","valueSize":1},{"declaration":3187,"isOffset":false,"isSlot":false,"src":"5631:1:12","valueSize":1}],"id":3203,"nodeType":"InlineAssembly","src":"5584:131:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3204,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"5796:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3212,"nodeType":"IfStatement","src":"5792:368:12","trueBody":{"id":3211,"nodeType":"Block","src":"5808:352:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"6126:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3208,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"6134:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3193,"id":3210,"nodeType":"Return","src":"6119:26:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3213,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"6270:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3214,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"6285:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3231,"nodeType":"IfStatement","src":"6266:143:12","trueBody":{"id":3230,"nodeType":"Block","src":"6292:117:12","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3220,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"6330:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3223,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"6348:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2141_$","typeString":"type(library Panic)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2108,"src":"6348:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3225,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"6372:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2141_$","typeString":"type(library Panic)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:12","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2104,"src":"6372:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3219,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"6322:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3216,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"6310:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2141_$","typeString":"type(library Panic)"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2140,"src":"6310:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3229,"nodeType":"ExpressionStatement","src":"6310:84:12"}]}},{"assignments":[3233],"declarations":[{"constant":false,"id":3233,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:12","nodeType":"VariableDeclaration","scope":3317,"src":"6664:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3234,"nodeType":"VariableDeclarationStatement","src":"6664:17:12"},{"AST":{"nativeSrc":"6704:291:12","nodeType":"YulBlock","src":"6704:291:12","statements":[{"nativeSrc":"6773:38:12","nodeType":"YulAssignment","src":"6773:38:12","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:12","nodeType":"YulIdentifier","src":"6793:1:12"},{"name":"y","nativeSrc":"6796:1:12","nodeType":"YulIdentifier","src":"6796:1:12"},{"name":"denominator","nativeSrc":"6799:11:12","nodeType":"YulIdentifier","src":"6799:11:12"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:12","nodeType":"YulIdentifier","src":"6786:6:12"},"nativeSrc":"6786:25:12","nodeType":"YulFunctionCall","src":"6786:25:12"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:12","nodeType":"YulIdentifier","src":"6773:9:12"}]},{"nativeSrc":"6893:41:12","nodeType":"YulAssignment","src":"6893:41:12","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:12","nodeType":"YulIdentifier","src":"6906:5:12"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:12","nodeType":"YulIdentifier","src":"6916:9:12"},{"name":"prod0","nativeSrc":"6927:5:12","nodeType":"YulIdentifier","src":"6927:5:12"}],"functionName":{"name":"gt","nativeSrc":"6913:2:12","nodeType":"YulIdentifier","src":"6913:2:12"},"nativeSrc":"6913:20:12","nodeType":"YulFunctionCall","src":"6913:20:12"}],"functionName":{"name":"sub","nativeSrc":"6902:3:12","nodeType":"YulIdentifier","src":"6902:3:12"},"nativeSrc":"6902:32:12","nodeType":"YulFunctionCall","src":"6902:32:12"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:12","nodeType":"YulIdentifier","src":"6893:5:12"}]},{"nativeSrc":"6951:30:12","nodeType":"YulAssignment","src":"6951:30:12","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:12","nodeType":"YulIdentifier","src":"6964:5:12"},{"name":"remainder","nativeSrc":"6971:9:12","nodeType":"YulIdentifier","src":"6971:9:12"}],"functionName":{"name":"sub","nativeSrc":"6960:3:12","nodeType":"YulIdentifier","src":"6960:3:12"},"nativeSrc":"6960:21:12","nodeType":"YulFunctionCall","src":"6960:21:12"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:12","nodeType":"YulIdentifier","src":"6951:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3189,"isOffset":false,"isSlot":false,"src":"6799:11:12","valueSize":1},{"declaration":3195,"isOffset":false,"isSlot":false,"src":"6927:5:12","valueSize":1},{"declaration":3195,"isOffset":false,"isSlot":false,"src":"6951:5:12","valueSize":1},{"declaration":3195,"isOffset":false,"isSlot":false,"src":"6964:5:12","valueSize":1},{"declaration":3201,"isOffset":false,"isSlot":false,"src":"6893:5:12","valueSize":1},{"declaration":3201,"isOffset":false,"isSlot":false,"src":"6906:5:12","valueSize":1},{"declaration":3233,"isOffset":false,"isSlot":false,"src":"6773:9:12","valueSize":1},{"declaration":3233,"isOffset":false,"isSlot":false,"src":"6916:9:12","valueSize":1},{"declaration":3233,"isOffset":false,"isSlot":false,"src":"6971:9:12","valueSize":1},{"declaration":3185,"isOffset":false,"isSlot":false,"src":"6793:1:12","valueSize":1},{"declaration":3187,"isOffset":false,"isSlot":false,"src":"6796:1:12","valueSize":1}],"id":3235,"nodeType":"InlineAssembly","src":"6695:300:12"},{"assignments":[3237],"declarations":[{"constant":false,"id":3237,"mutability":"mutable","name":"twos","nameLocation":"7207:4:12","nodeType":"VariableDeclaration","scope":3317,"src":"7199:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3244,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3238,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"7214:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3240,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"7233:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:12"},{"AST":{"nativeSrc":"7268:366:12","nodeType":"YulBlock","src":"7268:366:12","statements":[{"nativeSrc":"7333:37:12","nodeType":"YulAssignment","src":"7333:37:12","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:12","nodeType":"YulIdentifier","src":"7352:11:12"},{"name":"twos","nativeSrc":"7365:4:12","nodeType":"YulIdentifier","src":"7365:4:12"}],"functionName":{"name":"div","nativeSrc":"7348:3:12","nodeType":"YulIdentifier","src":"7348:3:12"},"nativeSrc":"7348:22:12","nodeType":"YulFunctionCall","src":"7348:22:12"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:12","nodeType":"YulIdentifier","src":"7333:11:12"}]},{"nativeSrc":"7437:25:12","nodeType":"YulAssignment","src":"7437:25:12","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:12","nodeType":"YulIdentifier","src":"7450:5:12"},{"name":"twos","nativeSrc":"7457:4:12","nodeType":"YulIdentifier","src":"7457:4:12"}],"functionName":{"name":"div","nativeSrc":"7446:3:12","nodeType":"YulIdentifier","src":"7446:3:12"},"nativeSrc":"7446:16:12","nodeType":"YulFunctionCall","src":"7446:16:12"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:12","nodeType":"YulIdentifier","src":"7437:5:12"}]},{"nativeSrc":"7581:39:12","nodeType":"YulAssignment","src":"7581:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:12","nodeType":"YulLiteral","src":"7601:1:12","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:12","nodeType":"YulIdentifier","src":"7604:4:12"}],"functionName":{"name":"sub","nativeSrc":"7597:3:12","nodeType":"YulIdentifier","src":"7597:3:12"},"nativeSrc":"7597:12:12","nodeType":"YulFunctionCall","src":"7597:12:12"},{"name":"twos","nativeSrc":"7611:4:12","nodeType":"YulIdentifier","src":"7611:4:12"}],"functionName":{"name":"div","nativeSrc":"7593:3:12","nodeType":"YulIdentifier","src":"7593:3:12"},"nativeSrc":"7593:23:12","nodeType":"YulFunctionCall","src":"7593:23:12"},{"kind":"number","nativeSrc":"7618:1:12","nodeType":"YulLiteral","src":"7618:1:12","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:12","nodeType":"YulIdentifier","src":"7589:3:12"},"nativeSrc":"7589:31:12","nodeType":"YulFunctionCall","src":"7589:31:12"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:12","nodeType":"YulIdentifier","src":"7581:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3189,"isOffset":false,"isSlot":false,"src":"7333:11:12","valueSize":1},{"declaration":3189,"isOffset":false,"isSlot":false,"src":"7352:11:12","valueSize":1},{"declaration":3195,"isOffset":false,"isSlot":false,"src":"7437:5:12","valueSize":1},{"declaration":3195,"isOffset":false,"isSlot":false,"src":"7450:5:12","valueSize":1},{"declaration":3237,"isOffset":false,"isSlot":false,"src":"7365:4:12","valueSize":1},{"declaration":3237,"isOffset":false,"isSlot":false,"src":"7457:4:12","valueSize":1},{"declaration":3237,"isOffset":false,"isSlot":false,"src":"7581:4:12","valueSize":1},{"declaration":3237,"isOffset":false,"isSlot":false,"src":"7604:4:12","valueSize":1},{"declaration":3237,"isOffset":false,"isSlot":false,"src":"7611:4:12","valueSize":1}],"id":3245,"nodeType":"InlineAssembly","src":"7259:375:12"},{"expression":{"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3246,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7700:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3247,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"7709:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3248,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"7717:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3251,"nodeType":"ExpressionStatement","src":"7700:21:12"},{"assignments":[3253],"declarations":[{"constant":false,"id":3253,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:12","nodeType":"VariableDeclaration","scope":3317,"src":"8056:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3260,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3255,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"8079:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:12"},{"expression":{"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3261,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8312:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"8327:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3264,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8341:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3268,"nodeType":"ExpressionStatement","src":"8312:36:12"},{"expression":{"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3269,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8382:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3271,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"8397:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3272,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8411:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3276,"nodeType":"ExpressionStatement","src":"8382:36:12"},{"expression":{"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3277,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8454:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"8469:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3280,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8483:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3284,"nodeType":"ExpressionStatement","src":"8454:36:12"},{"expression":{"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3285,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8525:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3287,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"8540:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3288,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8554:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3292,"nodeType":"ExpressionStatement","src":"8525:36:12"},{"expression":{"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3293,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8598:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3295,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"8613:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3296,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8627:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3300,"nodeType":"ExpressionStatement","src":"8598:36:12"},{"expression":{"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3301,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8672:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3303,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"8687:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3304,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"8701:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3308,"nodeType":"ExpressionStatement","src":"8672:36:12"},{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"9154:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3310,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"9163:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3311,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"9171:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3314,"nodeType":"ExpressionStatement","src":"9154:24:12"},{"expression":{"id":3315,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"9199:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3193,"id":3316,"nodeType":"Return","src":"9192:13:12"}]}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"4679:312:12","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3319,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:12","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"x","nameLocation":"5020:1:12","nodeType":"VariableDeclaration","scope":3319,"src":"5012:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"y","nameLocation":"5031:1:12","nodeType":"VariableDeclaration","scope":3319,"src":"5023:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:12","nodeType":"VariableDeclaration","scope":3319,"src":"5034:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:12"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"result","nameLocation":"5086:6:12","nodeType":"VariableDeclaration","scope":3319,"src":"5078:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:12"},"scope":4489,"src":"4996:4226:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3355,"nodeType":"Block","src":"9461:128:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3335,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"9485:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3336,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"9488:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3337,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"9491:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3334,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3319,3356],"referencedDeclaration":3319,"src":"9478:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3342,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"9539:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}],"id":3341,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"9522:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2895_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3345,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"9559:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3346,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"9562:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3347,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"9565:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3344,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3339,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"9506:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"9506:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3333,"id":3354,"nodeType":"Return","src":"9471:111:12"}]},"documentation":{"id":3320,"nodeType":"StructuredDocumentation","src":"9228:118:12","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3356,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:12","nodeType":"FunctionDefinition","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"x","nameLocation":"9375:1:12","nodeType":"VariableDeclaration","scope":3356,"src":"9367:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"y","nameLocation":"9386:1:12","nodeType":"VariableDeclaration","scope":3356,"src":"9378:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:12","nodeType":"VariableDeclaration","scope":3356,"src":"9389:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3325,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:12","nodeType":"VariableDeclaration","scope":3356,"src":"9410:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"},"typeName":{"id":3328,"nodeType":"UserDefinedTypeName","pathNode":{"id":3327,"name":"Rounding","nameLocations":["9410:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"9410:8:12"},"referencedDeclaration":2895,"src":"9410:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:12"},"returnParameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3356,"src":"9452:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:12"},"scope":4489,"src":"9351:238:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3452,"nodeType":"Block","src":"10223:1849:12","statements":[{"id":3451,"nodeType":"UncheckedBlock","src":"10233:1833:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3366,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"10261:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3371,"nodeType":"IfStatement","src":"10257:20:12","trueBody":{"expression":{"hexValue":"30","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3365,"id":3370,"nodeType":"Return","src":"10269:8:12"}},{"assignments":[3373],"declarations":[{"constant":false,"id":3373,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:12","nodeType":"VariableDeclaration","scope":3451,"src":"10748:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3377,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3374,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"10768:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3375,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"10772:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:12"},{"assignments":[3379],"declarations":[{"constant":false,"id":3379,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:12","nodeType":"VariableDeclaration","scope":3451,"src":"10787:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3381,"initialValue":{"id":3380,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"10801:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:12"},{"assignments":[3383],"declarations":[{"constant":false,"id":3383,"mutability":"mutable","name":"x","nameLocation":"10945:1:12","nodeType":"VariableDeclaration","scope":3451,"src":"10938:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3382,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3385,"initialValue":{"hexValue":"30","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:12"},{"assignments":[3387],"declarations":[{"constant":false,"id":3387,"mutability":"mutable","name":"y","nameLocation":"10971:1:12","nodeType":"VariableDeclaration","scope":3451,"src":"10964:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3386,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3389,"initialValue":{"hexValue":"31","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:12"},{"body":{"id":3426,"nodeType":"Block","src":"11014:882:12","statements":[{"assignments":[3394],"declarations":[{"constant":false,"id":3394,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:12","nodeType":"VariableDeclaration","scope":3426,"src":"11032:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3398,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3395,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"11051:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3396,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"11057:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:12"},{"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3399,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"11086:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3400,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"11091:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3401,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3402,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"11191:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"11436:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3404,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"11442:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3405,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"11454:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3410,"nodeType":"ExpressionStatement","src":"11085:395:12"},{"expression":{"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3411,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"11500:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3412,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11503:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3413,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3414,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11585:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3415,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"11839:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3416,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11843:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3419,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"11854:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3417,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:12","typeDescriptions":{}}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3425,"nodeType":"ExpressionStatement","src":"11499:382:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3390,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"10998:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3427,"nodeType":"WhileStatement","src":"10991:905:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3428,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"11914:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3433,"nodeType":"IfStatement","src":"11910:22:12","trueBody":{"expression":{"hexValue":"30","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3365,"id":3432,"nodeType":"Return","src":"11924:8:12"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"11983:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"11990:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:12","subExpression":{"id":3441,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"12003:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:12","typeDescriptions":{}}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3447,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"12015:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:12","typeDescriptions":{}}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3434,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"11975:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3365,"id":3450,"nodeType":"Return","src":"11968:50:12"}]}]},"documentation":{"id":3357,"nodeType":"StructuredDocumentation","src":"9595:553:12","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3453,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:12","nodeType":"FunctionDefinition","parameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"a","nameLocation":"10177:1:12","nodeType":"VariableDeclaration","scope":3453,"src":"10169:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3361,"mutability":"mutable","name":"n","nameLocation":"10188:1:12","nodeType":"VariableDeclaration","scope":3453,"src":"10180:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3360,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:12"},"returnParameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"10214:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:12"},"scope":4489,"src":"10153:1919:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3473,"nodeType":"Block","src":"12672:82:12","statements":[{"id":3472,"nodeType":"UncheckedBlock","src":"12682:66:12","statements":[{"expression":{"arguments":[{"id":3465,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"12725:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"12728:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3469,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"12735:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3463,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"12713:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4489_$","typeString":"type(library Math)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:12","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3510,"src":"12713:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3462,"id":3471,"nodeType":"Return","src":"12706:31:12"}]}]},"documentation":{"id":3454,"nodeType":"StructuredDocumentation","src":"12078:514:12","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3474,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:12","nodeType":"FunctionDefinition","parameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"a","nameLocation":"12626:1:12","nodeType":"VariableDeclaration","scope":3474,"src":"12618:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3458,"mutability":"mutable","name":"p","nameLocation":"12637:1:12","nodeType":"VariableDeclaration","scope":3474,"src":"12629:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:12"},"returnParameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3474,"src":"12663:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:12"},"scope":4489,"src":"12597:157:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3509,"nodeType":"Block","src":"13524:174:12","statements":[{"assignments":[3487,3489],"declarations":[{"constant":false,"id":3487,"mutability":"mutable","name":"success","nameLocation":"13540:7:12","nodeType":"VariableDeclaration","scope":3509,"src":"13535:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3486,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"result","nameLocation":"13557:6:12","nodeType":"VariableDeclaration","scope":3509,"src":"13549:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3495,"initialValue":{"arguments":[{"id":3491,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"13577:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3492,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"13580:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3493,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"13583:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3490,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3534,3616],"referencedDeclaration":3534,"src":"13567:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:12"},{"condition":{"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:12","subExpression":{"id":3496,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"13600:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3506,"nodeType":"IfStatement","src":"13595:74:12","trueBody":{"id":3505,"nodeType":"Block","src":"13609:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":3501,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"13635:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2141_$","typeString":"type(library Panic)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2108,"src":"13635:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3498,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"13623:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2141_$","typeString":"type(library Panic)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2140,"src":"13623:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3504,"nodeType":"ExpressionStatement","src":"13623:35:12"}]}},{"expression":{"id":3507,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"13685:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3485,"id":3508,"nodeType":"Return","src":"13678:13:12"}]},"documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"12760:678:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3510,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:12","nodeType":"FunctionDefinition","parameters":{"id":3482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"b","nameLocation":"13467:1:12","nodeType":"VariableDeclaration","scope":3510,"src":"13459:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"e","nameLocation":"13478:1:12","nodeType":"VariableDeclaration","scope":3510,"src":"13470:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3478,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3481,"mutability":"mutable","name":"m","nameLocation":"13489:1:12","nodeType":"VariableDeclaration","scope":3510,"src":"13481:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:12"},"returnParameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3510,"src":"13515:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3483,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:12"},"scope":4489,"src":"13443:255:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3533,"nodeType":"Block","src":"14552:1493:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3524,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"14566:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3531,"nodeType":"IfStatement","src":"14562:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3523,"id":3530,"nodeType":"Return","src":"14574:17:12"}},{"AST":{"nativeSrc":"14626:1413:12","nodeType":"YulBlock","src":"14626:1413:12","statements":[{"nativeSrc":"14640:22:12","nodeType":"YulVariableDeclaration","src":"14640:22:12","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:12","nodeType":"YulLiteral","src":"14657:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:12","nodeType":"YulIdentifier","src":"14651:5:12"},"nativeSrc":"14651:11:12","nodeType":"YulFunctionCall","src":"14651:11:12"},"variables":[{"name":"ptr","nativeSrc":"14644:3:12","nodeType":"YulTypedName","src":"14644:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:12","nodeType":"YulIdentifier","src":"15570:3:12"},{"kind":"number","nativeSrc":"15575:4:12","nodeType":"YulLiteral","src":"15575:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:12","nodeType":"YulIdentifier","src":"15563:6:12"},"nativeSrc":"15563:17:12","nodeType":"YulFunctionCall","src":"15563:17:12"},"nativeSrc":"15563:17:12","nodeType":"YulExpressionStatement","src":"15563:17:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:12","nodeType":"YulIdentifier","src":"15604:3:12"},{"kind":"number","nativeSrc":"15609:4:12","nodeType":"YulLiteral","src":"15609:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:12","nodeType":"YulIdentifier","src":"15600:3:12"},"nativeSrc":"15600:14:12","nodeType":"YulFunctionCall","src":"15600:14:12"},{"kind":"number","nativeSrc":"15616:4:12","nodeType":"YulLiteral","src":"15616:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:12","nodeType":"YulIdentifier","src":"15593:6:12"},"nativeSrc":"15593:28:12","nodeType":"YulFunctionCall","src":"15593:28:12"},"nativeSrc":"15593:28:12","nodeType":"YulExpressionStatement","src":"15593:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:12","nodeType":"YulIdentifier","src":"15645:3:12"},{"kind":"number","nativeSrc":"15650:4:12","nodeType":"YulLiteral","src":"15650:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:12","nodeType":"YulIdentifier","src":"15641:3:12"},"nativeSrc":"15641:14:12","nodeType":"YulFunctionCall","src":"15641:14:12"},{"kind":"number","nativeSrc":"15657:4:12","nodeType":"YulLiteral","src":"15657:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:12","nodeType":"YulIdentifier","src":"15634:6:12"},"nativeSrc":"15634:28:12","nodeType":"YulFunctionCall","src":"15634:28:12"},"nativeSrc":"15634:28:12","nodeType":"YulExpressionStatement","src":"15634:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:12","nodeType":"YulIdentifier","src":"15686:3:12"},{"kind":"number","nativeSrc":"15691:4:12","nodeType":"YulLiteral","src":"15691:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:12","nodeType":"YulIdentifier","src":"15682:3:12"},"nativeSrc":"15682:14:12","nodeType":"YulFunctionCall","src":"15682:14:12"},{"name":"b","nativeSrc":"15698:1:12","nodeType":"YulIdentifier","src":"15698:1:12"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:12","nodeType":"YulIdentifier","src":"15675:6:12"},"nativeSrc":"15675:25:12","nodeType":"YulFunctionCall","src":"15675:25:12"},"nativeSrc":"15675:25:12","nodeType":"YulExpressionStatement","src":"15675:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:12","nodeType":"YulIdentifier","src":"15724:3:12"},{"kind":"number","nativeSrc":"15729:4:12","nodeType":"YulLiteral","src":"15729:4:12","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:12","nodeType":"YulIdentifier","src":"15720:3:12"},"nativeSrc":"15720:14:12","nodeType":"YulFunctionCall","src":"15720:14:12"},{"name":"e","nativeSrc":"15736:1:12","nodeType":"YulIdentifier","src":"15736:1:12"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:12","nodeType":"YulIdentifier","src":"15713:6:12"},"nativeSrc":"15713:25:12","nodeType":"YulFunctionCall","src":"15713:25:12"},"nativeSrc":"15713:25:12","nodeType":"YulExpressionStatement","src":"15713:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:12","nodeType":"YulIdentifier","src":"15762:3:12"},{"kind":"number","nativeSrc":"15767:4:12","nodeType":"YulLiteral","src":"15767:4:12","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:12","nodeType":"YulIdentifier","src":"15758:3:12"},"nativeSrc":"15758:14:12","nodeType":"YulFunctionCall","src":"15758:14:12"},{"name":"m","nativeSrc":"15774:1:12","nodeType":"YulIdentifier","src":"15774:1:12"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:12","nodeType":"YulIdentifier","src":"15751:6:12"},"nativeSrc":"15751:25:12","nodeType":"YulFunctionCall","src":"15751:25:12"},"nativeSrc":"15751:25:12","nodeType":"YulExpressionStatement","src":"15751:25:12"},{"nativeSrc":"15938:57:12","nodeType":"YulAssignment","src":"15938:57:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:12","nodeType":"YulIdentifier","src":"15960:3:12"},"nativeSrc":"15960:5:12","nodeType":"YulFunctionCall","src":"15960:5:12"},{"kind":"number","nativeSrc":"15967:4:12","nodeType":"YulLiteral","src":"15967:4:12","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:12","nodeType":"YulIdentifier","src":"15973:3:12"},{"kind":"number","nativeSrc":"15978:4:12","nodeType":"YulLiteral","src":"15978:4:12","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:12","nodeType":"YulLiteral","src":"15984:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:12","nodeType":"YulLiteral","src":"15990:4:12","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:12","nodeType":"YulIdentifier","src":"15949:10:12"},"nativeSrc":"15949:46:12","nodeType":"YulFunctionCall","src":"15949:46:12"},"variableNames":[{"name":"success","nativeSrc":"15938:7:12","nodeType":"YulIdentifier","src":"15938:7:12"}]},{"nativeSrc":"16008:21:12","nodeType":"YulAssignment","src":"16008:21:12","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:12","nodeType":"YulLiteral","src":"16024:4:12","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:12","nodeType":"YulIdentifier","src":"16018:5:12"},"nativeSrc":"16018:11:12","nodeType":"YulFunctionCall","src":"16018:11:12"},"variableNames":[{"name":"result","nativeSrc":"16008:6:12","nodeType":"YulIdentifier","src":"16008:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3513,"isOffset":false,"isSlot":false,"src":"15698:1:12","valueSize":1},{"declaration":3515,"isOffset":false,"isSlot":false,"src":"15736:1:12","valueSize":1},{"declaration":3517,"isOffset":false,"isSlot":false,"src":"15774:1:12","valueSize":1},{"declaration":3522,"isOffset":false,"isSlot":false,"src":"16008:6:12","valueSize":1},{"declaration":3520,"isOffset":false,"isSlot":false,"src":"15938:7:12","valueSize":1}],"flags":["memory-safe"],"id":3532,"nodeType":"InlineAssembly","src":"14601:1438:12"}]},"documentation":{"id":3511,"nodeType":"StructuredDocumentation","src":"13704:738:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3534,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:12","nodeType":"FunctionDefinition","parameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"b","nameLocation":"14474:1:12","nodeType":"VariableDeclaration","scope":3534,"src":"14466:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3515,"mutability":"mutable","name":"e","nameLocation":"14485:1:12","nodeType":"VariableDeclaration","scope":3534,"src":"14477:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3517,"mutability":"mutable","name":"m","nameLocation":"14496:1:12","nodeType":"VariableDeclaration","scope":3534,"src":"14488:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:12"},"returnParameters":{"id":3523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"success","nameLocation":"14527:7:12","nodeType":"VariableDeclaration","scope":3534,"src":"14522:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3519,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"result","nameLocation":"14544:6:12","nodeType":"VariableDeclaration","scope":3534,"src":"14536:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:12"},"scope":4489,"src":"14447:1598:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3569,"nodeType":"Block","src":"16242:179:12","statements":[{"assignments":[3547,3549],"declarations":[{"constant":false,"id":3547,"mutability":"mutable","name":"success","nameLocation":"16258:7:12","nodeType":"VariableDeclaration","scope":3569,"src":"16253:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3546,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3549,"mutability":"mutable","name":"result","nameLocation":"16280:6:12","nodeType":"VariableDeclaration","scope":3569,"src":"16267:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3548,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3555,"initialValue":{"arguments":[{"id":3551,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"16300:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3552,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"16303:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3553,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"16306:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3550,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3534,3616],"referencedDeclaration":3616,"src":"16290:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:12"},{"condition":{"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:12","subExpression":{"id":3556,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"16323:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3566,"nodeType":"IfStatement","src":"16318:74:12","trueBody":{"id":3565,"nodeType":"Block","src":"16332:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":3561,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"16358:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2141_$","typeString":"type(library Panic)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2108,"src":"16358:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3558,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"16346:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2141_$","typeString":"type(library Panic)"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2140,"src":"16346:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3564,"nodeType":"ExpressionStatement","src":"16346:35:12"}]}},{"expression":{"id":3567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"16408:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3545,"id":3568,"nodeType":"Return","src":"16401:13:12"}]},"documentation":{"id":3535,"nodeType":"StructuredDocumentation","src":"16051:85:12","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3570,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:12","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"b","nameLocation":"16170:1:12","nodeType":"VariableDeclaration","scope":3570,"src":"16157:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3536,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3539,"mutability":"mutable","name":"e","nameLocation":"16186:1:12","nodeType":"VariableDeclaration","scope":3570,"src":"16173:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3538,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"m","nameLocation":"16202:1:12","nodeType":"VariableDeclaration","scope":3570,"src":"16189:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3540,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:12"},"returnParameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3570,"src":"16228:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3543,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:12"},"scope":4489,"src":"16141:280:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3615,"nodeType":"Block","src":"16675:771:12","statements":[{"condition":{"arguments":[{"id":3585,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"16700:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3584,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"16689:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3594,"nodeType":"IfStatement","src":"16685:47:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3588,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3583,"id":3593,"nodeType":"Return","src":"16704:28:12"}},{"assignments":[3596],"declarations":[{"constant":false,"id":3596,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:12","nodeType":"VariableDeclaration","scope":3615,"src":"16743:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3599,"initialValue":{"expression":{"id":3597,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"16758:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:12","memberName":"length","nodeType":"MemberAccess","src":"16758:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:12"},{"expression":{"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"16848:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"16874:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:12","memberName":"length","nodeType":"MemberAccess","src":"16874:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3605,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"16884:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:12","memberName":"length","nodeType":"MemberAccess","src":"16884:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3607,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"16894:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3608,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"16900:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3609,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"16903:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3610,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"16906:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3601,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3613,"nodeType":"ExpressionStatement","src":"16848:60:12"},{"AST":{"nativeSrc":"16944:496:12","nodeType":"YulBlock","src":"16944:496:12","statements":[{"nativeSrc":"16958:32:12","nodeType":"YulVariableDeclaration","src":"16958:32:12","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:12","nodeType":"YulIdentifier","src":"16977:6:12"},{"kind":"number","nativeSrc":"16985:4:12","nodeType":"YulLiteral","src":"16985:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:12","nodeType":"YulIdentifier","src":"16973:3:12"},"nativeSrc":"16973:17:12","nodeType":"YulFunctionCall","src":"16973:17:12"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:12","nodeType":"YulTypedName","src":"16962:7:12","type":""}]},{"nativeSrc":"17080:73:12","nodeType":"YulAssignment","src":"17080:73:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:12","nodeType":"YulIdentifier","src":"17102:3:12"},"nativeSrc":"17102:5:12","nodeType":"YulFunctionCall","src":"17102:5:12"},{"kind":"number","nativeSrc":"17109:4:12","nodeType":"YulLiteral","src":"17109:4:12","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:12","nodeType":"YulIdentifier","src":"17115:7:12"},{"arguments":[{"name":"result","nativeSrc":"17130:6:12","nodeType":"YulIdentifier","src":"17130:6:12"}],"functionName":{"name":"mload","nativeSrc":"17124:5:12","nodeType":"YulIdentifier","src":"17124:5:12"},"nativeSrc":"17124:13:12","nodeType":"YulFunctionCall","src":"17124:13:12"},{"name":"dataPtr","nativeSrc":"17139:7:12","nodeType":"YulIdentifier","src":"17139:7:12"},{"name":"mLen","nativeSrc":"17148:4:12","nodeType":"YulIdentifier","src":"17148:4:12"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:12","nodeType":"YulIdentifier","src":"17091:10:12"},"nativeSrc":"17091:62:12","nodeType":"YulFunctionCall","src":"17091:62:12"},"variableNames":[{"name":"success","nativeSrc":"17080:7:12","nodeType":"YulIdentifier","src":"17080:7:12"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:12","nodeType":"YulIdentifier","src":"17309:6:12"},{"name":"mLen","nativeSrc":"17317:4:12","nodeType":"YulIdentifier","src":"17317:4:12"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:12","nodeType":"YulIdentifier","src":"17302:6:12"},"nativeSrc":"17302:20:12","nodeType":"YulFunctionCall","src":"17302:20:12"},"nativeSrc":"17302:20:12","nodeType":"YulExpressionStatement","src":"17302:20:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:12","nodeType":"YulLiteral","src":"17405:4:12","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:12","nodeType":"YulIdentifier","src":"17415:7:12"},{"name":"mLen","nativeSrc":"17424:4:12","nodeType":"YulIdentifier","src":"17424:4:12"}],"functionName":{"name":"add","nativeSrc":"17411:3:12","nodeType":"YulIdentifier","src":"17411:3:12"},"nativeSrc":"17411:18:12","nodeType":"YulFunctionCall","src":"17411:18:12"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:12","nodeType":"YulIdentifier","src":"17398:6:12"},"nativeSrc":"17398:32:12","nodeType":"YulFunctionCall","src":"17398:32:12"},"nativeSrc":"17398:32:12","nodeType":"YulExpressionStatement","src":"17398:32:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3596,"isOffset":false,"isSlot":false,"src":"17148:4:12","valueSize":1},{"declaration":3596,"isOffset":false,"isSlot":false,"src":"17317:4:12","valueSize":1},{"declaration":3596,"isOffset":false,"isSlot":false,"src":"17424:4:12","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"16977:6:12","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"17130:6:12","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"17309:6:12","valueSize":1},{"declaration":3580,"isOffset":false,"isSlot":false,"src":"17080:7:12","valueSize":1}],"flags":["memory-safe"],"id":3614,"nodeType":"InlineAssembly","src":"16919:521:12"}]},"documentation":{"id":3571,"nodeType":"StructuredDocumentation","src":"16427:88:12","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3616,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:12","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"b","nameLocation":"16561:1:12","nodeType":"VariableDeclaration","scope":3616,"src":"16548:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3572,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3575,"mutability":"mutable","name":"e","nameLocation":"16585:1:12","nodeType":"VariableDeclaration","scope":3616,"src":"16572:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3574,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3577,"mutability":"mutable","name":"m","nameLocation":"16609:1:12","nodeType":"VariableDeclaration","scope":3616,"src":"16596:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3576,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:12"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"success","nameLocation":"16645:7:12","nodeType":"VariableDeclaration","scope":3616,"src":"16640:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3579,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"result","nameLocation":"16667:6:12","nodeType":"VariableDeclaration","scope":3616,"src":"16654:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3581,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:12"},"scope":4489,"src":"16520:926:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3648,"nodeType":"Block","src":"17601:176:12","statements":[{"body":{"id":3644,"nodeType":"Block","src":"17658:92:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3635,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"17676:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3637,"indexExpression":{"id":3636,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"17686:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3643,"nodeType":"IfStatement","src":"17672:68:12","trueBody":{"id":3642,"nodeType":"Block","src":"17695:45:12","statements":[{"expression":{"hexValue":"66616c7365","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3623,"id":3641,"nodeType":"Return","src":"17713:12:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3628,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"17631:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3629,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"17635:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:12","memberName":"length","nodeType":"MemberAccess","src":"17635:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3645,"initializationExpression":{"assignments":[3625],"declarations":[{"constant":false,"id":3625,"mutability":"mutable","name":"i","nameLocation":"17624:1:12","nodeType":"VariableDeclaration","scope":3645,"src":"17616:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3627,"initialValue":{"hexValue":"30","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:12","subExpression":{"id":3632,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"17655:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ExpressionStatement","src":"17653:3:12"},"nodeType":"ForStatement","src":"17611:139:12"},{"expression":{"hexValue":"74727565","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3623,"id":3647,"nodeType":"Return","src":"17759:11:12"}]},"documentation":{"id":3617,"nodeType":"StructuredDocumentation","src":"17452:72:12","text":" @dev Returns whether the provided byte array is zero."},"id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:12","nodeType":"FunctionDefinition","parameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:12","nodeType":"VariableDeclaration","scope":3649,"src":"17549:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3618,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:12"},"returnParameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3649,"src":"17595:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3621,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:12"},"scope":4489,"src":"17529:248:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3867,"nodeType":"Block","src":"18137:5124:12","statements":[{"id":3866,"nodeType":"UncheckedBlock","src":"18147:5108:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"18241:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3663,"nodeType":"IfStatement","src":"18237:53:12","trueBody":{"id":3662,"nodeType":"Block","src":"18249:41:12","statements":[{"expression":{"id":3660,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"18274:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3656,"id":3661,"nodeType":"Return","src":"18267:8:12"}]}},{"assignments":[3665],"declarations":[{"constant":false,"id":3665,"mutability":"mutable","name":"aa","nameLocation":"19225:2:12","nodeType":"VariableDeclaration","scope":3866,"src":"19217:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3667,"initialValue":{"id":3666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"19230:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:12"},{"assignments":[3669],"declarations":[{"constant":false,"id":3669,"mutability":"mutable","name":"xn","nameLocation":"19253:2:12","nodeType":"VariableDeclaration","scope":3866,"src":"19245:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3671,"initialValue":{"hexValue":"31","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19278:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3676,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3687,"nodeType":"IfStatement","src":"19274:92:12","trueBody":{"id":3686,"nodeType":"Block","src":"19296:70:12","statements":[{"expression":{"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3678,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19314:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3681,"nodeType":"ExpressionStatement","src":"19314:10:12"},{"expression":{"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3682,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"19342:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3685,"nodeType":"ExpressionStatement","src":"19342:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19383:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3703,"nodeType":"IfStatement","src":"19379:90:12","trueBody":{"id":3702,"nodeType":"Block","src":"19400:69:12","statements":[{"expression":{"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3694,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19418:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3697,"nodeType":"ExpressionStatement","src":"19418:9:12"},{"expression":{"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3698,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"19445:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3701,"nodeType":"ExpressionStatement","src":"19445:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3704,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19486:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3719,"nodeType":"IfStatement","src":"19482:90:12","trueBody":{"id":3718,"nodeType":"Block","src":"19503:69:12","statements":[{"expression":{"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3710,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19521:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3713,"nodeType":"ExpressionStatement","src":"19521:9:12"},{"expression":{"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3714,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"19548:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3717,"nodeType":"ExpressionStatement","src":"19548:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3720,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19589:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3735,"nodeType":"IfStatement","src":"19585:89:12","trueBody":{"id":3734,"nodeType":"Block","src":"19606:68:12","statements":[{"expression":{"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19624:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3729,"nodeType":"ExpressionStatement","src":"19624:9:12"},{"expression":{"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3730,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"19651:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3733,"nodeType":"ExpressionStatement","src":"19651:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19691:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3751,"nodeType":"IfStatement","src":"19687:87:12","trueBody":{"id":3750,"nodeType":"Block","src":"19707:67:12","statements":[{"expression":{"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3742,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19725:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3745,"nodeType":"ExpressionStatement","src":"19725:8:12"},{"expression":{"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3746,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"19751:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3749,"nodeType":"ExpressionStatement","src":"19751:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3752,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19791:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3767,"nodeType":"IfStatement","src":"19787:87:12","trueBody":{"id":3766,"nodeType":"Block","src":"19807:67:12","statements":[{"expression":{"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3758,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19825:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3761,"nodeType":"ExpressionStatement","src":"19825:8:12"},{"expression":{"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3762,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"19851:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3765,"nodeType":"ExpressionStatement","src":"19851:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3768,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"19891:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3779,"nodeType":"IfStatement","src":"19887:61:12","trueBody":{"id":3778,"nodeType":"Block","src":"19907:41:12","statements":[{"expression":{"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3774,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"19925:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3777,"nodeType":"ExpressionStatement","src":"19925:8:12"}]}},{"expression":{"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3780,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"20368:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3782,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"20378:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3788,"nodeType":"ExpressionStatement","src":"20368:18:12"},{"expression":{"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3789,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22273:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3790,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22279:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3791,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"22284:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3792,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22288:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3799,"nodeType":"ExpressionStatement","src":"22273:23:12"},{"expression":{"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3800,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22382:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3801,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22388:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3802,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"22393:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3803,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22397:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3810,"nodeType":"ExpressionStatement","src":"22382:23:12"},{"expression":{"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3811,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22493:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3812,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22499:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"22504:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3814,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22508:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3821,"nodeType":"ExpressionStatement","src":"22493:23:12"},{"expression":{"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3822,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22602:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3823,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22608:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3824,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"22613:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3825,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22617:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3828,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3832,"nodeType":"ExpressionStatement","src":"22602:23:12"},{"expression":{"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3833,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22712:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3834,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22718:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3835,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"22723:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3836,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22727:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3843,"nodeType":"ExpressionStatement","src":"22712:23:12"},{"expression":{"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3844,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22822:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3845,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22828:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"22833:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3847,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"22837:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3854,"nodeType":"ExpressionStatement","src":"22822:23:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3855,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"23211:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"23232:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3859,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"23237:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3860,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"23241:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3856,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"23216:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"23216:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3656,"id":3865,"nodeType":"Return","src":"23204:40:12"}]}]},"documentation":{"id":3650,"nodeType":"StructuredDocumentation","src":"17783:292:12","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3868,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:12","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"a","nameLocation":"18102:1:12","nodeType":"VariableDeclaration","scope":3868,"src":"18094:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:12"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3868,"src":"18128:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:12"},"scope":4489,"src":"18080:5181:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3901,"nodeType":"Block","src":"23434:171:12","statements":[{"id":3900,"nodeType":"UncheckedBlock","src":"23444:155:12","statements":[{"assignments":[3880],"declarations":[{"constant":false,"id":3880,"mutability":"mutable","name":"result","nameLocation":"23476:6:12","nodeType":"VariableDeclaration","scope":3900,"src":"23468:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3884,"initialValue":{"arguments":[{"id":3882,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"23490:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3881,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3868,3902],"referencedDeclaration":3868,"src":"23485:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"23513:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3889,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"23555:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}],"id":3888,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"23538:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2895_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3891,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"23568:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3892,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"23577:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"23586:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3886,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"23522:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"23522:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3878,"id":3899,"nodeType":"Return","src":"23506:82:12"}]}]},"documentation":{"id":3869,"nodeType":"StructuredDocumentation","src":"23267:86:12","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3902,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:12","nodeType":"FunctionDefinition","parameters":{"id":3875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"a","nameLocation":"23380:1:12","nodeType":"VariableDeclaration","scope":3902,"src":"23372:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3870,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:12","nodeType":"VariableDeclaration","scope":3902,"src":"23383:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"},"typeName":{"id":3873,"nodeType":"UserDefinedTypeName","pathNode":{"id":3872,"name":"Rounding","nameLocations":["23383:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"23383:8:12"},"referencedDeclaration":2895,"src":"23383:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:12"},"returnParameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3902,"src":"23425:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:12"},"scope":4489,"src":"23358:247:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4097,"nodeType":"Block","src":"23796:981:12","statements":[{"assignments":[3911],"declarations":[{"constant":false,"id":3911,"mutability":"mutable","name":"result","nameLocation":"23814:6:12","nodeType":"VariableDeclaration","scope":4097,"src":"23806:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3913,"initialValue":{"hexValue":"30","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:12"},{"assignments":[3915],"declarations":[{"constant":false,"id":3915,"mutability":"mutable","name":"exp","nameLocation":"23842:3:12","nodeType":"VariableDeclaration","scope":4097,"src":"23834:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3916,"nodeType":"VariableDeclarationStatement","src":"23834:11:12"},{"id":4094,"nodeType":"UncheckedBlock","src":"23855:893:12","statements":[{"expression":{"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3917,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"23879:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"23907:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3919,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"23891:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"23891:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3932,"nodeType":"ExpressionStatement","src":"23879:51:12"},{"expression":{"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"23944:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3934,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"23954:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3936,"nodeType":"ExpressionStatement","src":"23944:13:12"},{"expression":{"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"23971:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3938,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"23981:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3940,"nodeType":"ExpressionStatement","src":"23971:13:12"},{"expression":{"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3941,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"23999:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24026:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3943,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"24010:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"24010:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3956,"nodeType":"ExpressionStatement","src":"23999:49:12"},{"expression":{"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24062:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3958,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24072:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3960,"nodeType":"ExpressionStatement","src":"24062:13:12"},{"expression":{"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3961,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"24089:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3962,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24099:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3964,"nodeType":"ExpressionStatement","src":"24089:13:12"},{"expression":{"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3965,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24117:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24144:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3967,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"24128:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"24128:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3980,"nodeType":"ExpressionStatement","src":"24117:49:12"},{"expression":{"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24180:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3982,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24190:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3984,"nodeType":"ExpressionStatement","src":"24180:13:12"},{"expression":{"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"24207:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3986,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24217:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3988,"nodeType":"ExpressionStatement","src":"24207:13:12"},{"expression":{"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3989,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24235:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24262:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3991,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"24246:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"24246:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4004,"nodeType":"ExpressionStatement","src":"24235:49:12"},{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24298:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4006,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24308:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4008,"nodeType":"ExpressionStatement","src":"24298:13:12"},{"expression":{"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4009,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"24325:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4010,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24335:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4012,"nodeType":"ExpressionStatement","src":"24325:13:12"},{"expression":{"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4013,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24353:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24379:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4015,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"24363:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"24363:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4028,"nodeType":"ExpressionStatement","src":"24353:47:12"},{"expression":{"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24414:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4030,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24424:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4032,"nodeType":"ExpressionStatement","src":"24414:13:12"},{"expression":{"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"24441:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4034,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24451:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4036,"nodeType":"ExpressionStatement","src":"24441:13:12"},{"expression":{"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4037,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24469:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24495:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4039,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"24479:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"24479:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4052,"nodeType":"ExpressionStatement","src":"24469:47:12"},{"expression":{"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24530:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4054,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24540:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4056,"nodeType":"ExpressionStatement","src":"24530:13:12"},{"expression":{"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4057,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"24557:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4058,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24567:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4060,"nodeType":"ExpressionStatement","src":"24557:13:12"},{"expression":{"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4061,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24585:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24611:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4063,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"24595:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"24595:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4076,"nodeType":"ExpressionStatement","src":"24585:47:12"},{"expression":{"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24646:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4078,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24656:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4080,"nodeType":"ExpressionStatement","src":"24646:13:12"},{"expression":{"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4081,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"24673:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4082,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"24683:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4084,"nodeType":"ExpressionStatement","src":"24673:13:12"},{"expression":{"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4085,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"24701:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"24727:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4086,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"24711:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"24711:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4093,"nodeType":"ExpressionStatement","src":"24701:36:12"}]},{"expression":{"id":4095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"24764:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3909,"id":4096,"nodeType":"Return","src":"24757:13:12"}]},"documentation":{"id":3903,"nodeType":"StructuredDocumentation","src":"23611:119:12","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4098,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:12","nodeType":"FunctionDefinition","parameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"value","nameLocation":"23757:5:12","nodeType":"VariableDeclaration","scope":4098,"src":"23749:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:12"},"returnParameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4098,"src":"23787:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:12"},"scope":4489,"src":"23735:1042:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4131,"nodeType":"Block","src":"25010:175:12","statements":[{"id":4130,"nodeType":"UncheckedBlock","src":"25020:159:12","statements":[{"assignments":[4110],"declarations":[{"constant":false,"id":4110,"mutability":"mutable","name":"result","nameLocation":"25052:6:12","nodeType":"VariableDeclaration","scope":4130,"src":"25044:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4109,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4114,"initialValue":{"arguments":[{"id":4112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"25066:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4111,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4098,4132],"referencedDeclaration":4098,"src":"25061:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4115,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"25093:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4119,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"25135:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}],"id":4118,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"25118:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2895_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"25153:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"25162:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4116,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"25102:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"25102:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4108,"id":4129,"nodeType":"Return","src":"25086:82:12"}]}]},"documentation":{"id":4099,"nodeType":"StructuredDocumentation","src":"24783:142:12","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4132,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:12","nodeType":"FunctionDefinition","parameters":{"id":4105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"value","nameLocation":"24952:5:12","nodeType":"VariableDeclaration","scope":4132,"src":"24944:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4100,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4104,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:12","nodeType":"VariableDeclaration","scope":4132,"src":"24959:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"},"typeName":{"id":4103,"nodeType":"UserDefinedTypeName","pathNode":{"id":4102,"name":"Rounding","nameLocations":["24959:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"24959:8:12"},"referencedDeclaration":2895,"src":"24959:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:12"},"returnParameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4132,"src":"25001:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:12"},"scope":4489,"src":"24930:255:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4260,"nodeType":"Block","src":"25378:854:12","statements":[{"assignments":[4141],"declarations":[{"constant":false,"id":4141,"mutability":"mutable","name":"result","nameLocation":"25396:6:12","nodeType":"VariableDeclaration","scope":4260,"src":"25388:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4143,"initialValue":{"hexValue":"30","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:12"},{"id":4257,"nodeType":"UncheckedBlock","src":"25416:787:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"25444:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4160,"nodeType":"IfStatement","src":"25440:103:12","trueBody":{"id":4159,"nodeType":"Block","src":"25463:80:12","statements":[{"expression":{"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"25481:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4154,"nodeType":"ExpressionStatement","src":"25481:17:12"},{"expression":{"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4155,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"25516:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4158,"nodeType":"ExpressionStatement","src":"25516:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"25560:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4177,"nodeType":"IfStatement","src":"25556:103:12","trueBody":{"id":4176,"nodeType":"Block","src":"25579:80:12","statements":[{"expression":{"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"25597:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4171,"nodeType":"ExpressionStatement","src":"25597:17:12"},{"expression":{"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"25632:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4175,"nodeType":"ExpressionStatement","src":"25632:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"25676:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4194,"nodeType":"IfStatement","src":"25672:103:12","trueBody":{"id":4193,"nodeType":"Block","src":"25695:80:12","statements":[{"expression":{"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"25713:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4188,"nodeType":"ExpressionStatement","src":"25713:17:12"},{"expression":{"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4189,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"25748:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4192,"nodeType":"ExpressionStatement","src":"25748:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"25792:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4211,"nodeType":"IfStatement","src":"25788:100:12","trueBody":{"id":4210,"nodeType":"Block","src":"25810:78:12","statements":[{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"25828:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4205,"nodeType":"ExpressionStatement","src":"25828:16:12"},{"expression":{"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"25862:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4209,"nodeType":"ExpressionStatement","src":"25862:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"25905:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4228,"nodeType":"IfStatement","src":"25901:100:12","trueBody":{"id":4227,"nodeType":"Block","src":"25923:78:12","statements":[{"expression":{"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"25941:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4222,"nodeType":"ExpressionStatement","src":"25941:16:12"},{"expression":{"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4223,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"25975:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4226,"nodeType":"ExpressionStatement","src":"25975:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"26018:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4245,"nodeType":"IfStatement","src":"26014:100:12","trueBody":{"id":4244,"nodeType":"Block","src":"26036:78:12","statements":[{"expression":{"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"26054:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4239,"nodeType":"ExpressionStatement","src":"26054:16:12"},{"expression":{"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"26088:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4243,"nodeType":"ExpressionStatement","src":"26088:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"26131:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4256,"nodeType":"IfStatement","src":"26127:66:12","trueBody":{"id":4255,"nodeType":"Block","src":"26149:44:12","statements":[{"expression":{"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"26167:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4254,"nodeType":"ExpressionStatement","src":"26167:11:12"}]}}]},{"expression":{"id":4258,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"26219:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4139,"id":4259,"nodeType":"Return","src":"26212:13:12"}]},"documentation":{"id":4133,"nodeType":"StructuredDocumentation","src":"25191:120:12","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4261,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:12","nodeType":"FunctionDefinition","parameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"value","nameLocation":"25339:5:12","nodeType":"VariableDeclaration","scope":4261,"src":"25331:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:12"},"returnParameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4261,"src":"25369:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:12"},"scope":4489,"src":"25316:916:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4294,"nodeType":"Block","src":"26467:177:12","statements":[{"id":4293,"nodeType":"UncheckedBlock","src":"26477:161:12","statements":[{"assignments":[4273],"declarations":[{"constant":false,"id":4273,"mutability":"mutable","name":"result","nameLocation":"26509:6:12","nodeType":"VariableDeclaration","scope":4293,"src":"26501:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4277,"initialValue":{"arguments":[{"id":4275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"26524:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4274,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4261,4295],"referencedDeclaration":4261,"src":"26518:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"26551:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4282,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"26593:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}],"id":4281,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"26576:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2895_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"26612:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"26621:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4279,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"26560:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"26560:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4271,"id":4292,"nodeType":"Return","src":"26544:83:12"}]}]},"documentation":{"id":4262,"nodeType":"StructuredDocumentation","src":"26238:143:12","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4295,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:12","nodeType":"FunctionDefinition","parameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4264,"mutability":"mutable","name":"value","nameLocation":"26409:5:12","nodeType":"VariableDeclaration","scope":4295,"src":"26401:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4263,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4267,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:12","nodeType":"VariableDeclaration","scope":4295,"src":"26416:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"},"typeName":{"id":4266,"nodeType":"UserDefinedTypeName","pathNode":{"id":4265,"name":"Rounding","nameLocations":["26416:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"26416:8:12"},"referencedDeclaration":2895,"src":"26416:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:12"},"returnParameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4295,"src":"26458:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:12"},"scope":4489,"src":"26386:258:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4431,"nodeType":"Block","src":"26964:674:12","statements":[{"assignments":[4304],"declarations":[{"constant":false,"id":4304,"mutability":"mutable","name":"result","nameLocation":"26982:6:12","nodeType":"VariableDeclaration","scope":4431,"src":"26974:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4306,"initialValue":{"hexValue":"30","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:12"},{"assignments":[4308],"declarations":[{"constant":false,"id":4308,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:12","nodeType":"VariableDeclaration","scope":4431,"src":"27002:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4309,"nodeType":"VariableDeclarationStatement","src":"27002:12:12"},{"id":4428,"nodeType":"UncheckedBlock","src":"27024:585:12","statements":[{"expression":{"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4310,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"27048:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"27071:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4311,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"27055:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"27055:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4323,"nodeType":"ExpressionStatement","src":"27048:46:12"},{"expression":{"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"27108:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4325,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"27118:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4329,"nodeType":"ExpressionStatement","src":"27108:20:12"},{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"27142:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4331,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"27152:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4335,"nodeType":"ExpressionStatement","src":"27142:19:12"},{"expression":{"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4336,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"27176:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"27199:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4337,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"27183:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"27183:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4349,"nodeType":"ExpressionStatement","src":"27176:45:12"},{"expression":{"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"27235:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4351,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"27245:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4355,"nodeType":"ExpressionStatement","src":"27235:19:12"},{"expression":{"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4356,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"27268:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4357,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"27278:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4361,"nodeType":"ExpressionStatement","src":"27268:18:12"},{"expression":{"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4362,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"27301:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"27324:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4363,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"27308:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"27308:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4375,"nodeType":"ExpressionStatement","src":"27301:45:12"},{"expression":{"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"27360:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4377,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"27370:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4381,"nodeType":"ExpressionStatement","src":"27360:19:12"},{"expression":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"27393:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4383,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"27403:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4387,"nodeType":"ExpressionStatement","src":"27393:18:12"},{"expression":{"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4388,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"27426:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"27449:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4389,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"27433:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"27433:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4401,"nodeType":"ExpressionStatement","src":"27426:45:12"},{"expression":{"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"27485:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4403,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"27495:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4407,"nodeType":"ExpressionStatement","src":"27485:19:12"},{"expression":{"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"27518:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4409,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"27528:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4413,"nodeType":"ExpressionStatement","src":"27518:18:12"},{"expression":{"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"27551:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"27577:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4415,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"27561:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"27561:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4427,"nodeType":"ExpressionStatement","src":"27551:47:12"}]},{"expression":{"id":4429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"27625:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4302,"id":4430,"nodeType":"Return","src":"27618:13:12"}]},"documentation":{"id":4296,"nodeType":"StructuredDocumentation","src":"26650:246:12","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4432,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:12","nodeType":"FunctionDefinition","parameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"value","nameLocation":"26925:5:12","nodeType":"VariableDeclaration","scope":4432,"src":"26917:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:12"},"returnParameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4432,"src":"26955:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:12"},"scope":4489,"src":"26901:737:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4468,"nodeType":"Block","src":"27875:184:12","statements":[{"id":4467,"nodeType":"UncheckedBlock","src":"27885:168:12","statements":[{"assignments":[4444],"declarations":[{"constant":false,"id":4444,"mutability":"mutable","name":"result","nameLocation":"27917:6:12","nodeType":"VariableDeclaration","scope":4467,"src":"27909:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4448,"initialValue":{"arguments":[{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"27933:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4445,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4432,4469],"referencedDeclaration":4432,"src":"27926:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"27960:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4453,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"28002:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}],"id":4452,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"27985:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2895_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"28021:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"28036:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4450,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"27969:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"27969:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4442,"id":4466,"nodeType":"Return","src":"27953:89:12"}]}]},"documentation":{"id":4433,"nodeType":"StructuredDocumentation","src":"27644:144:12","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4469,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:12","nodeType":"FunctionDefinition","parameters":{"id":4439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4435,"mutability":"mutable","name":"value","nameLocation":"27817:5:12","nodeType":"VariableDeclaration","scope":4469,"src":"27809:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4438,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:12","nodeType":"VariableDeclaration","scope":4469,"src":"27824:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"},"typeName":{"id":4437,"nodeType":"UserDefinedTypeName","pathNode":{"id":4436,"name":"Rounding","nameLocations":["27824:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"27824:8:12"},"referencedDeclaration":2895,"src":"27824:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:12"},"returnParameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4469,"src":"27866:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:12"},"scope":4489,"src":"27793:266:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4487,"nodeType":"Block","src":"28257:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4480,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"28280:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}],"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4478,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:12","typeDescriptions":{}}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4477,"id":4486,"nodeType":"Return","src":"28267:31:12"}]},"documentation":{"id":4470,"nodeType":"StructuredDocumentation","src":"28065:113:12","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4488,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:12","nodeType":"FunctionDefinition","parameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:12","nodeType":"VariableDeclaration","scope":4488,"src":"28209:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"},"typeName":{"id":4472,"nodeType":"UserDefinedTypeName","pathNode":{"id":4471,"name":"Rounding","nameLocations":["28209:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"28209:8:12"},"referencedDeclaration":2895,"src":"28209:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2895","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:12"},"returnParameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4488,"src":"28251:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4475,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:12"},"scope":4489,"src":"28183:122:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4490,"src":"281:28026:12","usedErrors":[],"usedEvents":[]}],"src":"103:28205:12"},"id":12},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6254]},"id":6255,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4491,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4492,"nodeType":"StructuredDocumentation","src":"218:550:13","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6254,"linearizedBaseContracts":[6254],"name":"SafeCast","nameLocation":"777:8:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4493,"nodeType":"StructuredDocumentation","src":"792:68:13","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4499,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:13","nodeType":"ErrorDefinition","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"bits","nameLocation":"908:4:13","nodeType":"VariableDeclaration","scope":4499,"src":"902:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4494,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4497,"mutability":"mutable","name":"value","nameLocation":"922:5:13","nodeType":"VariableDeclaration","scope":4499,"src":"914:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:13"},"src":"865:64:13"},{"documentation":{"id":4500,"nodeType":"StructuredDocumentation","src":"935:75:13","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4504,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:13","nodeType":"ErrorDefinition","parameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4502,"mutability":"mutable","name":"value","nameLocation":"1056:5:13","nodeType":"VariableDeclaration","scope":4504,"src":"1049:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4501,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:13"},"src":"1015:48:13"},{"documentation":{"id":4505,"nodeType":"StructuredDocumentation","src":"1069:67:13","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4511,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:13","nodeType":"ErrorDefinition","parameters":{"id":4510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4507,"mutability":"mutable","name":"bits","nameLocation":"1183:4:13","nodeType":"VariableDeclaration","scope":4511,"src":"1177:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4506,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4509,"mutability":"mutable","name":"value","nameLocation":"1196:5:13","nodeType":"VariableDeclaration","scope":4511,"src":"1189:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4508,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:13"},"src":"1141:62:13"},{"documentation":{"id":4512,"nodeType":"StructuredDocumentation","src":"1209:75:13","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4516,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:13","nodeType":"ErrorDefinition","parameters":{"id":4515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"value","nameLocation":"1331:5:13","nodeType":"VariableDeclaration","scope":4516,"src":"1323:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:13"},"src":"1289:49:13"},{"body":{"id":4543,"nodeType":"Block","src":"1695:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"1709:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4526,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4525,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:13","memberName":"max","nodeType":"MemberAccess","src":"1717:17:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4537,"nodeType":"IfStatement","src":"1705:105:13","trueBody":{"id":4536,"nodeType":"Block","src":"1736:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"1793:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4531,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"1757:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4535,"nodeType":"RevertStatement","src":"1750:49:13"}]}},{"expression":{"arguments":[{"id":4540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"1834:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4538,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:13","typeDescriptions":{}}},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4523,"id":4542,"nodeType":"Return","src":"1819:21:13"}]},"documentation":{"id":4517,"nodeType":"StructuredDocumentation","src":"1344:280:13","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4544,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:13","nodeType":"FunctionDefinition","parameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"value","nameLocation":"1656:5:13","nodeType":"VariableDeclaration","scope":4544,"src":"1648:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:13"},"returnParameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4544,"src":"1686:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4521,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:13"},"scope":6254,"src":"1629:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4571,"nodeType":"Block","src":"2204:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"2218:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4554,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4553,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:13","memberName":"max","nodeType":"MemberAccess","src":"2226:17:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4565,"nodeType":"IfStatement","src":"2214:105:13","trueBody":{"id":4564,"nodeType":"Block","src":"2245:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"2302:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4559,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"2266:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4563,"nodeType":"RevertStatement","src":"2259:49:13"}]}},{"expression":{"arguments":[{"id":4568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"2343:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4566,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:13","typeDescriptions":{}}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4551,"id":4570,"nodeType":"Return","src":"2328:21:13"}]},"documentation":{"id":4545,"nodeType":"StructuredDocumentation","src":"1853:280:13","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4572,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:13","nodeType":"FunctionDefinition","parameters":{"id":4548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4547,"mutability":"mutable","name":"value","nameLocation":"2165:5:13","nodeType":"VariableDeclaration","scope":4572,"src":"2157:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:13"},"returnParameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4572,"src":"2195:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4549,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:13"},"scope":6254,"src":"2138:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4599,"nodeType":"Block","src":"2713:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"2727:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4582,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4581,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:13","memberName":"max","nodeType":"MemberAccess","src":"2735:17:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4593,"nodeType":"IfStatement","src":"2723:105:13","trueBody":{"id":4592,"nodeType":"Block","src":"2754:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"2811:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4587,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"2775:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4591,"nodeType":"RevertStatement","src":"2768:49:13"}]}},{"expression":{"arguments":[{"id":4596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"2852:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4594,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:13","typeDescriptions":{}}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4579,"id":4598,"nodeType":"Return","src":"2837:21:13"}]},"documentation":{"id":4573,"nodeType":"StructuredDocumentation","src":"2362:280:13","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4600,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:13","nodeType":"FunctionDefinition","parameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"value","nameLocation":"2674:5:13","nodeType":"VariableDeclaration","scope":4600,"src":"2666:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:13"},"returnParameters":{"id":4579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4600,"src":"2704:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4577,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:13"},"scope":6254,"src":"2647:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4627,"nodeType":"Block","src":"3222:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"3236:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4610,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4609,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:13","memberName":"max","nodeType":"MemberAccess","src":"3244:17:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4621,"nodeType":"IfStatement","src":"3232:105:13","trueBody":{"id":4620,"nodeType":"Block","src":"3263:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"3320:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4615,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"3284:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4619,"nodeType":"RevertStatement","src":"3277:49:13"}]}},{"expression":{"arguments":[{"id":4624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"3361:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4622,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:13","typeDescriptions":{}}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4607,"id":4626,"nodeType":"Return","src":"3346:21:13"}]},"documentation":{"id":4601,"nodeType":"StructuredDocumentation","src":"2871:280:13","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4628,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:13","nodeType":"FunctionDefinition","parameters":{"id":4604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"value","nameLocation":"3183:5:13","nodeType":"VariableDeclaration","scope":4628,"src":"3175:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:13"},"returnParameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4628,"src":"3213:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4605,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:13"},"scope":6254,"src":"3156:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4655,"nodeType":"Block","src":"3731:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"3745:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4638,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4637,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:13","memberName":"max","nodeType":"MemberAccess","src":"3753:17:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4649,"nodeType":"IfStatement","src":"3741:105:13","trueBody":{"id":4648,"nodeType":"Block","src":"3772:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"3829:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4643,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"3793:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4647,"nodeType":"RevertStatement","src":"3786:49:13"}]}},{"expression":{"arguments":[{"id":4652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"3870:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4650,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:13","typeDescriptions":{}}},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4635,"id":4654,"nodeType":"Return","src":"3855:21:13"}]},"documentation":{"id":4629,"nodeType":"StructuredDocumentation","src":"3380:280:13","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4656,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:13","nodeType":"FunctionDefinition","parameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"value","nameLocation":"3692:5:13","nodeType":"VariableDeclaration","scope":4656,"src":"3684:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:13"},"returnParameters":{"id":4635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4656,"src":"3722:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4633,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:13"},"scope":6254,"src":"3665:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4683,"nodeType":"Block","src":"4240:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"4254:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4666,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4665,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:13","memberName":"max","nodeType":"MemberAccess","src":"4262:17:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4677,"nodeType":"IfStatement","src":"4250:105:13","trueBody":{"id":4676,"nodeType":"Block","src":"4281:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"4338:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4671,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"4302:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4675,"nodeType":"RevertStatement","src":"4295:49:13"}]}},{"expression":{"arguments":[{"id":4680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"4379:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4678,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:13","typeDescriptions":{}}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4663,"id":4682,"nodeType":"Return","src":"4364:21:13"}]},"documentation":{"id":4657,"nodeType":"StructuredDocumentation","src":"3889:280:13","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4684,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:13","nodeType":"FunctionDefinition","parameters":{"id":4660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4659,"mutability":"mutable","name":"value","nameLocation":"4201:5:13","nodeType":"VariableDeclaration","scope":4684,"src":"4193:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4658,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:13"},"returnParameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4684,"src":"4231:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4661,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:13"},"scope":6254,"src":"4174:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4711,"nodeType":"Block","src":"4749:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"4763:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4694,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4693,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:13","memberName":"max","nodeType":"MemberAccess","src":"4771:17:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4705,"nodeType":"IfStatement","src":"4759:105:13","trueBody":{"id":4704,"nodeType":"Block","src":"4790:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"4847:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4699,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"4811:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4703,"nodeType":"RevertStatement","src":"4804:49:13"}]}},{"expression":{"arguments":[{"id":4708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"4888:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4706,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:13","typeDescriptions":{}}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4691,"id":4710,"nodeType":"Return","src":"4873:21:13"}]},"documentation":{"id":4685,"nodeType":"StructuredDocumentation","src":"4398:280:13","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4712,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:13","nodeType":"FunctionDefinition","parameters":{"id":4688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"mutability":"mutable","name":"value","nameLocation":"4710:5:13","nodeType":"VariableDeclaration","scope":4712,"src":"4702:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:13"},"returnParameters":{"id":4691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4712,"src":"4740:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4689,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:13"},"scope":6254,"src":"4683:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4739,"nodeType":"Block","src":"5258:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"5272:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4722,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4721,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:13","memberName":"max","nodeType":"MemberAccess","src":"5280:17:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4733,"nodeType":"IfStatement","src":"5268:105:13","trueBody":{"id":4732,"nodeType":"Block","src":"5299:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"5356:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4727,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"5320:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4731,"nodeType":"RevertStatement","src":"5313:49:13"}]}},{"expression":{"arguments":[{"id":4736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"5397:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4734,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:13","typeDescriptions":{}}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4719,"id":4738,"nodeType":"Return","src":"5382:21:13"}]},"documentation":{"id":4713,"nodeType":"StructuredDocumentation","src":"4907:280:13","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4740,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:13","nodeType":"FunctionDefinition","parameters":{"id":4716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4715,"mutability":"mutable","name":"value","nameLocation":"5219:5:13","nodeType":"VariableDeclaration","scope":4740,"src":"5211:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:13"},"returnParameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4740,"src":"5249:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4717,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:13"},"scope":6254,"src":"5192:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4767,"nodeType":"Block","src":"5767:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"5781:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4750,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4749,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:13","memberName":"max","nodeType":"MemberAccess","src":"5789:17:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4761,"nodeType":"IfStatement","src":"5777:105:13","trueBody":{"id":4760,"nodeType":"Block","src":"5808:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"5865:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4755,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"5829:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4759,"nodeType":"RevertStatement","src":"5822:49:13"}]}},{"expression":{"arguments":[{"id":4764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"5906:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4762,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:13","typeDescriptions":{}}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4747,"id":4766,"nodeType":"Return","src":"5891:21:13"}]},"documentation":{"id":4741,"nodeType":"StructuredDocumentation","src":"5416:280:13","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4768,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:13","nodeType":"FunctionDefinition","parameters":{"id":4744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"value","nameLocation":"5728:5:13","nodeType":"VariableDeclaration","scope":4768,"src":"5720:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4742,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:13"},"returnParameters":{"id":4747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4768,"src":"5758:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4745,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:13"},"scope":6254,"src":"5701:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4795,"nodeType":"Block","src":"6276:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"6290:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4778,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4777,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:13","memberName":"max","nodeType":"MemberAccess","src":"6298:17:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4789,"nodeType":"IfStatement","src":"6286:105:13","trueBody":{"id":4788,"nodeType":"Block","src":"6317:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"6374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4783,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"6338:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4787,"nodeType":"RevertStatement","src":"6331:49:13"}]}},{"expression":{"arguments":[{"id":4792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"6415:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4790,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:13","typeDescriptions":{}}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4775,"id":4794,"nodeType":"Return","src":"6400:21:13"}]},"documentation":{"id":4769,"nodeType":"StructuredDocumentation","src":"5925:280:13","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4796,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:13","nodeType":"FunctionDefinition","parameters":{"id":4772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4771,"mutability":"mutable","name":"value","nameLocation":"6237:5:13","nodeType":"VariableDeclaration","scope":4796,"src":"6229:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:13"},"returnParameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4796,"src":"6267:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4773,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:13"},"scope":6254,"src":"6210:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4823,"nodeType":"Block","src":"6785:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"6799:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4806,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4805,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:13","memberName":"max","nodeType":"MemberAccess","src":"6807:17:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4817,"nodeType":"IfStatement","src":"6795:105:13","trueBody":{"id":4816,"nodeType":"Block","src":"6826:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"6883:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4811,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"6847:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4815,"nodeType":"RevertStatement","src":"6840:49:13"}]}},{"expression":{"arguments":[{"id":4820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"6924:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4818,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:13","typeDescriptions":{}}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4803,"id":4822,"nodeType":"Return","src":"6909:21:13"}]},"documentation":{"id":4797,"nodeType":"StructuredDocumentation","src":"6434:280:13","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4824,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:13","nodeType":"FunctionDefinition","parameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4799,"mutability":"mutable","name":"value","nameLocation":"6746:5:13","nodeType":"VariableDeclaration","scope":4824,"src":"6738:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4798,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:13"},"returnParameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4824,"src":"6776:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4801,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:13"},"scope":6254,"src":"6719:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4851,"nodeType":"Block","src":"7294:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"7308:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4834,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4833,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:13","memberName":"max","nodeType":"MemberAccess","src":"7316:17:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4845,"nodeType":"IfStatement","src":"7304:105:13","trueBody":{"id":4844,"nodeType":"Block","src":"7335:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"7392:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4839,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"7356:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4843,"nodeType":"RevertStatement","src":"7349:49:13"}]}},{"expression":{"arguments":[{"id":4848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"7433:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4846,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:13","typeDescriptions":{}}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4831,"id":4850,"nodeType":"Return","src":"7418:21:13"}]},"documentation":{"id":4825,"nodeType":"StructuredDocumentation","src":"6943:280:13","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4852,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:13","nodeType":"FunctionDefinition","parameters":{"id":4828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4827,"mutability":"mutable","name":"value","nameLocation":"7255:5:13","nodeType":"VariableDeclaration","scope":4852,"src":"7247:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4826,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:13"},"returnParameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4852,"src":"7285:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4829,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:13"},"scope":6254,"src":"7228:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4879,"nodeType":"Block","src":"7803:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"7817:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4862,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4861,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:13","memberName":"max","nodeType":"MemberAccess","src":"7825:17:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4873,"nodeType":"IfStatement","src":"7813:105:13","trueBody":{"id":4872,"nodeType":"Block","src":"7844:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"7901:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4867,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"7865:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4871,"nodeType":"RevertStatement","src":"7858:49:13"}]}},{"expression":{"arguments":[{"id":4876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"7942:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4874,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:13","typeDescriptions":{}}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4859,"id":4878,"nodeType":"Return","src":"7927:21:13"}]},"documentation":{"id":4853,"nodeType":"StructuredDocumentation","src":"7452:280:13","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4880,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:13","nodeType":"FunctionDefinition","parameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"value","nameLocation":"7764:5:13","nodeType":"VariableDeclaration","scope":4880,"src":"7756:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4854,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:13"},"returnParameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4880,"src":"7794:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4857,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:13"},"scope":6254,"src":"7737:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4907,"nodeType":"Block","src":"8312:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"8326:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4890,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4889,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:13","memberName":"max","nodeType":"MemberAccess","src":"8334:17:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4901,"nodeType":"IfStatement","src":"8322:105:13","trueBody":{"id":4900,"nodeType":"Block","src":"8353:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"8410:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4895,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"8374:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4899,"nodeType":"RevertStatement","src":"8367:49:13"}]}},{"expression":{"arguments":[{"id":4904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"8451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4902,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:13","typeDescriptions":{}}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4887,"id":4906,"nodeType":"Return","src":"8436:21:13"}]},"documentation":{"id":4881,"nodeType":"StructuredDocumentation","src":"7961:280:13","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4908,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:13","nodeType":"FunctionDefinition","parameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"value","nameLocation":"8273:5:13","nodeType":"VariableDeclaration","scope":4908,"src":"8265:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:13"},"returnParameters":{"id":4887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4908,"src":"8303:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4885,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:13"},"scope":6254,"src":"8246:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4935,"nodeType":"Block","src":"8821:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"8835:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4918,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4917,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:13","memberName":"max","nodeType":"MemberAccess","src":"8843:17:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4929,"nodeType":"IfStatement","src":"8831:105:13","trueBody":{"id":4928,"nodeType":"Block","src":"8862:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"8919:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4923,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"8883:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4927,"nodeType":"RevertStatement","src":"8876:49:13"}]}},{"expression":{"arguments":[{"id":4932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"8960:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4930,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:13","typeDescriptions":{}}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4915,"id":4934,"nodeType":"Return","src":"8945:21:13"}]},"documentation":{"id":4909,"nodeType":"StructuredDocumentation","src":"8470:280:13","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4936,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:13","nodeType":"FunctionDefinition","parameters":{"id":4912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4911,"mutability":"mutable","name":"value","nameLocation":"8782:5:13","nodeType":"VariableDeclaration","scope":4936,"src":"8774:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4910,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:13"},"returnParameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4936,"src":"8812:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4913,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:13"},"scope":6254,"src":"8755:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4963,"nodeType":"Block","src":"9330:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"9344:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4946,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4945,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:13","memberName":"max","nodeType":"MemberAccess","src":"9352:17:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4957,"nodeType":"IfStatement","src":"9340:105:13","trueBody":{"id":4956,"nodeType":"Block","src":"9371:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"9428:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4951,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"9392:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4955,"nodeType":"RevertStatement","src":"9385:49:13"}]}},{"expression":{"arguments":[{"id":4960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"9469:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4958,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:13","typeDescriptions":{}}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4943,"id":4962,"nodeType":"Return","src":"9454:21:13"}]},"documentation":{"id":4937,"nodeType":"StructuredDocumentation","src":"8979:280:13","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4964,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:13","nodeType":"FunctionDefinition","parameters":{"id":4940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4939,"mutability":"mutable","name":"value","nameLocation":"9291:5:13","nodeType":"VariableDeclaration","scope":4964,"src":"9283:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4938,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:13"},"returnParameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4964,"src":"9321:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4941,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:13"},"scope":6254,"src":"9264:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4991,"nodeType":"Block","src":"9839:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"9853:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4974,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4973,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:13","memberName":"max","nodeType":"MemberAccess","src":"9861:17:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4985,"nodeType":"IfStatement","src":"9849:105:13","trueBody":{"id":4984,"nodeType":"Block","src":"9880:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"9937:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4979,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"9901:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4983,"nodeType":"RevertStatement","src":"9894:49:13"}]}},{"expression":{"arguments":[{"id":4988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"9978:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4986,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:13","typeDescriptions":{}}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4971,"id":4990,"nodeType":"Return","src":"9963:21:13"}]},"documentation":{"id":4965,"nodeType":"StructuredDocumentation","src":"9488:280:13","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4992,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:13","nodeType":"FunctionDefinition","parameters":{"id":4968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4967,"mutability":"mutable","name":"value","nameLocation":"9800:5:13","nodeType":"VariableDeclaration","scope":4992,"src":"9792:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4966,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:13"},"returnParameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4992,"src":"9830:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4969,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:13"},"scope":6254,"src":"9773:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5019,"nodeType":"Block","src":"10348:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"10362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5002,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5001,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:13","memberName":"max","nodeType":"MemberAccess","src":"10370:17:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5013,"nodeType":"IfStatement","src":"10358:105:13","trueBody":{"id":5012,"nodeType":"Block","src":"10389:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"10446:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5007,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"10410:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5011,"nodeType":"RevertStatement","src":"10403:49:13"}]}},{"expression":{"arguments":[{"id":5016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"10487:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5014,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:13","typeDescriptions":{}}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4999,"id":5018,"nodeType":"Return","src":"10472:21:13"}]},"documentation":{"id":4993,"nodeType":"StructuredDocumentation","src":"9997:280:13","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5020,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:13","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"value","nameLocation":"10309:5:13","nodeType":"VariableDeclaration","scope":5020,"src":"10301:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:13"},"returnParameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5020,"src":"10339:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4997,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:13"},"scope":6254,"src":"10282:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5047,"nodeType":"Block","src":"10857:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"10871:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5030,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5029,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:13","memberName":"max","nodeType":"MemberAccess","src":"10879:17:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5041,"nodeType":"IfStatement","src":"10867:105:13","trueBody":{"id":5040,"nodeType":"Block","src":"10898:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"10955:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5035,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"10919:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5039,"nodeType":"RevertStatement","src":"10912:49:13"}]}},{"expression":{"arguments":[{"id":5044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"10996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5042,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:13","typeDescriptions":{}}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5027,"id":5046,"nodeType":"Return","src":"10981:21:13"}]},"documentation":{"id":5021,"nodeType":"StructuredDocumentation","src":"10506:280:13","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5048,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:13","nodeType":"FunctionDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"value","nameLocation":"10818:5:13","nodeType":"VariableDeclaration","scope":5048,"src":"10810:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:13"},"returnParameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5048,"src":"10848:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5025,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:13"},"scope":6254,"src":"10791:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5075,"nodeType":"Block","src":"11360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"11374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5058,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5057,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:13","memberName":"max","nodeType":"MemberAccess","src":"11382:16:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5069,"nodeType":"IfStatement","src":"11370:103:13","trueBody":{"id":5068,"nodeType":"Block","src":"11400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"11456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5063,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"11421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5067,"nodeType":"RevertStatement","src":"11414:48:13"}]}},{"expression":{"arguments":[{"id":5072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"11496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5070,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:13","typeDescriptions":{}}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5055,"id":5074,"nodeType":"Return","src":"11482:20:13"}]},"documentation":{"id":5049,"nodeType":"StructuredDocumentation","src":"11015:276:13","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5076,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"value","nameLocation":"11322:5:13","nodeType":"VariableDeclaration","scope":5076,"src":"11314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5050,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:13"},"returnParameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5076,"src":"11352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5053,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:13"},"scope":6254,"src":"11296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5103,"nodeType":"Block","src":"11860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"11874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5086,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5085,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:13","memberName":"max","nodeType":"MemberAccess","src":"11882:16:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5097,"nodeType":"IfStatement","src":"11870:103:13","trueBody":{"id":5096,"nodeType":"Block","src":"11900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"11956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5091,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"11921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5095,"nodeType":"RevertStatement","src":"11914:48:13"}]}},{"expression":{"arguments":[{"id":5100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"11996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5098,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:13","typeDescriptions":{}}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5083,"id":5102,"nodeType":"Return","src":"11982:20:13"}]},"documentation":{"id":5077,"nodeType":"StructuredDocumentation","src":"11515:276:13","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5104,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"value","nameLocation":"11822:5:13","nodeType":"VariableDeclaration","scope":5104,"src":"11814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5078,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:13"},"returnParameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5104,"src":"11852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5081,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:13"},"scope":6254,"src":"11796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5131,"nodeType":"Block","src":"12360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"12374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5114,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5113,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:13","memberName":"max","nodeType":"MemberAccess","src":"12382:16:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5125,"nodeType":"IfStatement","src":"12370:103:13","trueBody":{"id":5124,"nodeType":"Block","src":"12400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"12456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5119,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"12421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5123,"nodeType":"RevertStatement","src":"12414:48:13"}]}},{"expression":{"arguments":[{"id":5128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"12496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5126,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:13","typeDescriptions":{}}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5111,"id":5130,"nodeType":"Return","src":"12482:20:13"}]},"documentation":{"id":5105,"nodeType":"StructuredDocumentation","src":"12015:276:13","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5132,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"value","nameLocation":"12322:5:13","nodeType":"VariableDeclaration","scope":5132,"src":"12314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:13"},"returnParameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5132,"src":"12352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5109,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:13"},"scope":6254,"src":"12296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5159,"nodeType":"Block","src":"12860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"12874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5142,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5141,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:13","memberName":"max","nodeType":"MemberAccess","src":"12882:16:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5153,"nodeType":"IfStatement","src":"12870:103:13","trueBody":{"id":5152,"nodeType":"Block","src":"12900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"12956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5147,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"12921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5151,"nodeType":"RevertStatement","src":"12914:48:13"}]}},{"expression":{"arguments":[{"id":5156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"12996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5154,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:13","typeDescriptions":{}}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5139,"id":5158,"nodeType":"Return","src":"12982:20:13"}]},"documentation":{"id":5133,"nodeType":"StructuredDocumentation","src":"12515:276:13","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5160,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5135,"mutability":"mutable","name":"value","nameLocation":"12822:5:13","nodeType":"VariableDeclaration","scope":5160,"src":"12814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5134,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:13"},"returnParameters":{"id":5139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5160,"src":"12852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5137,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:13"},"scope":6254,"src":"12796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5187,"nodeType":"Block","src":"13360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"13374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5170,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5169,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:13","memberName":"max","nodeType":"MemberAccess","src":"13382:16:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5181,"nodeType":"IfStatement","src":"13370:103:13","trueBody":{"id":5180,"nodeType":"Block","src":"13400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"13456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5175,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"13421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5179,"nodeType":"RevertStatement","src":"13414:48:13"}]}},{"expression":{"arguments":[{"id":5184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"13496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5182,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:13","typeDescriptions":{}}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5167,"id":5186,"nodeType":"Return","src":"13482:20:13"}]},"documentation":{"id":5161,"nodeType":"StructuredDocumentation","src":"13015:276:13","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5188,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"value","nameLocation":"13322:5:13","nodeType":"VariableDeclaration","scope":5188,"src":"13314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5162,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:13"},"returnParameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5188,"src":"13352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5165,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:13"},"scope":6254,"src":"13296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5215,"nodeType":"Block","src":"13860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"13874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5198,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5197,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:13","memberName":"max","nodeType":"MemberAccess","src":"13882:16:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5209,"nodeType":"IfStatement","src":"13870:103:13","trueBody":{"id":5208,"nodeType":"Block","src":"13900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"13956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5203,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"13921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5207,"nodeType":"RevertStatement","src":"13914:48:13"}]}},{"expression":{"arguments":[{"id":5212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"13996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5210,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:13","typeDescriptions":{}}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5195,"id":5214,"nodeType":"Return","src":"13982:20:13"}]},"documentation":{"id":5189,"nodeType":"StructuredDocumentation","src":"13515:276:13","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5216,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5191,"mutability":"mutable","name":"value","nameLocation":"13822:5:13","nodeType":"VariableDeclaration","scope":5216,"src":"13814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5190,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:13"},"returnParameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5216,"src":"13852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5193,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:13"},"scope":6254,"src":"13796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5243,"nodeType":"Block","src":"14360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"14374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5226,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5225,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:13","memberName":"max","nodeType":"MemberAccess","src":"14382:16:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5237,"nodeType":"IfStatement","src":"14370:103:13","trueBody":{"id":5236,"nodeType":"Block","src":"14400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"14456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5231,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"14421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5235,"nodeType":"RevertStatement","src":"14414:48:13"}]}},{"expression":{"arguments":[{"id":5240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"14496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5238,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:13","typeDescriptions":{}}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5223,"id":5242,"nodeType":"Return","src":"14482:20:13"}]},"documentation":{"id":5217,"nodeType":"StructuredDocumentation","src":"14015:276:13","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5244,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5219,"mutability":"mutable","name":"value","nameLocation":"14322:5:13","nodeType":"VariableDeclaration","scope":5244,"src":"14314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5218,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:13"},"returnParameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5244,"src":"14352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5221,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:13"},"scope":6254,"src":"14296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5271,"nodeType":"Block","src":"14860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"14874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5254,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5253,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:13","memberName":"max","nodeType":"MemberAccess","src":"14882:16:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5265,"nodeType":"IfStatement","src":"14870:103:13","trueBody":{"id":5264,"nodeType":"Block","src":"14900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"14956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5259,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"14921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5263,"nodeType":"RevertStatement","src":"14914:48:13"}]}},{"expression":{"arguments":[{"id":5268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"14996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5266,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:13","typeDescriptions":{}}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5251,"id":5270,"nodeType":"Return","src":"14982:20:13"}]},"documentation":{"id":5245,"nodeType":"StructuredDocumentation","src":"14515:276:13","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5272,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5247,"mutability":"mutable","name":"value","nameLocation":"14822:5:13","nodeType":"VariableDeclaration","scope":5272,"src":"14814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:13"},"returnParameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5272,"src":"14852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5249,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:13"},"scope":6254,"src":"14796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5299,"nodeType":"Block","src":"15360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"15374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5282,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5281,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:13","memberName":"max","nodeType":"MemberAccess","src":"15382:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5293,"nodeType":"IfStatement","src":"15370:103:13","trueBody":{"id":5292,"nodeType":"Block","src":"15400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"15456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5287,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"15421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5291,"nodeType":"RevertStatement","src":"15414:48:13"}]}},{"expression":{"arguments":[{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"15496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5294,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:13","typeDescriptions":{}}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5279,"id":5298,"nodeType":"Return","src":"15482:20:13"}]},"documentation":{"id":5273,"nodeType":"StructuredDocumentation","src":"15015:276:13","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5300,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5275,"mutability":"mutable","name":"value","nameLocation":"15322:5:13","nodeType":"VariableDeclaration","scope":5300,"src":"15314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5274,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:13"},"returnParameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5300,"src":"15352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5277,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:13"},"scope":6254,"src":"15296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5327,"nodeType":"Block","src":"15860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"15874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5310,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5309,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:13","memberName":"max","nodeType":"MemberAccess","src":"15882:16:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5321,"nodeType":"IfStatement","src":"15870:103:13","trueBody":{"id":5320,"nodeType":"Block","src":"15900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"15956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5315,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"15921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5319,"nodeType":"RevertStatement","src":"15914:48:13"}]}},{"expression":{"arguments":[{"id":5324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"15996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5322,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:13","typeDescriptions":{}}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5307,"id":5326,"nodeType":"Return","src":"15982:20:13"}]},"documentation":{"id":5301,"nodeType":"StructuredDocumentation","src":"15515:276:13","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5328,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5303,"mutability":"mutable","name":"value","nameLocation":"15822:5:13","nodeType":"VariableDeclaration","scope":5328,"src":"15814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5302,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:13"},"returnParameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5328,"src":"15852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5305,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:13"},"scope":6254,"src":"15796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5355,"nodeType":"Block","src":"16360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"16374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5338,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5337,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:13","memberName":"max","nodeType":"MemberAccess","src":"16382:16:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5349,"nodeType":"IfStatement","src":"16370:103:13","trueBody":{"id":5348,"nodeType":"Block","src":"16400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"16456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5343,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"16421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5347,"nodeType":"RevertStatement","src":"16414:48:13"}]}},{"expression":{"arguments":[{"id":5352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"16496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5350,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:13","typeDescriptions":{}}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5335,"id":5354,"nodeType":"Return","src":"16482:20:13"}]},"documentation":{"id":5329,"nodeType":"StructuredDocumentation","src":"16015:276:13","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5356,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5331,"mutability":"mutable","name":"value","nameLocation":"16322:5:13","nodeType":"VariableDeclaration","scope":5356,"src":"16314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5330,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:13"},"returnParameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5356,"src":"16352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5333,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:13"},"scope":6254,"src":"16296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5383,"nodeType":"Block","src":"16854:146:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"16868:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5366,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5365,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:13","memberName":"max","nodeType":"MemberAccess","src":"16876:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5377,"nodeType":"IfStatement","src":"16864:101:13","trueBody":{"id":5376,"nodeType":"Block","src":"16893:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"16948:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5371,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"16914:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5375,"nodeType":"RevertStatement","src":"16907:47:13"}]}},{"expression":{"arguments":[{"id":5380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"16987:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5378,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:13","typeDescriptions":{}}},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5363,"id":5382,"nodeType":"Return","src":"16974:19:13"}]},"documentation":{"id":5357,"nodeType":"StructuredDocumentation","src":"16515:272:13","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5384,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:13","nodeType":"FunctionDefinition","parameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"value","nameLocation":"16817:5:13","nodeType":"VariableDeclaration","scope":5384,"src":"16809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5358,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:13"},"returnParameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5384,"src":"16847:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5361,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:13"},"scope":6254,"src":"16792:208:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5406,"nodeType":"Block","src":"17236:128:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"17250:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5400,"nodeType":"IfStatement","src":"17246:81:13","trueBody":{"id":5399,"nodeType":"Block","src":"17261:66:13","statements":[{"errorCall":{"arguments":[{"id":5396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"17310:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5395,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"17282:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5398,"nodeType":"RevertStatement","src":"17275:41:13"}]}},{"expression":{"arguments":[{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"17351:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5401,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:13","typeDescriptions":{}}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5391,"id":5405,"nodeType":"Return","src":"17336:21:13"}]},"documentation":{"id":5385,"nodeType":"StructuredDocumentation","src":"17006:160:13","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5407,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:13","nodeType":"FunctionDefinition","parameters":{"id":5388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5387,"mutability":"mutable","name":"value","nameLocation":"17197:5:13","nodeType":"VariableDeclaration","scope":5407,"src":"17190:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5386,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:13"},"returnParameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5407,"src":"17227:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:13"},"scope":6254,"src":"17171:193:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5432,"nodeType":"Block","src":"17761:150:13","statements":[{"expression":{"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"17771:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"17791:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5416,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:13","typeDescriptions":{}}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5421,"nodeType":"ExpressionStatement","src":"17771:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5422,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"17811:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"17825:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5431,"nodeType":"IfStatement","src":"17807:98:13","trueBody":{"id":5430,"nodeType":"Block","src":"17832:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"17888:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5425,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"17853:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5429,"nodeType":"RevertStatement","src":"17846:48:13"}]}}]},"documentation":{"id":5408,"nodeType":"StructuredDocumentation","src":"17370:312:13","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5433,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:13","nodeType":"FunctionDefinition","parameters":{"id":5411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5410,"mutability":"mutable","name":"value","nameLocation":"17712:5:13","nodeType":"VariableDeclaration","scope":5433,"src":"17705:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5409,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:13"},"returnParameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5413,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:13","nodeType":"VariableDeclaration","scope":5433,"src":"17742:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5412,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:13"},"scope":6254,"src":"17687:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5458,"nodeType":"Block","src":"18308:150:13","statements":[{"expression":{"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"18318:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"18338:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5442,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:13","typeDescriptions":{}}},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5447,"nodeType":"ExpressionStatement","src":"18318:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5448,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"18358:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"18372:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5457,"nodeType":"IfStatement","src":"18354:98:13","trueBody":{"id":5456,"nodeType":"Block","src":"18379:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"18435:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5451,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"18400:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5455,"nodeType":"RevertStatement","src":"18393:48:13"}]}}]},"documentation":{"id":5434,"nodeType":"StructuredDocumentation","src":"17917:312:13","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5459,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:13","nodeType":"FunctionDefinition","parameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"value","nameLocation":"18259:5:13","nodeType":"VariableDeclaration","scope":5459,"src":"18252:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5435,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:13"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:13","nodeType":"VariableDeclaration","scope":5459,"src":"18289:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5438,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:13"},"scope":6254,"src":"18234:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5484,"nodeType":"Block","src":"18855:150:13","statements":[{"expression":{"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"18865:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"18885:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5468,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:13","typeDescriptions":{}}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5473,"nodeType":"ExpressionStatement","src":"18865:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5474,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"18905:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"18919:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5483,"nodeType":"IfStatement","src":"18901:98:13","trueBody":{"id":5482,"nodeType":"Block","src":"18926:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"18982:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5477,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"18947:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5481,"nodeType":"RevertStatement","src":"18940:48:13"}]}}]},"documentation":{"id":5460,"nodeType":"StructuredDocumentation","src":"18464:312:13","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5485,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:13","nodeType":"FunctionDefinition","parameters":{"id":5463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"mutability":"mutable","name":"value","nameLocation":"18806:5:13","nodeType":"VariableDeclaration","scope":5485,"src":"18799:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5461,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:13"},"returnParameters":{"id":5466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5465,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:13","nodeType":"VariableDeclaration","scope":5485,"src":"18836:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5464,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:13"},"scope":6254,"src":"18781:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5510,"nodeType":"Block","src":"19402:150:13","statements":[{"expression":{"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5493,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"19412:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"19432:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5494,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:13","typeDescriptions":{}}},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5499,"nodeType":"ExpressionStatement","src":"19412:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5500,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"19452:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"19466:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5509,"nodeType":"IfStatement","src":"19448:98:13","trueBody":{"id":5508,"nodeType":"Block","src":"19473:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"19529:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5503,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"19494:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5507,"nodeType":"RevertStatement","src":"19487:48:13"}]}}]},"documentation":{"id":5486,"nodeType":"StructuredDocumentation","src":"19011:312:13","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5511,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:13","nodeType":"FunctionDefinition","parameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"value","nameLocation":"19353:5:13","nodeType":"VariableDeclaration","scope":5511,"src":"19346:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5487,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:13"},"returnParameters":{"id":5492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5491,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:13","nodeType":"VariableDeclaration","scope":5511,"src":"19383:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5490,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:13"},"scope":6254,"src":"19328:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5536,"nodeType":"Block","src":"19949:150:13","statements":[{"expression":{"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"19959:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"19979:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5520,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:13","typeDescriptions":{}}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5525,"nodeType":"ExpressionStatement","src":"19959:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"19999:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"20013:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5535,"nodeType":"IfStatement","src":"19995:98:13","trueBody":{"id":5534,"nodeType":"Block","src":"20020:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"20076:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5529,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"20041:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5533,"nodeType":"RevertStatement","src":"20034:48:13"}]}}]},"documentation":{"id":5512,"nodeType":"StructuredDocumentation","src":"19558:312:13","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5537,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:13","nodeType":"FunctionDefinition","parameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"value","nameLocation":"19900:5:13","nodeType":"VariableDeclaration","scope":5537,"src":"19893:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5513,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:13"},"returnParameters":{"id":5518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5517,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:13","nodeType":"VariableDeclaration","scope":5537,"src":"19930:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5516,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:13"},"scope":6254,"src":"19875:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5562,"nodeType":"Block","src":"20496:150:13","statements":[{"expression":{"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"20506:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"20526:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5546,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:13","typeDescriptions":{}}},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5551,"nodeType":"ExpressionStatement","src":"20506:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5552,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"20546:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"20560:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5561,"nodeType":"IfStatement","src":"20542:98:13","trueBody":{"id":5560,"nodeType":"Block","src":"20567:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"20623:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5555,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"20588:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5559,"nodeType":"RevertStatement","src":"20581:48:13"}]}}]},"documentation":{"id":5538,"nodeType":"StructuredDocumentation","src":"20105:312:13","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5563,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:13","nodeType":"FunctionDefinition","parameters":{"id":5541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5540,"mutability":"mutable","name":"value","nameLocation":"20447:5:13","nodeType":"VariableDeclaration","scope":5563,"src":"20440:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5539,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:13"},"returnParameters":{"id":5544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5543,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:13","nodeType":"VariableDeclaration","scope":5563,"src":"20477:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5542,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:13"},"scope":6254,"src":"20422:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5588,"nodeType":"Block","src":"21043:150:13","statements":[{"expression":{"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"21053:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"21073:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5572,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:13","typeDescriptions":{}}},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5577,"nodeType":"ExpressionStatement","src":"21053:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5578,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"21093:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"21107:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5587,"nodeType":"IfStatement","src":"21089:98:13","trueBody":{"id":5586,"nodeType":"Block","src":"21114:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"21170:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5581,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"21135:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5585,"nodeType":"RevertStatement","src":"21128:48:13"}]}}]},"documentation":{"id":5564,"nodeType":"StructuredDocumentation","src":"20652:312:13","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5589,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:13","nodeType":"FunctionDefinition","parameters":{"id":5567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5566,"mutability":"mutable","name":"value","nameLocation":"20994:5:13","nodeType":"VariableDeclaration","scope":5589,"src":"20987:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5565,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:13"},"returnParameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5569,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:13","nodeType":"VariableDeclaration","scope":5589,"src":"21024:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5568,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:13"},"scope":6254,"src":"20969:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5614,"nodeType":"Block","src":"21590:150:13","statements":[{"expression":{"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5597,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"21600:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"21620:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5598,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:13","typeDescriptions":{}}},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5603,"nodeType":"ExpressionStatement","src":"21600:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5604,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"21640:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"21654:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5613,"nodeType":"IfStatement","src":"21636:98:13","trueBody":{"id":5612,"nodeType":"Block","src":"21661:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"21717:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5607,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"21682:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5611,"nodeType":"RevertStatement","src":"21675:48:13"}]}}]},"documentation":{"id":5590,"nodeType":"StructuredDocumentation","src":"21199:312:13","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5615,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:13","nodeType":"FunctionDefinition","parameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"value","nameLocation":"21541:5:13","nodeType":"VariableDeclaration","scope":5615,"src":"21534:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5591,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:13"},"returnParameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:13","nodeType":"VariableDeclaration","scope":5615,"src":"21571:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5594,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:13"},"scope":6254,"src":"21516:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5640,"nodeType":"Block","src":"22137:150:13","statements":[{"expression":{"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5623,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"22147:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"22167:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5624,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:13","typeDescriptions":{}}},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5629,"nodeType":"ExpressionStatement","src":"22147:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5630,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"22187:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"22201:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5639,"nodeType":"IfStatement","src":"22183:98:13","trueBody":{"id":5638,"nodeType":"Block","src":"22208:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"22264:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5633,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"22229:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5637,"nodeType":"RevertStatement","src":"22222:48:13"}]}}]},"documentation":{"id":5616,"nodeType":"StructuredDocumentation","src":"21746:312:13","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5641,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:13","nodeType":"FunctionDefinition","parameters":{"id":5619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5618,"mutability":"mutable","name":"value","nameLocation":"22088:5:13","nodeType":"VariableDeclaration","scope":5641,"src":"22081:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5617,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:13"},"returnParameters":{"id":5622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:13","nodeType":"VariableDeclaration","scope":5641,"src":"22118:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5620,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:13"},"scope":6254,"src":"22063:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5666,"nodeType":"Block","src":"22684:150:13","statements":[{"expression":{"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5649,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"22694:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"22714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5650,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:13","typeDescriptions":{}}},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5655,"nodeType":"ExpressionStatement","src":"22694:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5656,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"22734:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"22748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5665,"nodeType":"IfStatement","src":"22730:98:13","trueBody":{"id":5664,"nodeType":"Block","src":"22755:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"22811:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5659,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"22776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5663,"nodeType":"RevertStatement","src":"22769:48:13"}]}}]},"documentation":{"id":5642,"nodeType":"StructuredDocumentation","src":"22293:312:13","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5667,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:13","nodeType":"FunctionDefinition","parameters":{"id":5645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5644,"mutability":"mutable","name":"value","nameLocation":"22635:5:13","nodeType":"VariableDeclaration","scope":5667,"src":"22628:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5643,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:13"},"returnParameters":{"id":5648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5647,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:13","nodeType":"VariableDeclaration","scope":5667,"src":"22665:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5646,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:13"},"scope":6254,"src":"22610:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5692,"nodeType":"Block","src":"23231:150:13","statements":[{"expression":{"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5675,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"23241:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"23261:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5676,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:13","typeDescriptions":{}}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5681,"nodeType":"ExpressionStatement","src":"23241:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5682,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"23281:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"23295:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5691,"nodeType":"IfStatement","src":"23277:98:13","trueBody":{"id":5690,"nodeType":"Block","src":"23302:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"23358:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5685,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"23323:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5689,"nodeType":"RevertStatement","src":"23316:48:13"}]}}]},"documentation":{"id":5668,"nodeType":"StructuredDocumentation","src":"22840:312:13","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5693,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:13","nodeType":"FunctionDefinition","parameters":{"id":5671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5670,"mutability":"mutable","name":"value","nameLocation":"23182:5:13","nodeType":"VariableDeclaration","scope":5693,"src":"23175:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5669,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:13"},"returnParameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:13","nodeType":"VariableDeclaration","scope":5693,"src":"23212:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5672,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:13"},"scope":6254,"src":"23157:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5718,"nodeType":"Block","src":"23778:150:13","statements":[{"expression":{"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5701,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"23788:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"23808:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5702,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:13","typeDescriptions":{}}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5707,"nodeType":"ExpressionStatement","src":"23788:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5708,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"23828:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"23842:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5717,"nodeType":"IfStatement","src":"23824:98:13","trueBody":{"id":5716,"nodeType":"Block","src":"23849:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"23905:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5711,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"23870:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5715,"nodeType":"RevertStatement","src":"23863:48:13"}]}}]},"documentation":{"id":5694,"nodeType":"StructuredDocumentation","src":"23387:312:13","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5719,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:13","nodeType":"FunctionDefinition","parameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5696,"mutability":"mutable","name":"value","nameLocation":"23729:5:13","nodeType":"VariableDeclaration","scope":5719,"src":"23722:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5695,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:13"},"returnParameters":{"id":5700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:13","nodeType":"VariableDeclaration","scope":5719,"src":"23759:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5698,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:13"},"scope":6254,"src":"23704:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5744,"nodeType":"Block","src":"24325:150:13","statements":[{"expression":{"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5727,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"24335:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"24355:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5728,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:13","typeDescriptions":{}}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5733,"nodeType":"ExpressionStatement","src":"24335:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5734,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"24375:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"24389:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5743,"nodeType":"IfStatement","src":"24371:98:13","trueBody":{"id":5742,"nodeType":"Block","src":"24396:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"24452:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5737,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"24417:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5741,"nodeType":"RevertStatement","src":"24410:48:13"}]}}]},"documentation":{"id":5720,"nodeType":"StructuredDocumentation","src":"23934:312:13","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5745,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:13","nodeType":"FunctionDefinition","parameters":{"id":5723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5722,"mutability":"mutable","name":"value","nameLocation":"24276:5:13","nodeType":"VariableDeclaration","scope":5745,"src":"24269:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5721,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:13"},"returnParameters":{"id":5726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5725,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:13","nodeType":"VariableDeclaration","scope":5745,"src":"24306:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5724,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:13"},"scope":6254,"src":"24251:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5770,"nodeType":"Block","src":"24872:150:13","statements":[{"expression":{"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5753,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"24882:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"24902:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5754,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:13","typeDescriptions":{}}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5759,"nodeType":"ExpressionStatement","src":"24882:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5760,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"24922:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"24936:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5769,"nodeType":"IfStatement","src":"24918:98:13","trueBody":{"id":5768,"nodeType":"Block","src":"24943:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"24999:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5763,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"24964:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5767,"nodeType":"RevertStatement","src":"24957:48:13"}]}}]},"documentation":{"id":5746,"nodeType":"StructuredDocumentation","src":"24481:312:13","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5771,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:13","nodeType":"FunctionDefinition","parameters":{"id":5749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5748,"mutability":"mutable","name":"value","nameLocation":"24823:5:13","nodeType":"VariableDeclaration","scope":5771,"src":"24816:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5747,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:13"},"returnParameters":{"id":5752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5751,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:13","nodeType":"VariableDeclaration","scope":5771,"src":"24853:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5750,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:13"},"scope":6254,"src":"24798:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5796,"nodeType":"Block","src":"25419:150:13","statements":[{"expression":{"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5779,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"25429:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"25449:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5780,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:13","typeDescriptions":{}}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5785,"nodeType":"ExpressionStatement","src":"25429:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5786,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"25469:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"25483:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5795,"nodeType":"IfStatement","src":"25465:98:13","trueBody":{"id":5794,"nodeType":"Block","src":"25490:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"25546:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5789,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"25511:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5793,"nodeType":"RevertStatement","src":"25504:48:13"}]}}]},"documentation":{"id":5772,"nodeType":"StructuredDocumentation","src":"25028:312:13","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5797,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:13","nodeType":"FunctionDefinition","parameters":{"id":5775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5774,"mutability":"mutable","name":"value","nameLocation":"25370:5:13","nodeType":"VariableDeclaration","scope":5797,"src":"25363:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5773,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:13"},"returnParameters":{"id":5778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5777,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:13","nodeType":"VariableDeclaration","scope":5797,"src":"25400:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5776,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:13"},"scope":6254,"src":"25345:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5822,"nodeType":"Block","src":"25966:150:13","statements":[{"expression":{"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5805,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"25976:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"25996:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5806,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:13","typeDescriptions":{}}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5811,"nodeType":"ExpressionStatement","src":"25976:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5812,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"26016:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"26030:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5821,"nodeType":"IfStatement","src":"26012:98:13","trueBody":{"id":5820,"nodeType":"Block","src":"26037:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"26093:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5815,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"26058:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5819,"nodeType":"RevertStatement","src":"26051:48:13"}]}}]},"documentation":{"id":5798,"nodeType":"StructuredDocumentation","src":"25575:312:13","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5823,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:13","nodeType":"FunctionDefinition","parameters":{"id":5801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5800,"mutability":"mutable","name":"value","nameLocation":"25917:5:13","nodeType":"VariableDeclaration","scope":5823,"src":"25910:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5799,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:13"},"returnParameters":{"id":5804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:13","nodeType":"VariableDeclaration","scope":5823,"src":"25947:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5802,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:13"},"scope":6254,"src":"25892:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5848,"nodeType":"Block","src":"26513:150:13","statements":[{"expression":{"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5831,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"26523:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"26543:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5832,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:13","typeDescriptions":{}}},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5837,"nodeType":"ExpressionStatement","src":"26523:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5838,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"26563:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"26577:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5847,"nodeType":"IfStatement","src":"26559:98:13","trueBody":{"id":5846,"nodeType":"Block","src":"26584:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5826,"src":"26640:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5841,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"26605:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5845,"nodeType":"RevertStatement","src":"26598:48:13"}]}}]},"documentation":{"id":5824,"nodeType":"StructuredDocumentation","src":"26122:312:13","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5849,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:13","nodeType":"FunctionDefinition","parameters":{"id":5827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5826,"mutability":"mutable","name":"value","nameLocation":"26464:5:13","nodeType":"VariableDeclaration","scope":5849,"src":"26457:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5825,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:13"},"returnParameters":{"id":5830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5829,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:13","nodeType":"VariableDeclaration","scope":5849,"src":"26494:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5828,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:13"},"scope":6254,"src":"26439:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5874,"nodeType":"Block","src":"27060:150:13","statements":[{"expression":{"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5857,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"27070:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"27090:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5858,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:13","typeDescriptions":{}}},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5863,"nodeType":"ExpressionStatement","src":"27070:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5864,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"27110:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"27124:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5873,"nodeType":"IfStatement","src":"27106:98:13","trueBody":{"id":5872,"nodeType":"Block","src":"27131:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"27187:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5867,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"27152:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5871,"nodeType":"RevertStatement","src":"27145:48:13"}]}}]},"documentation":{"id":5850,"nodeType":"StructuredDocumentation","src":"26669:312:13","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5875,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:13","nodeType":"FunctionDefinition","parameters":{"id":5853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5852,"mutability":"mutable","name":"value","nameLocation":"27011:5:13","nodeType":"VariableDeclaration","scope":5875,"src":"27004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5851,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:13"},"returnParameters":{"id":5856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5855,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:13","nodeType":"VariableDeclaration","scope":5875,"src":"27041:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5854,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:13"},"scope":6254,"src":"26986:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5900,"nodeType":"Block","src":"27607:150:13","statements":[{"expression":{"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5883,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"27617:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"27637:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5884,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:13","typeDescriptions":{}}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5889,"nodeType":"ExpressionStatement","src":"27617:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5890,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"27657:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"27671:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5899,"nodeType":"IfStatement","src":"27653:98:13","trueBody":{"id":5898,"nodeType":"Block","src":"27678:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"27734:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5893,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"27699:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5897,"nodeType":"RevertStatement","src":"27692:48:13"}]}}]},"documentation":{"id":5876,"nodeType":"StructuredDocumentation","src":"27216:312:13","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5901,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:13","nodeType":"FunctionDefinition","parameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"value","nameLocation":"27558:5:13","nodeType":"VariableDeclaration","scope":5901,"src":"27551:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5877,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:13"},"returnParameters":{"id":5882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5881,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:13","nodeType":"VariableDeclaration","scope":5901,"src":"27588:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5880,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:13"},"scope":6254,"src":"27533:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5926,"nodeType":"Block","src":"28147:148:13","statements":[{"expression":{"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5909,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"28157:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"28176:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5910,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:13","typeDescriptions":{}}},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5915,"nodeType":"ExpressionStatement","src":"28157:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5916,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"28196:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"28210:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5925,"nodeType":"IfStatement","src":"28192:97:13","trueBody":{"id":5924,"nodeType":"Block","src":"28217:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"28272:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5919,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"28238:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5923,"nodeType":"RevertStatement","src":"28231:47:13"}]}}]},"documentation":{"id":5902,"nodeType":"StructuredDocumentation","src":"27763:307:13","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5927,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:13","nodeType":"FunctionDefinition","parameters":{"id":5905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5904,"mutability":"mutable","name":"value","nameLocation":"28099:5:13","nodeType":"VariableDeclaration","scope":5927,"src":"28092:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5903,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:13"},"returnParameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:13","nodeType":"VariableDeclaration","scope":5927,"src":"28129:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5906,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:13"},"scope":6254,"src":"28075:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5952,"nodeType":"Block","src":"28685:148:13","statements":[{"expression":{"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5935,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"28695:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"28714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5936,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:13","typeDescriptions":{}}},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5941,"nodeType":"ExpressionStatement","src":"28695:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5942,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"28734:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"28748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5951,"nodeType":"IfStatement","src":"28730:97:13","trueBody":{"id":5950,"nodeType":"Block","src":"28755:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"28810:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5945,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"28776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5949,"nodeType":"RevertStatement","src":"28769:47:13"}]}}]},"documentation":{"id":5928,"nodeType":"StructuredDocumentation","src":"28301:307:13","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5953,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:13","nodeType":"FunctionDefinition","parameters":{"id":5931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5930,"mutability":"mutable","name":"value","nameLocation":"28637:5:13","nodeType":"VariableDeclaration","scope":5953,"src":"28630:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5929,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:13"},"returnParameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:13","nodeType":"VariableDeclaration","scope":5953,"src":"28667:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5932,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:13"},"scope":6254,"src":"28613:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5978,"nodeType":"Block","src":"29223:148:13","statements":[{"expression":{"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5961,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"29233:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"29252:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5962,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:13","typeDescriptions":{}}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5967,"nodeType":"ExpressionStatement","src":"29233:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5968,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"29272:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"29286:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5977,"nodeType":"IfStatement","src":"29268:97:13","trueBody":{"id":5976,"nodeType":"Block","src":"29293:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"29348:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5971,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"29314:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5975,"nodeType":"RevertStatement","src":"29307:47:13"}]}}]},"documentation":{"id":5954,"nodeType":"StructuredDocumentation","src":"28839:307:13","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5979,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:13","nodeType":"FunctionDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"value","nameLocation":"29175:5:13","nodeType":"VariableDeclaration","scope":5979,"src":"29168:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5955,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:13"},"returnParameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:13","nodeType":"VariableDeclaration","scope":5979,"src":"29205:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5958,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:13"},"scope":6254,"src":"29151:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6004,"nodeType":"Block","src":"29761:148:13","statements":[{"expression":{"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5987,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"29771:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"29790:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5988,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:13","typeDescriptions":{}}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5993,"nodeType":"ExpressionStatement","src":"29771:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5994,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"29810:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"29824:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6003,"nodeType":"IfStatement","src":"29806:97:13","trueBody":{"id":6002,"nodeType":"Block","src":"29831:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"29886:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5997,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"29852:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6001,"nodeType":"RevertStatement","src":"29845:47:13"}]}}]},"documentation":{"id":5980,"nodeType":"StructuredDocumentation","src":"29377:307:13","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6005,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:13","nodeType":"FunctionDefinition","parameters":{"id":5983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5982,"mutability":"mutable","name":"value","nameLocation":"29713:5:13","nodeType":"VariableDeclaration","scope":6005,"src":"29706:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5981,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:13"},"returnParameters":{"id":5986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5985,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:13","nodeType":"VariableDeclaration","scope":6005,"src":"29743:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5984,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:13"},"scope":6254,"src":"29689:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6030,"nodeType":"Block","src":"30299:148:13","statements":[{"expression":{"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6013,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"30309:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"30328:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6014,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:13","typeDescriptions":{}}},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6019,"nodeType":"ExpressionStatement","src":"30309:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6020,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"30348:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"30362:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6029,"nodeType":"IfStatement","src":"30344:97:13","trueBody":{"id":6028,"nodeType":"Block","src":"30369:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"30424:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6023,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"30390:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6027,"nodeType":"RevertStatement","src":"30383:47:13"}]}}]},"documentation":{"id":6006,"nodeType":"StructuredDocumentation","src":"29915:307:13","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6031,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:13","nodeType":"FunctionDefinition","parameters":{"id":6009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6008,"mutability":"mutable","name":"value","nameLocation":"30251:5:13","nodeType":"VariableDeclaration","scope":6031,"src":"30244:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6007,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:13"},"returnParameters":{"id":6012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6011,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:13","nodeType":"VariableDeclaration","scope":6031,"src":"30281:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6010,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:13"},"scope":6254,"src":"30227:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6056,"nodeType":"Block","src":"30837:148:13","statements":[{"expression":{"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6039,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"30847:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"30866:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6040,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:13","typeDescriptions":{}}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6045,"nodeType":"ExpressionStatement","src":"30847:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6046,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"30886:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"30900:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6055,"nodeType":"IfStatement","src":"30882:97:13","trueBody":{"id":6054,"nodeType":"Block","src":"30907:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"30962:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6049,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"30928:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6053,"nodeType":"RevertStatement","src":"30921:47:13"}]}}]},"documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"30453:307:13","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6057,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:13","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"value","nameLocation":"30789:5:13","nodeType":"VariableDeclaration","scope":6057,"src":"30782:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6033,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:13"},"returnParameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:13","nodeType":"VariableDeclaration","scope":6057,"src":"30819:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6036,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:13"},"scope":6254,"src":"30765:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6082,"nodeType":"Block","src":"31375:148:13","statements":[{"expression":{"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6065,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"31385:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"31404:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6066,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:13","typeDescriptions":{}}},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6071,"nodeType":"ExpressionStatement","src":"31385:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6072,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"31424:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"31438:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6081,"nodeType":"IfStatement","src":"31420:97:13","trueBody":{"id":6080,"nodeType":"Block","src":"31445:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"31500:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6075,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"31466:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6079,"nodeType":"RevertStatement","src":"31459:47:13"}]}}]},"documentation":{"id":6058,"nodeType":"StructuredDocumentation","src":"30991:307:13","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6083,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:13","nodeType":"FunctionDefinition","parameters":{"id":6061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6060,"mutability":"mutable","name":"value","nameLocation":"31327:5:13","nodeType":"VariableDeclaration","scope":6083,"src":"31320:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6059,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:13"},"returnParameters":{"id":6064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6063,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:13","nodeType":"VariableDeclaration","scope":6083,"src":"31357:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6062,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:13"},"scope":6254,"src":"31303:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6108,"nodeType":"Block","src":"31913:148:13","statements":[{"expression":{"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6091,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"31923:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"31942:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6092,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:13","typeDescriptions":{}}},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6097,"nodeType":"ExpressionStatement","src":"31923:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6098,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"31962:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"31976:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6107,"nodeType":"IfStatement","src":"31958:97:13","trueBody":{"id":6106,"nodeType":"Block","src":"31983:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"32038:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6101,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"32004:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6105,"nodeType":"RevertStatement","src":"31997:47:13"}]}}]},"documentation":{"id":6084,"nodeType":"StructuredDocumentation","src":"31529:307:13","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6109,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:13","nodeType":"FunctionDefinition","parameters":{"id":6087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6086,"mutability":"mutable","name":"value","nameLocation":"31865:5:13","nodeType":"VariableDeclaration","scope":6109,"src":"31858:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6085,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:13"},"returnParameters":{"id":6090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6089,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:13","nodeType":"VariableDeclaration","scope":6109,"src":"31895:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6088,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:13"},"scope":6254,"src":"31841:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6134,"nodeType":"Block","src":"32451:148:13","statements":[{"expression":{"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6117,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"32461:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"32480:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6118,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:13","typeDescriptions":{}}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6123,"nodeType":"ExpressionStatement","src":"32461:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6124,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"32500:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"32514:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6133,"nodeType":"IfStatement","src":"32496:97:13","trueBody":{"id":6132,"nodeType":"Block","src":"32521:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"32576:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6127,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"32542:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6131,"nodeType":"RevertStatement","src":"32535:47:13"}]}}]},"documentation":{"id":6110,"nodeType":"StructuredDocumentation","src":"32067:307:13","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6135,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:13","nodeType":"FunctionDefinition","parameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"value","nameLocation":"32403:5:13","nodeType":"VariableDeclaration","scope":6135,"src":"32396:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6111,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:13"},"returnParameters":{"id":6116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:13","nodeType":"VariableDeclaration","scope":6135,"src":"32433:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6114,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:13"},"scope":6254,"src":"32379:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6160,"nodeType":"Block","src":"32989:148:13","statements":[{"expression":{"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6143,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"32999:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"33018:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6144,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:13","typeDescriptions":{}}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6149,"nodeType":"ExpressionStatement","src":"32999:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6150,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"33038:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"33052:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6159,"nodeType":"IfStatement","src":"33034:97:13","trueBody":{"id":6158,"nodeType":"Block","src":"33059:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"33114:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6153,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"33080:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6157,"nodeType":"RevertStatement","src":"33073:47:13"}]}}]},"documentation":{"id":6136,"nodeType":"StructuredDocumentation","src":"32605:307:13","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6161,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:13","nodeType":"FunctionDefinition","parameters":{"id":6139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6138,"mutability":"mutable","name":"value","nameLocation":"32941:5:13","nodeType":"VariableDeclaration","scope":6161,"src":"32934:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6137,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:13"},"returnParameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:13","nodeType":"VariableDeclaration","scope":6161,"src":"32971:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6140,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:13"},"scope":6254,"src":"32917:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6186,"nodeType":"Block","src":"33527:148:13","statements":[{"expression":{"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6169,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"33537:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"33556:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6170,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:13","typeDescriptions":{}}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6175,"nodeType":"ExpressionStatement","src":"33537:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"33576:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"33590:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6185,"nodeType":"IfStatement","src":"33572:97:13","trueBody":{"id":6184,"nodeType":"Block","src":"33597:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"33652:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6179,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"33618:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6183,"nodeType":"RevertStatement","src":"33611:47:13"}]}}]},"documentation":{"id":6162,"nodeType":"StructuredDocumentation","src":"33143:307:13","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6187,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:13","nodeType":"FunctionDefinition","parameters":{"id":6165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6164,"mutability":"mutable","name":"value","nameLocation":"33479:5:13","nodeType":"VariableDeclaration","scope":6187,"src":"33472:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6163,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:13"},"returnParameters":{"id":6168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6167,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:13","nodeType":"VariableDeclaration","scope":6187,"src":"33509:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6166,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:13"},"scope":6254,"src":"33455:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6212,"nodeType":"Block","src":"34058:146:13","statements":[{"expression":{"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6195,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"34068:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"34086:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6196,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:13","typeDescriptions":{}}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6201,"nodeType":"ExpressionStatement","src":"34068:24:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"34106:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"34120:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6211,"nodeType":"IfStatement","src":"34102:96:13","trueBody":{"id":6210,"nodeType":"Block","src":"34127:71:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"34181:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6205,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"34148:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6209,"nodeType":"RevertStatement","src":"34141:46:13"}]}}]},"documentation":{"id":6188,"nodeType":"StructuredDocumentation","src":"33681:302:13","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6213,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:13","nodeType":"FunctionDefinition","parameters":{"id":6191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"value","nameLocation":"34011:5:13","nodeType":"VariableDeclaration","scope":6213,"src":"34004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6189,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:13"},"returnParameters":{"id":6194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6193,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:13","nodeType":"VariableDeclaration","scope":6213,"src":"34041:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6192,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:13"},"scope":6254,"src":"33988:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6242,"nodeType":"Block","src":"34444:250:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"34557:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6225,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6224,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:13","memberName":"max","nodeType":"MemberAccess","src":"34573:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6222,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:13","typeDescriptions":{}}},"id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6236,"nodeType":"IfStatement","src":"34553:105:13","trueBody":{"id":6235,"nodeType":"Block","src":"34592:66:13","statements":[{"errorCall":{"arguments":[{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"34641:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6231,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"34613:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6234,"nodeType":"RevertStatement","src":"34606:41:13"}]}},{"expression":{"arguments":[{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"34681:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6237,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:13","typeDescriptions":{}}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6220,"id":6241,"nodeType":"Return","src":"34667:20:13"}]},"documentation":{"id":6214,"nodeType":"StructuredDocumentation","src":"34210:165:13","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6243,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:13","nodeType":"FunctionDefinition","parameters":{"id":6217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6216,"mutability":"mutable","name":"value","nameLocation":"34406:5:13","nodeType":"VariableDeclaration","scope":6243,"src":"34398:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6215,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:13"},"returnParameters":{"id":6220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6243,"src":"34436:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6218,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:13"},"scope":6254,"src":"34380:314:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6252,"nodeType":"Block","src":"34853:87:13","statements":[{"AST":{"nativeSrc":"34888:46:13","nodeType":"YulBlock","src":"34888:46:13","statements":[{"nativeSrc":"34902:22:13","nodeType":"YulAssignment","src":"34902:22:13","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:13","nodeType":"YulIdentifier","src":"34921:1:13"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:13","nodeType":"YulIdentifier","src":"34914:6:13"},"nativeSrc":"34914:9:13","nodeType":"YulFunctionCall","src":"34914:9:13"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:13","nodeType":"YulIdentifier","src":"34907:6:13"},"nativeSrc":"34907:17:13","nodeType":"YulFunctionCall","src":"34907:17:13"},"variableNames":[{"name":"u","nativeSrc":"34902:1:13","nodeType":"YulIdentifier","src":"34902:1:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6246,"isOffset":false,"isSlot":false,"src":"34921:1:13","valueSize":1},{"declaration":6249,"isOffset":false,"isSlot":false,"src":"34902:1:13","valueSize":1}],"flags":["memory-safe"],"id":6251,"nodeType":"InlineAssembly","src":"34863:71:13"}]},"documentation":{"id":6244,"nodeType":"StructuredDocumentation","src":"34700:90:13","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6253,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:13","nodeType":"FunctionDefinition","parameters":{"id":6247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6246,"mutability":"mutable","name":"b","nameLocation":"34816:1:13","nodeType":"VariableDeclaration","scope":6253,"src":"34811:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6245,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:13"},"returnParameters":{"id":6250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6249,"mutability":"mutable","name":"u","nameLocation":"34850:1:13","nodeType":"VariableDeclaration","scope":6253,"src":"34842:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6248,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:13"},"scope":6254,"src":"34795:145:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6255,"src":"769:34173:13","usedErrors":[4499,4504,4511,4516],"usedEvents":[]}],"src":"192:34751:13"},"id":13},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6254],"SignedMath":[6398]},"id":6399,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6256,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6399,"sourceUnit":6255,"src":"135:40:14","symbolAliases":[{"foreign":{"id":6257,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"143:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6259,"nodeType":"StructuredDocumentation","src":"177:80:14","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6398,"linearizedBaseContracts":[6398],"name":"SignedMath","nameLocation":"266:10:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":6288,"nodeType":"Block","src":"746:215:14","statements":[{"id":6287,"nodeType":"UncheckedBlock","src":"756:199:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6271,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"894:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6264,"src":"900:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6273,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"904:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6280,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"932:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6278,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"916:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6254_$","typeString":"type(library SafeCast)"}},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6253,"src":"916:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6276,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:14","typeDescriptions":{}}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6270,"id":6286,"nodeType":"Return","src":"887:57:14"}]}]},"documentation":{"id":6260,"nodeType":"StructuredDocumentation","src":"283:374:14","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6289,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:14","nodeType":"FunctionDefinition","parameters":{"id":6267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6262,"mutability":"mutable","name":"condition","nameLocation":"684:9:14","nodeType":"VariableDeclaration","scope":6289,"src":"679:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6261,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6264,"mutability":"mutable","name":"a","nameLocation":"702:1:14","nodeType":"VariableDeclaration","scope":6289,"src":"695:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6263,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6266,"mutability":"mutable","name":"b","nameLocation":"712:1:14","nodeType":"VariableDeclaration","scope":6289,"src":"705:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6265,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:14"},"returnParameters":{"id":6270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6289,"src":"738:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6268,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:14"},"scope":6398,"src":"662:299:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6307,"nodeType":"Block","src":"1102:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"1127:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6301,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"1131:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6303,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"1134:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6304,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"1137:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6299,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"1119:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6298,"id":6306,"nodeType":"Return","src":"1112:27:14"}]},"documentation":{"id":6290,"nodeType":"StructuredDocumentation","src":"967:66:14","text":" @dev Returns the largest of two signed numbers."},"id":6308,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:14","nodeType":"FunctionDefinition","parameters":{"id":6295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6292,"mutability":"mutable","name":"a","nameLocation":"1058:1:14","nodeType":"VariableDeclaration","scope":6308,"src":"1051:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6291,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6294,"mutability":"mutable","name":"b","nameLocation":"1068:1:14","nodeType":"VariableDeclaration","scope":6308,"src":"1061:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6293,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:14"},"returnParameters":{"id":6298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6308,"src":"1094:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6296,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:14"},"scope":6398,"src":"1038:108:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6326,"nodeType":"Block","src":"1288:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6319,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"1313:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6320,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"1317:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6322,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"1320:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6323,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"1323:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6318,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"1305:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6317,"id":6325,"nodeType":"Return","src":"1298:27:14"}]},"documentation":{"id":6309,"nodeType":"StructuredDocumentation","src":"1152:67:14","text":" @dev Returns the smallest of two signed numbers."},"id":6327,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:14","nodeType":"FunctionDefinition","parameters":{"id":6314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"a","nameLocation":"1244:1:14","nodeType":"VariableDeclaration","scope":6327,"src":"1237:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6310,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6313,"mutability":"mutable","name":"b","nameLocation":"1254:1:14","nodeType":"VariableDeclaration","scope":6327,"src":"1247:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6312,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:14"},"returnParameters":{"id":6317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6327,"src":"1280:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6315,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:14"},"scope":6398,"src":"1224:108:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6370,"nodeType":"Block","src":"1537:162:14","statements":[{"assignments":[6338],"declarations":[{"constant":false,"id":6338,"mutability":"mutable","name":"x","nameLocation":"1606:1:14","nodeType":"VariableDeclaration","scope":6370,"src":"1599:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6337,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6351,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6339,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"1611:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6340,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"1615:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6343,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"1622:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6344,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"1626:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:14"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6352,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"1651:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6357,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"1671:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:14","typeDescriptions":{}}},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6353,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:14","typeDescriptions":{}}},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6330,"src":"1685:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6363,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"1689:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6336,"id":6369,"nodeType":"Return","src":"1644:48:14"}]},"documentation":{"id":6328,"nodeType":"StructuredDocumentation","src":"1338:126:14","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6371,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:14","nodeType":"FunctionDefinition","parameters":{"id":6333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6330,"mutability":"mutable","name":"a","nameLocation":"1493:1:14","nodeType":"VariableDeclaration","scope":6371,"src":"1486:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6329,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6332,"mutability":"mutable","name":"b","nameLocation":"1503:1:14","nodeType":"VariableDeclaration","scope":6371,"src":"1496:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6331,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:14"},"returnParameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6371,"src":"1529:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6334,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:14"},"scope":6398,"src":"1469:230:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6396,"nodeType":"Block","src":"1843:767:14","statements":[{"id":6395,"nodeType":"UncheckedBlock","src":"1853:751:14","statements":[{"assignments":[6380],"declarations":[{"constant":false,"id":6380,"mutability":"mutable","name":"mask","nameLocation":"2424:4:14","nodeType":"VariableDeclaration","scope":6395,"src":"2417:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6379,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6384,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6381,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"2431:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6387,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"2576:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6388,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"2580:4:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6391,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"2588:4:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:14","typeDescriptions":{}}},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6378,"id":6394,"nodeType":"Return","src":"2560:33:14"}]}]},"documentation":{"id":6372,"nodeType":"StructuredDocumentation","src":"1705:78:14","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6397,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:14","nodeType":"FunctionDefinition","parameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"n","nameLocation":"1808:1:14","nodeType":"VariableDeclaration","scope":6397,"src":"1801:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6373,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:14"},"returnParameters":{"id":6378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6397,"src":"1834:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:14"},"scope":6398,"src":"1788:822:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6399,"src":"258:2354:14","usedErrors":[],"usedEvents":[]}],"src":"109:2504:14"},"id":14},"contracts/CustomOpinionMaker.sol":{"ast":{"absolutePath":"contracts/CustomOpinionMaker.sol","exportedSymbols":{"Context":[2089],"CustomOpinionMaker":[6637],"ECDSA":[2809],"Ownable":[1303]},"id":6638,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6400,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:15"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6638,"sourceUnit":1304,"src":"58:52:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":6402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6638,"sourceUnit":2810,"src":"111:62:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6403,"name":"Ownable","nameLocations":["206:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"206:7:15"},"id":6404,"nodeType":"InheritanceSpecifier","src":"206:7:15"}],"canonicalName":"CustomOpinionMaker","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6637,"linearizedBaseContracts":[6637,1303,2089],"name":"CustomOpinionMaker","nameLocation":"184:18:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":6412,"nodeType":"Block","src":"276:2:15","statements":[]},"id":6413,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6409,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"262:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6410,"kind":"baseConstructorSpecifier","modifierName":{"id":6408,"name":"Ownable","nameLocations":["254:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"254:7:15"},"nodeType":"ModifierInvocation","src":"254:21:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6406,"mutability":"mutable","name":"initialOwner","nameLocation":"240:12:15","nodeType":"VariableDeclaration","scope":6413,"src":"232:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6405,"name":"address","nodeType":"ElementaryTypeName","src":"232:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"231:22:15"},"returnParameters":{"id":6411,"nodeType":"ParameterList","parameters":[],"src":"276:0:15"},"scope":6637,"src":"220:58:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"CustomOpinionMaker.Execution","id":6422,"members":[{"constant":false,"id":6415,"mutability":"mutable","name":"kernelId","nameLocation":"316:8:15","nodeType":"VariableDeclaration","scope":6422,"src":"311:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6414,"name":"uint","nodeType":"ElementaryTypeName","src":"311:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6417,"mutability":"mutable","name":"result","nameLocation":"340:6:15","nodeType":"VariableDeclaration","scope":6422,"src":"334:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6416,"name":"bytes","nodeType":"ElementaryTypeName","src":"334:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6419,"mutability":"mutable","name":"proof","nameLocation":"362:5:15","nodeType":"VariableDeclaration","scope":6422,"src":"356:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6418,"name":"bytes","nodeType":"ElementaryTypeName","src":"356:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6421,"mutability":"mutable","name":"isValidated","nameLocation":"382:11:15","nodeType":"VariableDeclaration","scope":6422,"src":"377:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6420,"name":"bool","nodeType":"ElementaryTypeName","src":"377:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Execution","nameLocation":"291:9:15","nodeType":"StructDefinition","scope":6637,"src":"284:116:15","visibility":"public"},{"canonicalName":"CustomOpinionMaker.KernelResult","id":6431,"members":[{"constant":false,"id":6424,"mutability":"mutable","name":"addr","nameLocation":"444:4:15","nodeType":"VariableDeclaration","scope":6431,"src":"436:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6423,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6426,"mutability":"mutable","name":"flag","nameLocation":"463:4:15","nodeType":"VariableDeclaration","scope":6431,"src":"458:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6425,"name":"bool","nodeType":"ElementaryTypeName","src":"458:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6428,"mutability":"mutable","name":"name","nameLocation":"484:4:15","nodeType":"VariableDeclaration","scope":6431,"src":"477:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6427,"name":"string","nodeType":"ElementaryTypeName","src":"477:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6430,"mutability":"mutable","name":"score","nameLocation":"503:5:15","nodeType":"VariableDeclaration","scope":6431,"src":"498:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6429,"name":"uint","nodeType":"ElementaryTypeName","src":"498:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"KernelResult","nameLocation":"413:12:15","nodeType":"StructDefinition","scope":6637,"src":"406:109:15","visibility":"public"},{"body":{"id":6456,"nodeType":"Block","src":"772:98:15","statements":[{"expression":{"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6446,"name":"opinion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"783:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6447,"name":"isFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"792:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6448,"name":"updatedPlan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"805:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6449,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"782:35:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6451,"name":"executionPlan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"839:13:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":6452,"name":"kernelId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"854:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6450,"name":"_validateExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"820:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bool_$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes calldata,uint256) pure returns (bool,bool,bytes memory)"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"820:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bool,bytes memory)"}},"src":"782:81:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6455,"nodeType":"ExpressionStatement","src":"782:81:15"}]},"functionSelector":"6e93bb39","id":6457,"implemented":true,"kind":"function","modifiers":[{"id":6438,"kind":"modifierInvocation","modifierName":{"id":6437,"name":"onlyOwner","nameLocations":["683:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"683:9:15"},"nodeType":"ModifierInvocation","src":"683:9:15"}],"name":"getOpinion","nameLocation":"589:10:15","nodeType":"FunctionDefinition","parameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"executionPlan","nameLocation":"615:13:15","nodeType":"VariableDeclaration","scope":6457,"src":"600:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6432,"name":"bytes","nodeType":"ElementaryTypeName","src":"600:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6435,"mutability":"mutable","name":"kernelId","nameLocation":"635:8:15","nodeType":"VariableDeclaration","scope":6457,"src":"630:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6434,"name":"uint","nodeType":"ElementaryTypeName","src":"630:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"599:45:15"},"returnParameters":{"id":6445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6440,"mutability":"mutable","name":"opinion","nameLocation":"715:7:15","nodeType":"VariableDeclaration","scope":6457,"src":"710:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6439,"name":"bool","nodeType":"ElementaryTypeName","src":"710:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6442,"mutability":"mutable","name":"isFinalized","nameLocation":"729:11:15","nodeType":"VariableDeclaration","scope":6457,"src":"724:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6441,"name":"bool","nodeType":"ElementaryTypeName","src":"724:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6444,"mutability":"mutable","name":"updatedPlan","nameLocation":"755:11:15","nodeType":"VariableDeclaration","scope":6457,"src":"742:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6443,"name":"bytes","nodeType":"ElementaryTypeName","src":"742:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"709:58:15"},"scope":6637,"src":"580:290:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6635,"nodeType":"Block","src":"1090:1459:15","statements":[{"assignments":[6474],"declarations":[{"constant":false,"id":6474,"mutability":"mutable","name":"executions","nameLocation":"1119:10:15","nodeType":"VariableDeclaration","scope":6635,"src":"1100:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Execution_$6422_memory_ptr_$dyn_memory_ptr","typeString":"struct CustomOpinionMaker.Execution[]"},"typeName":{"baseType":{"id":6472,"nodeType":"UserDefinedTypeName","pathNode":{"id":6471,"name":"Execution","nameLocations":["1100:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":6422,"src":"1100:9:15"},"referencedDeclaration":6422,"src":"1100:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$6422_storage_ptr","typeString":"struct CustomOpinionMaker.Execution"}},"id":6473,"nodeType":"ArrayTypeName","src":"1100:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Execution_$6422_storage_$dyn_storage_ptr","typeString":"struct CustomOpinionMaker.Execution[]"}},"visibility":"internal"}],"id":6482,"initialValue":{"arguments":[{"id":6477,"name":"executionPlan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"1143:13:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"baseExpression":{"id":6478,"name":"Execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"1159:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Execution_$6422_storage_ptr_$","typeString":"type(struct CustomOpinionMaker.Execution storage pointer)"}},"id":6479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"1159:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_struct$_Execution_$6422_memory_ptr_$dyn_memory_ptr_$","typeString":"type(struct CustomOpinionMaker.Execution memory[] memory)"}}],"id":6480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1158:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_struct$_Execution_$6422_memory_ptr_$dyn_memory_ptr_$","typeString":"type(struct CustomOpinionMaker.Execution memory[] memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_array$_t_struct$_Execution_$6422_memory_ptr_$dyn_memory_ptr_$","typeString":"type(struct CustomOpinionMaker.Execution memory[] memory)"}],"expression":{"id":6475,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1132:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1136:6:15","memberName":"decode","nodeType":"MemberAccess","src":"1132:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1132:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Execution_$6422_memory_ptr_$dyn_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1100:72:15"},{"body":{"id":6626,"nodeType":"Block","src":"1228:1268:15","statements":[{"assignments":[6496],"declarations":[{"constant":false,"id":6496,"mutability":"mutable","name":"execution","nameLocation":"1259:9:15","nodeType":"VariableDeclaration","scope":6626,"src":"1242:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$6422_memory_ptr","typeString":"struct CustomOpinionMaker.Execution"},"typeName":{"id":6495,"nodeType":"UserDefinedTypeName","pathNode":{"id":6494,"name":"Execution","nameLocations":["1242:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":6422,"src":"1242:9:15"},"referencedDeclaration":6422,"src":"1242:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$6422_storage_ptr","typeString":"struct CustomOpinionMaker.Execution"}},"visibility":"internal"}],"id":6500,"initialValue":{"baseExpression":{"id":6497,"name":"executions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"1271:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Execution_$6422_memory_ptr_$dyn_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory[] memory"}},"id":6499,"indexExpression":{"id":6498,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"1282:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1271:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$6422_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory"}},"nodeType":"VariableDeclarationStatement","src":"1242:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6501,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"1302:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$6422_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory"}},"id":6502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1312:8:15","memberName":"kernelId","nodeType":"MemberAccess","referencedDeclaration":6415,"src":"1302:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6503,"name":"kernelId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"1324:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1302:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6625,"nodeType":"IfStatement","src":"1298:1188:15","trueBody":{"id":6624,"nodeType":"Block","src":"1334:1152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6505,"name":"kernelId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"1356:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1368:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1356:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6553,"name":"kernelId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"1821:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":6554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1833:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1821:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6602,"nodeType":"IfStatement","src":"1817:472:15","trueBody":{"id":6601,"nodeType":"Block","src":"1836:453:15","statements":[{"assignments":[6558],"declarations":[{"constant":false,"id":6558,"mutability":"mutable","name":"res","nameLocation":"1931:3:15","nodeType":"VariableDeclaration","scope":6601,"src":"1911:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_KernelResult_$6431_memory_ptr","typeString":"struct CustomOpinionMaker.KernelResult"},"typeName":{"id":6557,"nodeType":"UserDefinedTypeName","pathNode":{"id":6556,"name":"KernelResult","nameLocations":["1911:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":6431,"src":"1911:12:15"},"referencedDeclaration":6431,"src":"1911:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_KernelResult_$6431_storage_ptr","typeString":"struct CustomOpinionMaker.KernelResult"}},"visibility":"internal"}],"id":6566,"initialValue":{"arguments":[{"expression":{"id":6561,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"1949:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$6422_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory"}},"id":6562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1959:6:15","memberName":"result","nodeType":"MemberAccess","referencedDeclaration":6417,"src":"1949:16:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6563,"name":"KernelResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"1968:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_KernelResult_$6431_storage_ptr_$","typeString":"type(struct CustomOpinionMaker.KernelResult storage pointer)"}}],"id":6564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1967:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_KernelResult_$6431_storage_ptr_$","typeString":"type(struct CustomOpinionMaker.KernelResult storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_struct$_KernelResult_$6431_storage_ptr_$","typeString":"type(struct CustomOpinionMaker.KernelResult storage pointer)"}],"expression":{"id":6559,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1938:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1942:6:15","memberName":"decode","nodeType":"MemberAccess","src":"1938:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_KernelResult_$6431_memory_ptr","typeString":"struct CustomOpinionMaker.KernelResult memory"}},"nodeType":"VariableDeclarationStatement","src":"1910:72:15"},{"assignments":[6568],"declarations":[{"constant":false,"id":6568,"mutability":"mutable","name":"proofValid","nameLocation":"2010:10:15","nodeType":"VariableDeclaration","scope":6601,"src":"2005:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6567,"name":"bool","nodeType":"ElementaryTypeName","src":"2005:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6577,"initialValue":{"arguments":[{"expression":{"id":6571,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"2035:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$6422_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory"}},"id":6572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2045:5:15","memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":6419,"src":"2035:15:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2053:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":6573,"name":"bool","nodeType":"ElementaryTypeName","src":"2053:4:15","typeDescriptions":{}}}],"id":6575,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2052:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":6569,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2024:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2028:6:15","memberName":"decode","nodeType":"MemberAccess","src":"2024:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2024:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2004:55:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6578,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"2085:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_KernelResult_$6431_memory_ptr","typeString":"struct CustomOpinionMaker.KernelResult memory"}},"id":6579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2089:4:15","memberName":"flag","nodeType":"MemberAccess","referencedDeclaration":6426,"src":"2085:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6580,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"2097:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_KernelResult_$6431_memory_ptr","typeString":"struct CustomOpinionMaker.KernelResult memory"}},"id":6581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2101:4:15","memberName":"addr","nodeType":"MemberAccess","referencedDeclaration":6424,"src":"2097:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2117:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2109:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6582,"name":"address","nodeType":"ElementaryTypeName","src":"2109:7:15","typeDescriptions":{}}},"id":6585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2109:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2097:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2085:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":6588,"name":"proofValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"2123:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2085:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6599,"nodeType":"Block","src":"2204:67:15","statements":[{"expression":{"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6595,"name":"isFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"2230:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2244:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2230:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6598,"nodeType":"ExpressionStatement","src":"2230:18:15"}]},"id":6600,"nodeType":"IfStatement","src":"2081:190:15","trueBody":{"id":6594,"nodeType":"Block","src":"2135:63:15","statements":[{"expression":{"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6590,"name":"opinion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"2161:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2171:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2161:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6593,"nodeType":"ExpressionStatement","src":"2161:14:15"}]}}]}},"id":6603,"nodeType":"IfStatement","src":"1352:937:15","trueBody":{"id":6552,"nodeType":"Block","src":"1371:440:15","statements":[{"assignments":[6509,6511],"declarations":[{"constant":false,"id":6509,"mutability":"mutable","name":"success","nameLocation":"1451:7:15","nodeType":"VariableDeclaration","scope":6552,"src":"1446:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6508,"name":"bool","nodeType":"ElementaryTypeName","src":"1446:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6511,"mutability":"mutable","name":"value","nameLocation":"1465:5:15","nodeType":"VariableDeclaration","scope":6552,"src":"1460:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6510,"name":"uint","nodeType":"ElementaryTypeName","src":"1460:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6522,"initialValue":{"arguments":[{"expression":{"id":6514,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"1485:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$6422_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory"}},"id":6515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1495:6:15","memberName":"result","nodeType":"MemberAccess","referencedDeclaration":6417,"src":"1485:16:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1504:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":6516,"name":"bool","nodeType":"ElementaryTypeName","src":"1504:4:15","typeDescriptions":{}}},{"id":6519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1510:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6518,"name":"uint","nodeType":"ElementaryTypeName","src":"1510:4:15","typeDescriptions":{}}}],"id":6520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1503:12:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(bool),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(bool),type(uint256))"}],"expression":{"id":6512,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1474:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1478:6:15","memberName":"decode","nodeType":"MemberAccess","src":"1474:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"1445:71:15"},{"assignments":[6524],"declarations":[{"constant":false,"id":6524,"mutability":"mutable","name":"proofValid","nameLocation":"1544:10:15","nodeType":"VariableDeclaration","scope":6552,"src":"1539:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6523,"name":"bool","nodeType":"ElementaryTypeName","src":"1539:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6533,"initialValue":{"arguments":[{"expression":{"id":6527,"name":"execution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"1569:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$6422_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory"}},"id":6528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1579:5:15","memberName":"proof","nodeType":"MemberAccess","referencedDeclaration":6419,"src":"1569:15:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1587:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":6529,"name":"bool","nodeType":"ElementaryTypeName","src":"1587:4:15","typeDescriptions":{}}}],"id":6531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1586:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":6525,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1558:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1562:6:15","memberName":"decode","nodeType":"MemberAccess","src":"1558:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1558:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1538:55:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6534,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"1619:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"1630:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"313030","id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1638:3:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1630:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1619:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":6539,"name":"proofValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"1645:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1619:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6550,"nodeType":"Block","src":"1726:67:15","statements":[{"expression":{"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6546,"name":"isFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"1752:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1766:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1752:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6549,"nodeType":"ExpressionStatement","src":"1752:18:15"}]},"id":6551,"nodeType":"IfStatement","src":"1615:178:15","trueBody":{"id":6545,"nodeType":"Block","src":"1657:63:15","statements":[{"expression":{"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6541,"name":"opinion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"1683:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1693:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1683:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6544,"nodeType":"ExpressionStatement","src":"1683:14:15"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6604,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"2311:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6605,"name":"executions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"2316:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Execution_$6422_memory_ptr_$dyn_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory[] memory"}},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2327:6:15","memberName":"length","nodeType":"MemberAccess","src":"2316:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2336:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2316:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2311:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6615,"nodeType":"IfStatement","src":"2307:91:15","trueBody":{"id":6614,"nodeType":"Block","src":"2339:59:15","statements":[{"expression":{"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6610,"name":"isFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"2361:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2375:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2361:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6613,"nodeType":"ExpressionStatement","src":"2361:18:15"}]}},{"expression":{"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6616,"name":"executions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"2416:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Execution_$6422_memory_ptr_$dyn_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory[] memory"}},"id":6618,"indexExpression":{"id":6617,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"2427:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2416:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_Execution_$6422_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory"}},"id":6619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2430:11:15","memberName":"isValidated","nodeType":"MemberAccess","referencedDeclaration":6421,"src":"2416:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2444:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2416:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6622,"nodeType":"ExpressionStatement","src":"2416:32:15"},{"id":6623,"nodeType":"Break","src":"2466:5:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"1200:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6488,"name":"executions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"1204:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Execution_$6422_memory_ptr_$dyn_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory[] memory"}},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1215:6:15","memberName":"length","nodeType":"MemberAccess","src":"1204:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1200:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6627,"initializationExpression":{"assignments":[6484],"declarations":[{"constant":false,"id":6484,"mutability":"mutable","name":"i","nameLocation":"1193:1:15","nodeType":"VariableDeclaration","scope":6627,"src":"1188:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6483,"name":"uint","nodeType":"ElementaryTypeName","src":"1188:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6486,"initialValue":{"hexValue":"30","id":6485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1197:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1188:10:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1223:3:15","subExpression":{"id":6491,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"1223:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6493,"nodeType":"ExpressionStatement","src":"1223:3:15"},"nodeType":"ForStatement","src":"1183:1313:15"},{"expression":{"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6628,"name":"updatedPlan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"2506:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6631,"name":"executions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"2531:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Execution_$6422_memory_ptr_$dyn_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Execution_$6422_memory_ptr_$dyn_memory_ptr","typeString":"struct CustomOpinionMaker.Execution memory[] memory"}],"expression":{"id":6629,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2520:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2524:6:15","memberName":"encode","nodeType":"MemberAccess","src":"2520:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2520:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2506:36:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6634,"nodeType":"ExpressionStatement","src":"2506:36:15"}]},"id":6636,"implemented":true,"kind":"function","modifiers":[],"name":"_validateExecution","nameLocation":"918:18:15","nodeType":"FunctionDefinition","parameters":{"id":6462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6459,"mutability":"mutable","name":"executionPlan","nameLocation":"952:13:15","nodeType":"VariableDeclaration","scope":6636,"src":"937:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6458,"name":"bytes","nodeType":"ElementaryTypeName","src":"937:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6461,"mutability":"mutable","name":"kernelId","nameLocation":"972:8:15","nodeType":"VariableDeclaration","scope":6636,"src":"967:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6460,"name":"uint","nodeType":"ElementaryTypeName","src":"967:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"936:45:15"},"returnParameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"opinion","nameLocation":"1033:7:15","nodeType":"VariableDeclaration","scope":6636,"src":"1028:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6463,"name":"bool","nodeType":"ElementaryTypeName","src":"1028:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6466,"mutability":"mutable","name":"isFinalized","nameLocation":"1047:11:15","nodeType":"VariableDeclaration","scope":6636,"src":"1042:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6465,"name":"bool","nodeType":"ElementaryTypeName","src":"1042:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6468,"mutability":"mutable","name":"updatedPlan","nameLocation":"1073:11:15","nodeType":"VariableDeclaration","scope":6636,"src":"1060:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6467,"name":"bytes","nodeType":"ElementaryTypeName","src":"1060:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1027:58:15"},"scope":6637,"src":"909:1640:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":6638,"src":"175:2376:15","usedErrors":[1169,1174],"usedEvents":[1180]}],"src":"32:2520:15"},"id":15},"contracts/CustomTokenAuthority.sol":{"ast":{"absolutePath":"contracts/CustomTokenAuthority.sol","exportedSymbols":{"Context":[2089],"CustomTokenAuthority":[7114],"ECDSA":[2809],"EthereumUtils":[628],"Ownable":[1303],"Sapphire":[1072],"SignatureRSV":[10],"sha384":[1155],"sha512":[1128],"sha512_256":[1101]},"id":7115,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6639,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:16"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7115,"sourceUnit":1304,"src":"58:52:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":6641,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7115,"sourceUnit":2810,"src":"111:62:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol","file":"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol","id":6642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7115,"sourceUnit":1156,"src":"174:66:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@oasisprotocol/sapphire-contracts/contracts/EthereumUtils.sol","file":"@oasisprotocol/sapphire-contracts/contracts/EthereumUtils.sol","id":6643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7115,"sourceUnit":629,"src":"241:71:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6644,"name":"Ownable","nameLocations":["407:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"407:7:16"},"id":6645,"nodeType":"InheritanceSpecifier","src":"407:7:16"}],"canonicalName":"CustomTokenAuthority","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7114,"linearizedBaseContracts":[7114,1303,2089],"name":"CustomTokenAuthority","nameLocation":"383:20:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CustomTokenAuthority.Keypair","id":6650,"members":[{"constant":false,"id":6647,"mutability":"mutable","name":"pubKey","nameLocation":"452:6:16","nodeType":"VariableDeclaration","scope":6650,"src":"446:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6646,"name":"bytes","nodeType":"ElementaryTypeName","src":"446:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6649,"mutability":"mutable","name":"privKey","nameLocation":"474:7:16","nodeType":"VariableDeclaration","scope":6650,"src":"468:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6648,"name":"bytes","nodeType":"ElementaryTypeName","src":"468:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Keypair","nameLocation":"428:7:16","nodeType":"StructDefinition","scope":7114,"src":"421:67:16","visibility":"public"},{"canonicalName":"CustomTokenAuthority.Execution","id":6659,"members":[{"constant":false,"id":6652,"mutability":"mutable","name":"kernelId","nameLocation":"529:8:16","nodeType":"VariableDeclaration","scope":6659,"src":"521:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6651,"name":"uint256","nodeType":"ElementaryTypeName","src":"521:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6654,"mutability":"mutable","name":"result","nameLocation":"553:6:16","nodeType":"VariableDeclaration","scope":6659,"src":"547:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6653,"name":"bytes","nodeType":"ElementaryTypeName","src":"547:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6656,"mutability":"mutable","name":"proof","nameLocation":"575:5:16","nodeType":"VariableDeclaration","scope":6659,"src":"569:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6655,"name":"bytes","nodeType":"ElementaryTypeName","src":"569:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6658,"mutability":"mutable","name":"isValidated","nameLocation":"595:11:16","nodeType":"VariableDeclaration","scope":6659,"src":"590:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6657,"name":"bool","nodeType":"ElementaryTypeName","src":"590:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Execution","nameLocation":"501:9:16","nodeType":"StructDefinition","scope":7114,"src":"494:119:16","visibility":"public"},{"constant":false,"id":6662,"mutability":"mutable","name":"signingKeypair","nameLocation":"635:14:16","nodeType":"VariableDeclaration","scope":7114,"src":"619:30:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair"},"typeName":{"id":6661,"nodeType":"UserDefinedTypeName","pathNode":{"id":6660,"name":"Keypair","nameLocations":["619:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":6650,"src":"619:7:16"},"referencedDeclaration":6650,"src":"619:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage_ptr","typeString":"struct CustomTokenAuthority.Keypair"}},"visibility":"private"},{"constant":false,"id":6665,"mutability":"mutable","name":"accessKeypair","nameLocation":"671:13:16","nodeType":"VariableDeclaration","scope":7114,"src":"655:29:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair"},"typeName":{"id":6664,"nodeType":"UserDefinedTypeName","pathNode":{"id":6663,"name":"Keypair","nameLocations":["655:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":6650,"src":"655:7:16"},"referencedDeclaration":6650,"src":"655:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage_ptr","typeString":"struct CustomTokenAuthority.Keypair"}},"visibility":"private"},{"constant":false,"id":6667,"mutability":"mutable","name":"signingKeypairRetrievalPassword","nameLocation":"706:31:16","nodeType":"VariableDeclaration","scope":7114,"src":"690:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"690:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6669,"mutability":"mutable","name":"opinionMaker","nameLocation":"759:12:16","nodeType":"VariableDeclaration","scope":7114,"src":"743:28:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6668,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":6673,"mutability":"mutable","name":"whitelist","nameLocation":"811:9:16","nodeType":"VariableDeclaration","scope":7114,"src":"778:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6672,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6670,"name":"address","nodeType":"ElementaryTypeName","src":"786:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"778:24:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6671,"name":"bool","nodeType":"ElementaryTypeName","src":"797:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":6677,"mutability":"mutable","name":"runtimeDigests","nameLocation":"859:14:16","nodeType":"VariableDeclaration","scope":7114,"src":"826:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":6676,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"834:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"826:24:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6675,"name":"bool","nodeType":"ElementaryTypeName","src":"845:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":6681,"mutability":"mutable","name":"allowedKernels","nameLocation":"912:14:16","nodeType":"VariableDeclaration","scope":7114,"src":"879:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":6680,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6678,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"879:24:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6679,"name":"bool","nodeType":"ElementaryTypeName","src":"898:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":6715,"nodeType":"Block","src":"1014:209:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6692,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"1032:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1057:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1049:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6693,"name":"address","nodeType":"ElementaryTypeName","src":"1049:7:16","typeDescriptions":{}}},"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1049:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1032:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e657220616464726573732063616e6e6f74206265207a65726f","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1061:30:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af","typeString":"literal_string \"Owner address cannot be zero\""},"value":"Owner address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af","typeString":"literal_string \"Owner address cannot be zero\""}],"id":6691,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1024:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6700,"nodeType":"ExpressionStatement","src":"1024:68:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6702,"name":"_opinionMaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"1110:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1135:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1127:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6703,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:16","typeDescriptions":{}}},"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1127:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1110:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f70696e696f6e206d616b657220616464726573732063616e6e6f74206265207a65726f","id":6708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1139:38:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_02ff5272e27310f5d58f0bfab8fd120ca71037961b23740a5289506859567628","typeString":"literal_string \"Opinion maker address cannot be zero\""},"value":"Opinion maker address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_02ff5272e27310f5d58f0bfab8fd120ca71037961b23740a5289506859567628","typeString":"literal_string \"Opinion maker address cannot be zero\""}],"id":6701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1102:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:76:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6710,"nodeType":"ExpressionStatement","src":"1102:76:16"},{"expression":{"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6711,"name":"opinionMaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"1188:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6712,"name":"_opinionMaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"1203:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1188:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6714,"nodeType":"ExpressionStatement","src":"1188:28:16"}]},"id":6716,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6688,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"999:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6689,"kind":"baseConstructorSpecifier","modifierName":{"id":6687,"name":"Ownable","nameLocations":["991:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"991:7:16"},"nodeType":"ModifierInvocation","src":"991:22:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6683,"mutability":"mutable","name":"_initialOwner","nameLocation":"953:13:16","nodeType":"VariableDeclaration","scope":6716,"src":"945:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6682,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6685,"mutability":"mutable","name":"_opinionMaker","nameLocation":"976:13:16","nodeType":"VariableDeclaration","scope":6716,"src":"968:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6684,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"944:46:16"},"returnParameters":{"id":6690,"nodeType":"ParameterList","parameters":[],"src":"1014:0:16"},"scope":7114,"src":"933:290:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6755,"nodeType":"Block","src":"1307:376:16","statements":[{"assignments":[6722],"declarations":[{"constant":false,"id":6722,"mutability":"mutable","name":"seed","nameLocation":"1330:4:16","nodeType":"VariableDeclaration","scope":6755,"src":"1317:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6721,"name":"bytes","nodeType":"ElementaryTypeName","src":"1317:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6728,"initialValue":{"arguments":[{"hexValue":"3332","id":6725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1358:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"hexValue":"","id":6726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1362:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":6723,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1337:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1346:11:16","memberName":"randomBytes","nodeType":"MemberAccess","referencedDeclaration":715,"src":"1337:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,bytes memory) view returns (bytes memory)"}},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1317:48:16"},{"assignments":[6730,6732],"declarations":[{"constant":false,"id":6730,"mutability":"mutable","name":"pubKey","nameLocation":"1389:6:16","nodeType":"VariableDeclaration","scope":6755,"src":"1376:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6729,"name":"bytes","nodeType":"ElementaryTypeName","src":"1376:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6732,"mutability":"mutable","name":"privKey","nameLocation":"1410:7:16","nodeType":"VariableDeclaration","scope":6755,"src":"1397:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6731,"name":"bytes","nodeType":"ElementaryTypeName","src":"1397:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6740,"initialValue":{"arguments":[{"expression":{"expression":{"id":6735,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1466:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1475:10:16","memberName":"SigningAlg","nodeType":"MemberAccess","referencedDeclaration":684,"src":"1466:19:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SigningAlg_$684_$","typeString":"type(enum Sapphire.SigningAlg)"}},"id":6737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:27:16","memberName":"Secp256k1PrehashedKeccak256","nodeType":"MemberAccess","referencedDeclaration":679,"src":"1466:47:16","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"}},{"id":6738,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"1527:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6733,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1421:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1430:22:16","memberName":"generateSigningKeyPair","nodeType":"MemberAccess","referencedDeclaration":935,"src":"1421:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_SigningAlg_$684_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function (enum Sapphire.SigningAlg,bytes memory) view returns (bytes memory,bytes memory)"}},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1421:120:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1375:166:16"},{"expression":{"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6741,"name":"signingKeypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"1551:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6743,"name":"pubKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"1576:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6744,"name":"privKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"1584:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6742,"name":"Keypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"1568:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Keypair_$6650_storage_ptr_$","typeString":"type(struct CustomTokenAuthority.Keypair storage pointer)"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1568:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_memory_ptr","typeString":"struct CustomTokenAuthority.Keypair memory"}},"src":"1551:41:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair storage ref"}},"id":6747,"nodeType":"ExpressionStatement","src":"1551:41:16"},{"expression":{"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6748,"name":"accessKeypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"1602:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6750,"name":"pubKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"1626:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6751,"name":"privKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"1634:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6749,"name":"Keypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"1618:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Keypair_$6650_storage_ptr_$","typeString":"type(struct CustomTokenAuthority.Keypair storage pointer)"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1618:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_memory_ptr","typeString":"struct CustomTokenAuthority.Keypair memory"}},"src":"1602:40:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair storage ref"}},"id":6754,"nodeType":"ExpressionStatement","src":"1602:40:16"}]},"functionSelector":"922dd7d9","id":6756,"implemented":true,"kind":"function","modifiers":[{"id":6719,"kind":"modifierInvocation","modifierName":{"id":6718,"name":"onlyOwner","nameLocations":["1297:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"1297:9:16"},"nodeType":"ModifierInvocation","src":"1297:9:16"}],"name":"generateKey","nameLocation":"1274:11:16","nodeType":"FunctionDefinition","parameters":{"id":6717,"nodeType":"ParameterList","parameters":[],"src":"1285:2:16"},"returnParameters":{"id":6720,"nodeType":"ParameterList","parameters":[],"src":"1307:0:16"},"scope":7114,"src":"1265:418:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6777,"nodeType":"Block","src":"1799:128:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6764,"name":"newOpinionMaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"1817:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1844:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1836:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6765,"name":"address","nodeType":"ElementaryTypeName","src":"1836:7:16","typeDescriptions":{}}},"id":6768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1836:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1817:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f70696e696f6e206d616b65722061646472657373","id":6770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1848:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b59e1a7d3ceb6f75ada369bd071c775d53631a4b1428b9850934a34bbe6ee8ca","typeString":"literal_string \"Invalid opinion maker address\""},"value":"Invalid opinion maker address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b59e1a7d3ceb6f75ada369bd071c775d53631a4b1428b9850934a34bbe6ee8ca","typeString":"literal_string \"Invalid opinion maker address\""}],"id":6763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1809:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1809:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6772,"nodeType":"ExpressionStatement","src":"1809:71:16"},{"expression":{"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6773,"name":"opinionMaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"1890:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6774,"name":"newOpinionMaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"1905:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1890:30:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6776,"nodeType":"ExpressionStatement","src":"1890:30:16"}]},"functionSelector":"95f7b6ab","id":6778,"implemented":true,"kind":"function","modifiers":[{"id":6761,"kind":"modifierInvocation","modifierName":{"id":6760,"name":"onlyOwner","nameLocations":["1789:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"1789:9:16"},"nodeType":"ModifierInvocation","src":"1789:9:16"}],"name":"setOpinionMaker","nameLocation":"1739:15:16","nodeType":"FunctionDefinition","parameters":{"id":6759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6758,"mutability":"mutable","name":"newOpinionMaker","nameLocation":"1763:15:16","nodeType":"VariableDeclaration","scope":6778,"src":"1755:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6757,"name":"address","nodeType":"ElementaryTypeName","src":"1755:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1754:25:16"},"returnParameters":{"id":6762,"nodeType":"ParameterList","parameters":[],"src":"1799:0:16"},"scope":7114,"src":"1730:197:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6794,"nodeType":"Block","src":"2080:58:16","statements":[{"expression":{"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6787,"name":"signingKeypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"2090:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6789,"name":"pubKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"2115:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":6790,"name":"privKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"2123:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6788,"name":"Keypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"2107:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Keypair_$6650_storage_ptr_$","typeString":"type(struct CustomTokenAuthority.Keypair storage pointer)"}},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_memory_ptr","typeString":"struct CustomTokenAuthority.Keypair memory"}},"src":"2090:41:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair storage ref"}},"id":6793,"nodeType":"ExpressionStatement","src":"2090:41:16"}]},"functionSelector":"7355f88b","id":6795,"implemented":true,"kind":"function","modifiers":[{"id":6785,"kind":"modifierInvocation","modifierName":{"id":6784,"name":"onlyOwner","nameLocations":["2070:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"2070:9:16"},"nodeType":"ModifierInvocation","src":"2070:9:16"}],"name":"setSigningKeypair","nameLocation":"1996:17:16","nodeType":"FunctionDefinition","parameters":{"id":6783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6780,"mutability":"mutable","name":"pubKey","nameLocation":"2029:6:16","nodeType":"VariableDeclaration","scope":6795,"src":"2014:21:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6779,"name":"bytes","nodeType":"ElementaryTypeName","src":"2014:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6782,"mutability":"mutable","name":"privKey","nameLocation":"2052:7:16","nodeType":"VariableDeclaration","scope":6795,"src":"2037:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6781,"name":"bytes","nodeType":"ElementaryTypeName","src":"2037:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2013:47:16"},"returnParameters":{"id":6786,"nodeType":"ParameterList","parameters":[],"src":"2080:0:16"},"scope":7114,"src":"1987:151:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6811,"nodeType":"Block","src":"2295:88:16","statements":[{"expression":{"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6802,"name":"signingKeypairRetrievalPassword","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"2305:31:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6806,"name":"password","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"2366:8:16","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"expression":{"id":6804,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2349:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2353:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"2349:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6803,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2339:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2339:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2305:71:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6810,"nodeType":"ExpressionStatement","src":"2305:71:16"}]},"functionSelector":"7998efb8","id":6812,"implemented":true,"kind":"function","modifiers":[{"id":6800,"kind":"modifierInvocation","modifierName":{"id":6799,"name":"onlyOwner","nameLocations":["2285:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"2285:9:16"},"nodeType":"ModifierInvocation","src":"2285:9:16"}],"name":"setSigningKeypairRetrievalPassword","nameLocation":"2215:34:16","nodeType":"FunctionDefinition","parameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6797,"mutability":"mutable","name":"password","nameLocation":"2266:8:16","nodeType":"VariableDeclaration","scope":6812,"src":"2250:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6796,"name":"string","nodeType":"ElementaryTypeName","src":"2250:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2249:26:16"},"returnParameters":{"id":6801,"nodeType":"ParameterList","parameters":[],"src":"2295:0:16"},"scope":7114,"src":"2206:177:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6832,"nodeType":"Block","src":"2536:176:16","statements":[{"assignments":[6820],"declarations":[{"constant":false,"id":6820,"mutability":"mutable","name":"signingKeypairAddress","nameLocation":"2554:21:16","nodeType":"VariableDeclaration","scope":6832,"src":"2546:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6819,"name":"address","nodeType":"ElementaryTypeName","src":"2546:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6826,"initialValue":{"arguments":[{"expression":{"id":6823,"name":"signingKeypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"2620:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair storage ref"}},"id":6824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2635:6:16","memberName":"pubKey","nodeType":"MemberAccess","referencedDeclaration":6647,"src":"2620:21:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"id":6821,"name":"EthereumUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"2578:13:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EthereumUtils_$628_$","typeString":"type(library EthereumUtils)"}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2592:27:16","memberName":"k256PubkeyToEthereumAddress","nodeType":"MemberAccess","referencedDeclaration":197,"src":"2578:41:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory) view returns (address)"}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2578:64:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2546:96:16"},{"expression":{"components":[{"expression":{"id":6827,"name":"signingKeypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"2660:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair storage ref"}},"id":6828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2675:6:16","memberName":"pubKey","nodeType":"MemberAccess","referencedDeclaration":6647,"src":"2660:21:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"id":6829,"name":"signingKeypairAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"2683:21:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2659:46:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_storage_$_t_address_$","typeString":"tuple(bytes storage ref,address)"}},"functionReturnParameters":6818,"id":6831,"nodeType":"Return","src":"2652:53:16"}]},"functionSelector":"e498de5f","id":6833,"implemented":true,"kind":"function","modifiers":[],"name":"getSigningKeypairPublicKey","nameLocation":"2461:26:16","nodeType":"FunctionDefinition","parameters":{"id":6813,"nodeType":"ParameterList","parameters":[],"src":"2487:2:16"},"returnParameters":{"id":6818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6833,"src":"2513:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6814,"name":"bytes","nodeType":"ElementaryTypeName","src":"2513:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6833,"src":"2527:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6816,"name":"address","nodeType":"ElementaryTypeName","src":"2527:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2512:23:16"},"scope":7114,"src":"2452:260:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6857,"nodeType":"Block","src":"2895:191:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6843,"name":"signingKeypairRetrievalPassword","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"2926:31:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":6847,"name":"password","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"2988:8:16","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"expression":{"id":6845,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2971:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2975:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"2971:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2971:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6844,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2961:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2961:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2926:72:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070617373776f7264","id":6851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3012:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1cef6291a0db92e468e1b7ef8e85f77ae993f2d706de2f2db44e91780f9bfab","typeString":"literal_string \"Invalid password\""},"value":"Invalid password"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c1cef6291a0db92e468e1b7ef8e85f77ae993f2d706de2f2db44e91780f9bfab","typeString":"literal_string \"Invalid password\""}],"id":6842,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2905:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2905:135:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6853,"nodeType":"ExpressionStatement","src":"2905:135:16"},{"expression":{"expression":{"id":6854,"name":"signingKeypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"3057:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair storage ref"}},"id":6855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3072:7:16","memberName":"privKey","nodeType":"MemberAccess","referencedDeclaration":6649,"src":"3057:22:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":6841,"id":6856,"nodeType":"Return","src":"3050:29:16"}]},"functionSelector":"aa775b4a","id":6858,"implemented":true,"kind":"function","modifiers":[{"id":6838,"kind":"modifierInvocation","modifierName":{"id":6837,"name":"onlyOwner","nameLocations":["2862:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"2862:9:16"},"nodeType":"ModifierInvocation","src":"2862:9:16"}],"name":"getSigningKeypairPrivateKey","nameLocation":"2794:27:16","nodeType":"FunctionDefinition","parameters":{"id":6836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6835,"mutability":"mutable","name":"password","nameLocation":"2838:8:16","nodeType":"VariableDeclaration","scope":6858,"src":"2822:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6834,"name":"string","nodeType":"ElementaryTypeName","src":"2822:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2821:26:16"},"returnParameters":{"id":6841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6858,"src":"2881:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6839,"name":"bytes","nodeType":"ElementaryTypeName","src":"2881:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2880:14:16"},"scope":7114,"src":"2785:301:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6873,"nodeType":"Block","src":"3231:56:16","statements":[{"expression":{"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6867,"name":"whitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"3241:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6869,"indexExpression":{"id":6868,"name":"kernelNodePubKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"3251:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3241:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6870,"name":"isAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"3271:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3241:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6872,"nodeType":"ExpressionStatement","src":"3241:39:16"}]},"functionSelector":"53d6fd59","id":6874,"implemented":true,"kind":"function","modifiers":[{"id":6865,"kind":"modifierInvocation","modifierName":{"id":6864,"name":"onlyOwner","nameLocations":["3221:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"3221:9:16"},"nodeType":"ModifierInvocation","src":"3221:9:16"}],"name":"setWhitelist","nameLocation":"3157:12:16","nodeType":"FunctionDefinition","parameters":{"id":6863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"kernelNodePubKey","nameLocation":"3178:16:16","nodeType":"VariableDeclaration","scope":6874,"src":"3170:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6859,"name":"address","nodeType":"ElementaryTypeName","src":"3170:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6862,"mutability":"mutable","name":"isAllowed","nameLocation":"3201:9:16","nodeType":"VariableDeclaration","scope":6874,"src":"3196:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6861,"name":"bool","nodeType":"ElementaryTypeName","src":"3196:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3169:42:16"},"returnParameters":{"id":6866,"nodeType":"ParameterList","parameters":[],"src":"3231:0:16"},"scope":7114,"src":"3148:139:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6889,"nodeType":"Block","src":"3417:58:16","statements":[{"expression":{"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6883,"name":"runtimeDigests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"3427:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6885,"indexExpression":{"id":6884,"name":"runtimeDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"3442:13:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3427:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6886,"name":"isAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"3459:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3427:41:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6888,"nodeType":"ExpressionStatement","src":"3427:41:16"}]},"functionSelector":"4cf0d40a","id":6890,"implemented":true,"kind":"function","modifiers":[{"id":6881,"kind":"modifierInvocation","modifierName":{"id":6880,"name":"onlyOwner","nameLocations":["3407:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"3407:9:16"},"nodeType":"ModifierInvocation","src":"3407:9:16"}],"name":"setRuntimeDigest","nameLocation":"3342:16:16","nodeType":"FunctionDefinition","parameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6876,"mutability":"mutable","name":"runtimeDigest","nameLocation":"3367:13:16","nodeType":"VariableDeclaration","scope":6890,"src":"3359:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3359:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6878,"mutability":"mutable","name":"isAllowed","nameLocation":"3387:9:16","nodeType":"VariableDeclaration","scope":6890,"src":"3382:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6877,"name":"bool","nodeType":"ElementaryTypeName","src":"3382:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3358:39:16"},"returnParameters":{"id":6882,"nodeType":"ParameterList","parameters":[],"src":"3417:0:16"},"scope":7114,"src":"3333:142:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6905,"nodeType":"Block","src":"3594:53:16","statements":[{"expression":{"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6899,"name":"allowedKernels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"3604:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6901,"indexExpression":{"id":6900,"name":"kernelId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6892,"src":"3619:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3604:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6902,"name":"isAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"3631:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3604:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6904,"nodeType":"ExpressionStatement","src":"3604:36:16"}]},"functionSelector":"270e7c2f","id":6906,"implemented":true,"kind":"function","modifiers":[{"id":6897,"kind":"modifierInvocation","modifierName":{"id":6896,"name":"onlyOwner","nameLocations":["3584:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"3584:9:16"},"nodeType":"ModifierInvocation","src":"3584:9:16"}],"name":"setKernel","nameLocation":"3531:9:16","nodeType":"FunctionDefinition","parameters":{"id":6895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6892,"mutability":"mutable","name":"kernelId","nameLocation":"3549:8:16","nodeType":"VariableDeclaration","scope":6906,"src":"3541:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6891,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6894,"mutability":"mutable","name":"isAllowed","nameLocation":"3564:9:16","nodeType":"VariableDeclaration","scope":6906,"src":"3559:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6893,"name":"bool","nodeType":"ElementaryTypeName","src":"3559:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3540:34:16"},"returnParameters":{"id":6898,"nodeType":"ParameterList","parameters":[],"src":"3594:0:16"},"scope":7114,"src":"3522:125:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6917,"nodeType":"Block","src":"3783:52:16","statements":[{"expression":{"baseExpression":{"id":6913,"name":"allowedKernels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"3804:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6915,"indexExpression":{"id":6914,"name":"kernelId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"3819:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3804:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6912,"id":6916,"nodeType":"Return","src":"3797:31:16"}]},"functionSelector":"48d08eeb","id":6918,"implemented":true,"kind":"function","modifiers":[],"name":"isKernelAllowed","nameLocation":"3720:15:16","nodeType":"FunctionDefinition","parameters":{"id":6909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"mutability":"mutable","name":"kernelId","nameLocation":"3744:8:16","nodeType":"VariableDeclaration","scope":6918,"src":"3736:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6907,"name":"uint256","nodeType":"ElementaryTypeName","src":"3736:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3735:18:16"},"returnParameters":{"id":6912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6918,"src":"3777:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6910,"name":"bool","nodeType":"ElementaryTypeName","src":"3777:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3776:6:16"},"scope":7114,"src":"3711:124:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6930,"nodeType":"Block","src":"3885:86:16","statements":[{"expression":{"arguments":[{"baseExpression":{"id":6923,"name":"allowedKernels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"3903:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6925,"indexExpression":{"id":6924,"name":"kernelId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"3918:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3903:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4b65726e656c206973206e6f7420616c6c6f776564","id":6926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3929:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_67c619243893f24288fb3a170c86de4844f542cbee03c9dcf57333e036fb8b6e","typeString":"literal_string \"Kernel is not allowed\""},"value":"Kernel is not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67c619243893f24288fb3a170c86de4844f542cbee03c9dcf57333e036fb8b6e","typeString":"literal_string \"Kernel is not allowed\""}],"id":6922,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3895:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3895:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6928,"nodeType":"ExpressionStatement","src":"3895:58:16"},{"id":6929,"nodeType":"PlaceholderStatement","src":"3963:1:16"}]},"id":6931,"name":"onlyAllowedKernel","nameLocation":"3849:17:16","nodeType":"ModifierDefinition","parameters":{"id":6921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6920,"mutability":"mutable","name":"kernelId","nameLocation":"3875:8:16","nodeType":"VariableDeclaration","scope":6931,"src":"3867:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6919,"name":"uint256","nodeType":"ElementaryTypeName","src":"3867:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3866:18:16"},"src":"3840:131:16","virtual":false,"visibility":"internal"},{"body":{"id":6986,"nodeType":"Block","src":"4155:343:16","statements":[{"assignments":[6946,6948],"declarations":[{"constant":false,"id":6946,"mutability":"mutable","name":"success","nameLocation":"4167:7:16","nodeType":"VariableDeclaration","scope":6986,"src":"4162:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6945,"name":"bool","nodeType":"ElementaryTypeName","src":"4162:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6948,"mutability":"mutable","name":"data","nameLocation":"4189:4:16","nodeType":"VariableDeclaration","scope":6986,"src":"4176:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6947,"name":"bytes","nodeType":"ElementaryTypeName","src":"4176:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6957,"initialValue":{"arguments":[{"arguments":[{"hexValue":"6765744f70696e696f6e2875696e7432353629","id":6953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4254:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f8dd40aade312e8833ec716ac0e9f3736ee6d576375ed961c5d461a51685f9b","typeString":"literal_string \"getOpinion(uint256)\""},"value":"getOpinion(uint256)"},{"id":6954,"name":"kernelId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"4277:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4f8dd40aade312e8833ec716ac0e9f3736ee6d576375ed961c5d461a51685f9b","typeString":"literal_string \"getOpinion(uint256)\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6951,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4230:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4234:19:16","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"4230:23:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6949,"name":"opinionMaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"4197:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4210:10:16","memberName":"staticcall","nodeType":"MemberAccess","src":"4197:23:16","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:95:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4161:131:16"},{"expression":{"arguments":[{"id":6959,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"4306:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f70696e696f6e2072657472696576616c206661696c6564","id":6960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4315:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_a63f6dfaa20e14aac958698939f2a9eb105175d7b01a1a3cb744cdb8982cf431","typeString":"literal_string \"Opinion retrieval failed\""},"value":"Opinion retrieval failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a63f6dfaa20e14aac958698939f2a9eb105175d7b01a1a3cb744cdb8982cf431","typeString":"literal_string \"Opinion retrieval failed\""}],"id":6958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4298:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4298:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6962,"nodeType":"ExpressionStatement","src":"4298:44:16"},{"assignments":[6964,6966,6968],"declarations":[{"constant":false,"id":6964,"mutability":"mutable","name":"opinion","nameLocation":"4355:7:16","nodeType":"VariableDeclaration","scope":6986,"src":"4350:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6963,"name":"bool","nodeType":"ElementaryTypeName","src":"4350:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6966,"mutability":"mutable","name":"isFinalized","nameLocation":"4369:11:16","nodeType":"VariableDeclaration","scope":6986,"src":"4364:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6965,"name":"bool","nodeType":"ElementaryTypeName","src":"4364:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6968,"mutability":"mutable","name":"updatedPlan","nameLocation":"4395:11:16","nodeType":"VariableDeclaration","scope":6986,"src":"4382:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6967,"name":"bytes","nodeType":"ElementaryTypeName","src":"4382:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6980,"initialValue":{"arguments":[{"id":6971,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"4421:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4428:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":6972,"name":"bool","nodeType":"ElementaryTypeName","src":"4428:4:16","typeDescriptions":{}}},{"id":6975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4434:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":6974,"name":"bool","nodeType":"ElementaryTypeName","src":"4434:4:16","typeDescriptions":{}}},{"id":6977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4440:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6976,"name":"bytes","nodeType":"ElementaryTypeName","src":"4440:5:16","typeDescriptions":{}}}],"id":6978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4427:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_bool_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(bool),type(bool),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_bool_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(bool),type(bool),type(bytes storage pointer))"}],"expression":{"id":6969,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4410:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4414:6:16","memberName":"decode","nodeType":"MemberAccess","src":"4410:10:16","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4410:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4349:98:16"},{"expression":{"components":[{"id":6981,"name":"opinion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"4461:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6982,"name":"isFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"4470:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6983,"name":"updatedPlan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"4483:11:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4460:35:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bool,bytes memory)"}},"functionReturnParameters":6944,"id":6985,"nodeType":"Return","src":"4453:42:16"}]},"functionSelector":"4f8dd40a","id":6987,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6936,"name":"kernelId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"4106:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6937,"kind":"modifierInvocation","modifierName":{"id":6935,"name":"onlyAllowedKernel","nameLocations":["4088:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":6931,"src":"4088:17:16"},"nodeType":"ModifierInvocation","src":"4088:27:16"}],"name":"getOpinion","nameLocation":"4033:10:16","nodeType":"FunctionDefinition","parameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6933,"mutability":"mutable","name":"kernelId","nameLocation":"4052:8:16","nodeType":"VariableDeclaration","scope":6987,"src":"4044:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6932,"name":"uint256","nodeType":"ElementaryTypeName","src":"4044:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4043:18:16"},"returnParameters":{"id":6944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6987,"src":"4129:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6938,"name":"bool","nodeType":"ElementaryTypeName","src":"4129:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6987,"src":"4135:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6940,"name":"bool","nodeType":"ElementaryTypeName","src":"4135:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6987,"src":"4141:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6942,"name":"bytes","nodeType":"ElementaryTypeName","src":"4141:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4128:26:16"},"scope":7114,"src":"4024:474:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7112,"nodeType":"Block","src":"4848:1115:16","statements":[{"assignments":[7009],"declarations":[{"constant":false,"id":7009,"mutability":"mutable","name":"functionParamsDigest","nameLocation":"4866:20:16","nodeType":"VariableDeclaration","scope":7112,"src":"4858:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4858:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7016,"initialValue":{"arguments":[{"arguments":[{"id":7013,"name":"functionParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"4910:14:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":7011,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4899:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4903:6:16","memberName":"encode","nodeType":"MemberAccess","src":"4899:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4899:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7010,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4889:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4889:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4858:68:16"},{"assignments":[7018],"declarations":[{"constant":false,"id":7018,"mutability":"mutable","name":"kernelParamObjectsDigest","nameLocation":"4944:24:16","nodeType":"VariableDeclaration","scope":7112,"src":"4936:32:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4936:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7034,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7019,"name":"kernelParamObjects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"4971:18:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4990:6:16","memberName":"length","nodeType":"MemberAccess","src":"4971:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4999:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4971:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30","id":7031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5079:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5071:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5071:7:16","typeDescriptions":{}}},"id":7032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5071:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4971:110:16","trueExpression":{"arguments":[{"arguments":[{"id":7026,"name":"kernelParamObjects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"5036:18:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":7024,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5025:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5029:6:16","memberName":"encode","nodeType":"MemberAccess","src":"5025:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5025:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7023,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5015:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5015:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4936:145:16"},{"assignments":[7036],"declarations":[{"constant":false,"id":7036,"mutability":"mutable","name":"dataDigest","nameLocation":"5099:10:16","nodeType":"VariableDeclaration","scope":7112,"src":"5091:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5091:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7045,"initialValue":{"arguments":[{"arguments":[{"id":7040,"name":"functionParamsDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"5146:20:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7041,"name":"kernelParamObjectsDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"5168:24:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7042,"name":"senderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"5194:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7038,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5135:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5139:6:16","memberName":"encode","nodeType":"MemberAccess","src":"5135:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5135:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7037,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5112:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:106:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5091:127:16"},{"assignments":[7047],"declarations":[{"constant":false,"id":7047,"mutability":"mutable","name":"kernelResponsesDigest","nameLocation":"5236:21:16","nodeType":"VariableDeclaration","scope":7112,"src":"5228:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5228:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7055,"initialValue":{"arguments":[{"arguments":[{"id":7051,"name":"kernelResponses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"5281:15:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":7052,"name":"senderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"5298:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7049,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5270:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5274:6:16","memberName":"encode","nodeType":"MemberAccess","src":"5270:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5270:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7048,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5260:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5260:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5228:85:16"},{"assignments":[7057],"declarations":[{"constant":false,"id":7057,"mutability":"mutable","name":"kernelResponsesSignature","nameLocation":"5337:24:16","nodeType":"VariableDeclaration","scope":7112,"src":"5324:37:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7056,"name":"bytes","nodeType":"ElementaryTypeName","src":"5324:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7074,"initialValue":{"arguments":[{"expression":{"expression":{"id":7060,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5391:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5400:10:16","memberName":"SigningAlg","nodeType":"MemberAccess","referencedDeclaration":684,"src":"5391:19:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SigningAlg_$684_$","typeString":"type(enum Sapphire.SigningAlg)"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5411:27:16","memberName":"Secp256k1PrehashedKeccak256","nodeType":"MemberAccess","referencedDeclaration":679,"src":"5391:47:16","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"}},{"arguments":[{"expression":{"id":7065,"name":"signingKeypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"5469:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair storage ref"}},"id":7066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5484:7:16","memberName":"privKey","nodeType":"MemberAccess","referencedDeclaration":6649,"src":"5469:22:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"id":7063,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5452:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5456:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"5452:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5452:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":7070,"name":"kernelResponsesDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"5517:21:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7068,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5506:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5510:6:16","memberName":"encode","nodeType":"MemberAccess","src":"5506:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5506:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"","id":7072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7058,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5364:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5373:4:16","memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":973,"src":"5364:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_SigningAlg_$684_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum Sapphire.SigningAlg,bytes memory,bytes memory,bytes memory) view returns (bytes memory)"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5364:201:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5324:241:16"},{"assignments":[7076],"declarations":[{"constant":false,"id":7076,"mutability":"mutable","name":"nonce","nameLocation":"5584:5:16","nodeType":"VariableDeclaration","scope":7112,"src":"5576:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5576:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7085,"initialValue":{"arguments":[{"arguments":[{"hexValue":"3332","id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5621:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"hexValue":"","id":7082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5625:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7079,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5600:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5609:11:16","memberName":"randomBytes","nodeType":"MemberAccess","referencedDeclaration":715,"src":"5600:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,bytes memory) view returns (bytes memory)"}},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5600:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5592:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5592:7:16","typeDescriptions":{}}},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5592:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5576:53:16"},{"assignments":[7087],"declarations":[{"constant":false,"id":7087,"mutability":"mutable","name":"signatureToken","nameLocation":"5652:14:16","nodeType":"VariableDeclaration","scope":7112,"src":"5639:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7086,"name":"bytes","nodeType":"ElementaryTypeName","src":"5639:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7105,"initialValue":{"arguments":[{"expression":{"expression":{"id":7090,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5696:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5705:10:16","memberName":"SigningAlg","nodeType":"MemberAccess","referencedDeclaration":684,"src":"5696:19:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SigningAlg_$684_$","typeString":"type(enum Sapphire.SigningAlg)"}},"id":7092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5716:27:16","memberName":"Secp256k1PrehashedKeccak256","nodeType":"MemberAccess","referencedDeclaration":679,"src":"5696:47:16","typeDescriptions":{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"}},{"arguments":[{"expression":{"id":7095,"name":"signingKeypair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"5774:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Keypair_$6650_storage","typeString":"struct CustomTokenAuthority.Keypair storage ref"}},"id":7096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5789:7:16","memberName":"privKey","nodeType":"MemberAccess","referencedDeclaration":6649,"src":"5774:22:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"id":7093,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5757:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5761:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"5757:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5757:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":7100,"name":"dataDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"5822:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7101,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"5834:5:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7098,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5811:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5815:6:16","memberName":"encode","nodeType":"MemberAccess","src":"5811:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5811:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"","id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5854:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SigningAlg_$684","typeString":"enum Sapphire.SigningAlg"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7088,"name":"Sapphire","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5669:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Sapphire_$1072_$","typeString":"type(library Sapphire)"}},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5678:4:16","memberName":"sign","nodeType":"MemberAccess","referencedDeclaration":973,"src":"5669:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_SigningAlg_$684_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (enum Sapphire.SigningAlg,bytes memory,bytes memory,bytes memory) view returns (bytes memory)"}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5669:197:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5639:227:16"},{"expression":{"components":[{"id":7106,"name":"kernelResponsesSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"5885:24:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7107,"name":"kernelResponsesDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"5911:21:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7108,"name":"signatureToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"5934:14:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7109,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"5950:5:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5884:72:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes32_$","typeString":"tuple(bytes memory,bytes32,bytes memory,bytes32)"}},"functionReturnParameters":7007,"id":7111,"nodeType":"Return","src":"5877:79:16"}]},"functionSelector":"09eef4a5","id":7113,"implemented":true,"kind":"function","modifiers":[],"name":"sign","nameLocation":"4571:4:16","nodeType":"FunctionDefinition","parameters":{"id":6998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6989,"mutability":"mutable","name":"senderAddress","nameLocation":"4593:13:16","nodeType":"VariableDeclaration","scope":7113,"src":"4585:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6988,"name":"address","nodeType":"ElementaryTypeName","src":"4585:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7113,"src":"4616:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6990,"name":"bytes","nodeType":"ElementaryTypeName","src":"4616:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6993,"mutability":"mutable","name":"functionParams","nameLocation":"4675:14:16","nodeType":"VariableDeclaration","scope":7113,"src":"4660:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6992,"name":"bytes","nodeType":"ElementaryTypeName","src":"4660:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6995,"mutability":"mutable","name":"kernelParamObjects","nameLocation":"4714:18:16","nodeType":"VariableDeclaration","scope":7113,"src":"4699:33:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6994,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6997,"mutability":"mutable","name":"kernelResponses","nameLocation":"4757:15:16","nodeType":"VariableDeclaration","scope":7113,"src":"4742:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6996,"name":"bytes","nodeType":"ElementaryTypeName","src":"4742:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4575:203:16"},"returnParameters":{"id":7007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7113,"src":"4802:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6999,"name":"bytes","nodeType":"ElementaryTypeName","src":"4802:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7113,"src":"4816:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4816:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7113,"src":"4825:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7003,"name":"bytes","nodeType":"ElementaryTypeName","src":"4825:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7113,"src":"4839:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4839:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4801:46:16"},"scope":7114,"src":"4562:1401:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7115,"src":"374:5591:16","usedErrors":[24,80,144,1169,1174],"usedEvents":[1180]}],"src":"32:5934:16"},"id":16},"contracts/KRNL.sol":{"ast":{"absolutePath":"contracts/KRNL.sol","exportedSymbols":{"Context":[2089],"ERC20":[1955],"IERC20":[2033],"IERC20Errors":[1345],"IERC20Metadata":[2059],"KRNLTestToken":[7304],"Ownable":[1303]},"id":7305,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7116,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7305,"sourceUnit":1956,"src":"58:55:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7305,"sourceUnit":1304,"src":"114:52:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7119,"name":"ERC20","nameLocations":["194:5:17"],"nodeType":"IdentifierPath","referencedDeclaration":1955,"src":"194:5:17"},"id":7120,"nodeType":"InheritanceSpecifier","src":"194:5:17"},{"baseName":{"id":7121,"name":"Ownable","nameLocations":["201:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"201:7:17"},"id":7122,"nodeType":"InheritanceSpecifier","src":"201:7:17"}],"canonicalName":"KRNLTestToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7304,"linearizedBaseContracts":[7304,1303,1955,1345,2059,2033,2089],"name":"KRNLTestToken","nameLocation":"177:13:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"e56a7c5d","id":7126,"mutability":"mutable","name":"whitelist_","nameLocation":"247:10:17","nodeType":"VariableDeclaration","scope":7304,"src":"215:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7125,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7123,"name":"address","nodeType":"ElementaryTypeName","src":"223:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"215:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7124,"name":"bool","nodeType":"ElementaryTypeName","src":"234:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"c884ef83","id":7130,"mutability":"mutable","name":"claimed","nameLocation":"295:7:17","nodeType":"VariableDeclaration","scope":7304,"src":"263:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7129,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7127,"name":"address","nodeType":"ElementaryTypeName","src":"271:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"263:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7128,"name":"bool","nodeType":"ElementaryTypeName","src":"282:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"547cf1b6","id":7132,"mutability":"mutable","name":"distributionStarted_","nameLocation":"320:20:17","nodeType":"VariableDeclaration","scope":7304,"src":"308:32:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7131,"name":"bool","nodeType":"ElementaryTypeName","src":"308:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"anonymous":false,"eventSelector":"aab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54","id":7136,"name":"Whitelisted","nameLocation":"353:11:17","nodeType":"EventDefinition","parameters":{"id":7135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7134,"indexed":true,"mutability":"mutable","name":"_address","nameLocation":"381:8:17","nodeType":"VariableDeclaration","scope":7136,"src":"365:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7133,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"364:26:17"},"src":"347:44:17"},{"anonymous":false,"eventSelector":"896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430","id":7142,"name":"TokensClaimed","nameLocation":"402:13:17","nodeType":"EventDefinition","parameters":{"id":7141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7138,"indexed":true,"mutability":"mutable","name":"_address","nameLocation":"432:8:17","nodeType":"VariableDeclaration","scope":7142,"src":"416:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7137,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7140,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"450:6:17","nodeType":"VariableDeclaration","scope":7142,"src":"442:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7139,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"415:42:17"},"src":"396:62:17"},{"anonymous":false,"eventSelector":"caec521e84e0f554a179e69c042f43833410c17af29a4385f244c61e24d3759a","id":7144,"name":"DistributionStarted","nameLocation":"469:19:17","nodeType":"EventDefinition","parameters":{"id":7143,"nodeType":"ParameterList","parameters":[],"src":"488:2:17"},"src":"463:28:17"},{"anonymous":false,"eventSelector":"be5adf618cbdb160d8186c8f607a42f19897ec0d80fdbc9565484b3f09fba72f","id":7146,"name":"DistributionStopped","nameLocation":"502:19:17","nodeType":"EventDefinition","parameters":{"id":7145,"nodeType":"ParameterList","parameters":[],"src":"521:2:17"},"src":"496:28:17"},{"constant":true,"id":7149,"mutability":"constant","name":"CUSTOM_DECIMALS","nameLocation":"589:15:17","nodeType":"VariableDeclaration","scope":7304,"src":"566:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7147,"name":"uint8","nodeType":"ElementaryTypeName","src":"566:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"30","id":7148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"607:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"body":{"id":7166,"nodeType":"Block","src":"682:90:17","statements":[{"expression":{"arguments":[{"expression":{"id":7161,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"698:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"702:6:17","memberName":"sender","nodeType":"MemberAccess","src":"698:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31303030303030","id":7163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"710:7:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}],"id":7160,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"692:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"692:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7165,"nodeType":"ExpressionStatement","src":"692:26:17"}]},"id":7167,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4b524e4c205465737420546f6b656e","id":7152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"635:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_75951388b009d081a0291c388703fb0c43c93c8854c07f905e570b09f889851e","typeString":"literal_string \"KRNL Test Token\""},"value":"KRNL Test Token"},{"hexValue":"4b524e4c","id":7153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"654:6:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed472323133a560ad0015d3c4ff8eb4e07664abb1a99321f7393ba1641e64a2e","typeString":"literal_string \"KRNL\""},"value":"KRNL"}],"id":7154,"kind":"baseConstructorSpecifier","modifierName":{"id":7151,"name":"ERC20","nameLocations":["629:5:17"],"nodeType":"IdentifierPath","referencedDeclaration":1955,"src":"629:5:17"},"nodeType":"ModifierInvocation","src":"629:32:17"},{"arguments":[{"expression":{"id":7156,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"670:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"674:6:17","memberName":"sender","nodeType":"MemberAccess","src":"670:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7158,"kind":"baseConstructorSpecifier","modifierName":{"id":7155,"name":"Ownable","nameLocations":["662:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"662:7:17"},"nodeType":"ModifierInvocation","src":"662:19:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7150,"nodeType":"ParameterList","parameters":[],"src":"626:2:17"},"returnParameters":{"id":7159,"nodeType":"ParameterList","parameters":[],"src":"682:0:17"},"scope":7304,"src":"615:157:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1519],"body":{"id":7175,"nodeType":"Block","src":"843:39:17","statements":[{"expression":{"id":7173,"name":"CUSTOM_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"860:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7172,"id":7174,"nodeType":"Return","src":"853:22:17"}]},"functionSelector":"313ce567","id":7176,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"787:8:17","nodeType":"FunctionDefinition","overrides":{"id":7169,"nodeType":"OverrideSpecifier","overrides":[],"src":"818:8:17"},"parameters":{"id":7168,"nodeType":"ParameterList","parameters":[],"src":"795:2:17"},"returnParameters":{"id":7172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7176,"src":"836:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7170,"name":"uint8","nodeType":"ElementaryTypeName","src":"836:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"835:7:17"},"scope":7304,"src":"778:104:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":7193,"nodeType":"Block","src":"947:80:17","statements":[{"expression":{"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7183,"name":"whitelist_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"957:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7185,"indexExpression":{"id":7184,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7178,"src":"968:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"957:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"980:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"957:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7188,"nodeType":"ExpressionStatement","src":"957:27:17"},{"eventCall":{"arguments":[{"id":7190,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7178,"src":"1011:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7189,"name":"Whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"999:11:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"999:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7192,"nodeType":"EmitStatement","src":"994:26:17"}]},"functionSelector":"e43252d7","id":7194,"implemented":true,"kind":"function","modifiers":[{"id":7181,"kind":"modifierInvocation","modifierName":{"id":7180,"name":"onlyOwner","nameLocations":["937:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"937:9:17"},"nodeType":"ModifierInvocation","src":"937:9:17"}],"name":"addToWhitelist","nameLocation":"897:14:17","nodeType":"FunctionDefinition","parameters":{"id":7179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7178,"mutability":"mutable","name":"_address","nameLocation":"920:8:17","nodeType":"VariableDeclaration","scope":7194,"src":"912:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7177,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"911:18:17"},"returnParameters":{"id":7182,"nodeType":"ParameterList","parameters":[],"src":"947:0:17"},"scope":7304,"src":"888:139:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7229,"nodeType":"Block","src":"1110:166:17","statements":[{"body":{"id":7227,"nodeType":"Block","src":"1168:102:17","statements":[{"expression":{"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7213,"name":"whitelist_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"1182:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7217,"indexExpression":{"baseExpression":{"id":7214,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"1193:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7216,"indexExpression":{"id":7215,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"1204:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1193:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1182:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1210:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1182:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7220,"nodeType":"ExpressionStatement","src":"1182:32:17"},{"eventCall":{"arguments":[{"baseExpression":{"id":7222,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"1245:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7224,"indexExpression":{"id":7223,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"1256:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1245:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7221,"name":"Whitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"1233:11:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1233:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7226,"nodeType":"EmitStatement","src":"1228:31:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"1140:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7207,"name":"_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"1144:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1155:6:17","memberName":"length","nodeType":"MemberAccess","src":"1144:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1140:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7228,"initializationExpression":{"assignments":[7203],"declarations":[{"constant":false,"id":7203,"mutability":"mutable","name":"i","nameLocation":"1133:1:17","nodeType":"VariableDeclaration","scope":7228,"src":"1125:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7205,"initialValue":{"hexValue":"30","id":7204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1137:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1125:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1163:3:17","subExpression":{"id":7210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"1163:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7212,"nodeType":"ExpressionStatement","src":"1163:3:17"},"nodeType":"ForStatement","src":"1120:150:17"}]},"functionSelector":"a6177139","id":7230,"implemented":true,"kind":"function","modifiers":[{"id":7200,"kind":"modifierInvocation","modifierName":{"id":7199,"name":"onlyOwner","nameLocations":["1100:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"1100:9:17"},"nodeType":"ModifierInvocation","src":"1100:9:17"}],"name":"addToWhitelistBatch","nameLocation":"1042:19:17","nodeType":"FunctionDefinition","parameters":{"id":7198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7197,"mutability":"mutable","name":"_addresses","nameLocation":"1081:10:17","nodeType":"VariableDeclaration","scope":7230,"src":"1062:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7195,"name":"address","nodeType":"ElementaryTypeName","src":"1062:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7196,"nodeType":"ArrayTypeName","src":"1062:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1061:31:17"},"returnParameters":{"id":7201,"nodeType":"ParameterList","parameters":[],"src":"1110:0:17"},"scope":7304,"src":"1033:243:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7242,"nodeType":"Block","src":"1328:80:17","statements":[{"expression":{"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7235,"name":"distributionStarted_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"1338:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1361:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1338:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7238,"nodeType":"ExpressionStatement","src":"1338:27:17"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7239,"name":"DistributionStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"1380:19:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7241,"nodeType":"EmitStatement","src":"1375:26:17"}]},"functionSelector":"d83623dd","id":7243,"implemented":true,"kind":"function","modifiers":[{"id":7233,"kind":"modifierInvocation","modifierName":{"id":7232,"name":"onlyOwner","nameLocations":["1318:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"1318:9:17"},"nodeType":"ModifierInvocation","src":"1318:9:17"}],"name":"startDistribution","nameLocation":"1291:17:17","nodeType":"FunctionDefinition","parameters":{"id":7231,"nodeType":"ParameterList","parameters":[],"src":"1308:2:17"},"returnParameters":{"id":7234,"nodeType":"ParameterList","parameters":[],"src":"1328:0:17"},"scope":7304,"src":"1282:126:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7255,"nodeType":"Block","src":"1459:81:17","statements":[{"expression":{"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7248,"name":"distributionStarted_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"1469:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1492:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1469:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7251,"nodeType":"ExpressionStatement","src":"1469:28:17"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7252,"name":"DistributionStopped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"1512:19:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1512:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7254,"nodeType":"EmitStatement","src":"1507:26:17"}]},"functionSelector":"dffbbef5","id":7256,"implemented":true,"kind":"function","modifiers":[{"id":7246,"kind":"modifierInvocation","modifierName":{"id":7245,"name":"onlyOwner","nameLocations":["1449:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"1449:9:17"},"nodeType":"ModifierInvocation","src":"1449:9:17"}],"name":"stopDistribution","nameLocation":"1423:16:17","nodeType":"FunctionDefinition","parameters":{"id":7244,"nodeType":"ParameterList","parameters":[],"src":"1439:2:17"},"returnParameters":{"id":7247,"nodeType":"ParameterList","parameters":[],"src":"1459:0:17"},"scope":7304,"src":"1414:126:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7302,"nodeType":"Block","src":"1576:367:17","statements":[{"expression":{"arguments":[{"id":7260,"name":"distributionStarted_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"1594:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446973747269627574696f6e206e6f742073746172746564","id":7261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1616:26:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_76614ed82fda349607e35cb97e7c43b5f79722cb8db0721af4eff4569cb9d47c","typeString":"literal_string \"Distribution not started\""},"value":"Distribution not started"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76614ed82fda349607e35cb97e7c43b5f79722cb8db0721af4eff4569cb9d47c","typeString":"literal_string \"Distribution not started\""}],"id":7259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1586:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1586:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7263,"nodeType":"ExpressionStatement","src":"1586:57:17"},{"expression":{"arguments":[{"baseExpression":{"id":7265,"name":"whitelist_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"1661:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7268,"indexExpression":{"expression":{"id":7266,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1672:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1676:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1672:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1661:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f6e2077686974656c697374","id":7269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1685:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_0bf2fdbec3bb8c1695b691634bbc243f3c96dec283b5c7e6130c63076a9db813","typeString":"literal_string \"Not on whitelist\""},"value":"Not on whitelist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0bf2fdbec3bb8c1695b691634bbc243f3c96dec283b5c7e6130c63076a9db813","typeString":"literal_string \"Not on whitelist\""}],"id":7264,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1653:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1653:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7271,"nodeType":"ExpressionStatement","src":"1653:51:17"},{"expression":{"arguments":[{"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1722:20:17","subExpression":{"baseExpression":{"id":7273,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"1723:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7276,"indexExpression":{"expression":{"id":7274,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1731:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1735:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1731:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1723:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e7320616c726561647920636c61696d6564","id":7278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1744:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c0b89f4fb2200cb971cc72da0b4203780034112e935423892813b2b23e72a14b","typeString":"literal_string \"Tokens already claimed\""},"value":"Tokens already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c0b89f4fb2200cb971cc72da0b4203780034112e935423892813b2b23e72a14b","typeString":"literal_string \"Tokens already claimed\""}],"id":7272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1714:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1714:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7280,"nodeType":"ExpressionStatement","src":"1714:55:17"},{"expression":{"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7281,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"1780:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7284,"indexExpression":{"expression":{"id":7282,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1788:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1792:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1788:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1780:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1802:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1780:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7287,"nodeType":"ExpressionStatement","src":"1780:26:17"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7289,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"1826:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7291,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1835:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1839:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1835:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31303030","id":7293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1847:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"id":7288,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"1816:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7295,"nodeType":"ExpressionStatement","src":"1816:36:17"},{"eventCall":{"arguments":[{"expression":{"id":7297,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1919:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1923:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1919:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31303030","id":7299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1931:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"id":7296,"name":"TokensClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"1905:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1905:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7301,"nodeType":"EmitStatement","src":"1900:36:17"}]},"functionSelector":"48c54b9d","id":7303,"implemented":true,"kind":"function","modifiers":[],"name":"claimTokens","nameLocation":"1555:11:17","nodeType":"FunctionDefinition","parameters":{"id":7257,"nodeType":"ParameterList","parameters":[],"src":"1566:2:17"},"returnParameters":{"id":7258,"nodeType":"ParameterList","parameters":[],"src":"1576:0:17"},"scope":7304,"src":"1546:397:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7305,"src":"168:1777:17","usedErrors":[1169,1174,1315,1320,1325,1334,1339,1344],"usedEvents":[1180,1967,1976,7136,7142,7144,7146]}],"src":"32:1914:17"},"id":17},"contracts/KrnlRegistered.sol":{"ast":{"absolutePath":"contracts/KrnlRegistered.sol","exportedSymbols":{"ECDSA":[2809],"KrnlPayload":[7319],"KrnlRegistered":[7521],"MessageHashUtils":[2883],"Ownable":[1303]},"id":7522,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":7306,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"39:24:18"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7308,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7522,"sourceUnit":1304,"src":"65:67:18","symbolAliases":[{"foreign":{"id":7307,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"73:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":7310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7522,"sourceUnit":2810,"src":"133:75:18","symbolAliases":[{"foreign":{"id":7309,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"141:5:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":7312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7522,"sourceUnit":2884,"src":"209:97:18","symbolAliases":[{"foreign":{"id":7311,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"217:16:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"KrnlPayload","id":7319,"members":[{"constant":false,"id":7314,"mutability":"mutable","name":"auth","nameLocation":"373:4:18","nodeType":"VariableDeclaration","scope":7319,"src":"367:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7313,"name":"bytes","nodeType":"ElementaryTypeName","src":"367:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7316,"mutability":"mutable","name":"kernelResponses","nameLocation":"389:15:18","nodeType":"VariableDeclaration","scope":7319,"src":"383:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7315,"name":"bytes","nodeType":"ElementaryTypeName","src":"383:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7318,"mutability":"mutable","name":"kernelParamObjects","nameLocation":"416:18:18","nodeType":"VariableDeclaration","scope":7319,"src":"410:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7317,"name":"bytes","nodeType":"ElementaryTypeName","src":"410:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"KrnlPayload","nameLocation":"349:11:18","nodeType":"StructDefinition","scope":7522,"src":"342:95:18","visibility":"public"},{"abstract":false,"baseContracts":[{"baseName":{"id":7320,"name":"Ownable","nameLocations":["483:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"483:7:18"},"id":7321,"nodeType":"InheritanceSpecifier","src":"483:7:18"}],"canonicalName":"KrnlRegistered","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7521,"linearizedBaseContracts":[7521,1303,2089],"name":"KrnlRegistered","nameLocation":"465:14:18","nodeType":"ContractDefinition","nodes":[{"errorSelector":"d94a6fce","id":7323,"name":"UnauthorizedTransaction","nameLocation":"503:23:18","nodeType":"ErrorDefinition","parameters":{"id":7322,"nodeType":"ParameterList","parameters":[],"src":"526:2:18"},"src":"497:32:18"},{"constant":false,"functionSelector":"4ba1cfe4","id":7325,"mutability":"mutable","name":"tokenAuthorityPublicKey","nameLocation":"550:23:18","nodeType":"VariableDeclaration","scope":7521,"src":"535:38:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7324,"name":"address","nodeType":"ElementaryTypeName","src":"535:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"909dd263","id":7329,"mutability":"mutable","name":"executed","nameLocation":"609:8:18","nodeType":"VariableDeclaration","scope":7521,"src":"579:38:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_bool_$","typeString":"mapping(bytes => bool)"},"typeName":{"id":7328,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7326,"name":"bytes","nodeType":"ElementaryTypeName","src":"587:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"579:22:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_bool_$","typeString":"mapping(bytes => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7327,"name":"bool","nodeType":"ElementaryTypeName","src":"596:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":7347,"nodeType":"Block","src":"701:126:18","statements":[{"condition":{"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"715:35:18","subExpression":{"arguments":[{"id":7337,"name":"krnlPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"730:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_KrnlPayload_$7319_memory_ptr","typeString":"struct KrnlPayload memory"}},{"id":7338,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7334,"src":"743:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_KrnlPayload_$7319_memory_ptr","typeString":"struct KrnlPayload memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7336,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"716:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_KrnlPayload_$7319_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (struct KrnlPayload memory,bytes memory) returns (bool)"}},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"716:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7345,"nodeType":"IfStatement","src":"711:98:18","trueBody":{"id":7344,"nodeType":"Block","src":"752:57:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7341,"name":"UnauthorizedTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"773:23:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"773:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7343,"nodeType":"RevertStatement","src":"766:32:18"}]}},{"id":7346,"nodeType":"PlaceholderStatement","src":"819:1:18"}]},"id":7348,"name":"onlyAuthorized","nameLocation":"633:14:18","nodeType":"ModifierDefinition","parameters":{"id":7335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7332,"mutability":"mutable","name":"krnlPayload","nameLocation":"667:11:18","nodeType":"VariableDeclaration","scope":7348,"src":"648:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_KrnlPayload_$7319_memory_ptr","typeString":"struct KrnlPayload"},"typeName":{"id":7331,"nodeType":"UserDefinedTypeName","pathNode":{"id":7330,"name":"KrnlPayload","nameLocations":["648:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":7319,"src":"648:11:18"},"referencedDeclaration":7319,"src":"648:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_KrnlPayload_$7319_storage_ptr","typeString":"struct KrnlPayload"}},"visibility":"internal"},{"constant":false,"id":7334,"mutability":"mutable","name":"params","nameLocation":"693:6:18","nodeType":"VariableDeclaration","scope":7348,"src":"680:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7333,"name":"bytes","nodeType":"ElementaryTypeName","src":"680:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"647:53:18"},"src":"624:203:18","virtual":false,"visibility":"internal"},{"body":{"id":7361,"nodeType":"Block","src":"899:67:18","statements":[{"expression":{"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7357,"name":"tokenAuthorityPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"909:23:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7358,"name":"_tokenAuthorityPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"935:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"909:50:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7360,"nodeType":"ExpressionStatement","src":"909:50:18"}]},"id":7362,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7353,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"887:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"891:6:18","memberName":"sender","nodeType":"MemberAccess","src":"887:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7355,"kind":"baseConstructorSpecifier","modifierName":{"id":7352,"name":"Ownable","nameLocations":["879:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"879:7:18"},"nodeType":"ModifierInvocation","src":"879:19:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7350,"mutability":"mutable","name":"_tokenAuthorityPublicKey","nameLocation":"853:24:18","nodeType":"VariableDeclaration","scope":7362,"src":"845:32:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7349,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"844:34:18"},"returnParameters":{"id":7356,"nodeType":"ParameterList","parameters":[],"src":"899:0:18"},"scope":7521,"src":"833:133:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7373,"nodeType":"Block","src":"1061:67:18","statements":[{"expression":{"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7369,"name":"tokenAuthorityPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"1071:23:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7370,"name":"_tokenAuthorityPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"1097:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1071:50:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7372,"nodeType":"ExpressionStatement","src":"1071:50:18"}]},"functionSelector":"d213d86b","id":7374,"implemented":true,"kind":"function","modifiers":[{"id":7367,"kind":"modifierInvocation","modifierName":{"id":7366,"name":"onlyOwner","nameLocations":["1051:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"1051:9:18"},"nodeType":"ModifierInvocation","src":"1051:9:18"}],"name":"setTokenAuthorityPublicKey","nameLocation":"981:26:18","nodeType":"FunctionDefinition","parameters":{"id":7365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7364,"mutability":"mutable","name":"_tokenAuthorityPublicKey","nameLocation":"1016:24:18","nodeType":"VariableDeclaration","scope":7374,"src":"1008:32:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7363,"name":"address","nodeType":"ElementaryTypeName","src":"1008:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1007:34:18"},"returnParameters":{"id":7368,"nodeType":"ParameterList","parameters":[],"src":"1061:0:18"},"scope":7521,"src":"972:156:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7519,"nodeType":"Block","src":"1233:1509:18","statements":[{"assignments":[7385,7387,7389,7391],"declarations":[{"constant":false,"id":7385,"mutability":"mutable","name":"kernelResponsesSignature","nameLocation":"1270:24:18","nodeType":"VariableDeclaration","scope":7519,"src":"1257:37:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7384,"name":"bytes","nodeType":"ElementaryTypeName","src":"1257:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7387,"mutability":"mutable","name":"kernelParamObjectsDigest","nameLocation":"1316:24:18","nodeType":"VariableDeclaration","scope":7519,"src":"1308:32:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1308:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7389,"mutability":"mutable","name":"signatureToken","nameLocation":"1367:14:18","nodeType":"VariableDeclaration","scope":7519,"src":"1354:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7388,"name":"bytes","nodeType":"ElementaryTypeName","src":"1354:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7391,"mutability":"mutable","name":"nonce","nameLocation":"1403:5:18","nodeType":"VariableDeclaration","scope":7519,"src":"1395:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1395:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7406,"initialValue":{"arguments":[{"expression":{"id":7394,"name":"krnlPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"1432:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_KrnlPayload_$7319_memory_ptr","typeString":"struct KrnlPayload memory"}},"id":7395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1444:4:18","memberName":"auth","nodeType":"MemberAccess","referencedDeclaration":7314,"src":"1432:16:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":7397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1451:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7396,"name":"bytes","nodeType":"ElementaryTypeName","src":"1451:5:18","typeDescriptions":{}}},{"id":7399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1458:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1458:7:18","typeDescriptions":{}}},{"id":7401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1467:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7400,"name":"bytes","nodeType":"ElementaryTypeName","src":"1467:5:18","typeDescriptions":{}}},{"id":7403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1474:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1474:7:18","typeDescriptions":{}}}],"id":7404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1450:32:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(bytes storage pointer),type(bytes32),type(bytes storage pointer),type(bytes32))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(bytes storage pointer),type(bytes32),type(bytes storage pointer),type(bytes32))"}],"expression":{"id":7392,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1421:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1425:6:18","memberName":"decode","nodeType":"MemberAccess","src":"1421:10:18","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1421:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes32_$","typeString":"tuple(bytes memory,bytes32,bytes memory,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"1243:240:18"},{"condition":{"baseExpression":{"id":7407,"name":"executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"1498:8:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_bool_$","typeString":"mapping(bytes memory => bool)"}},"id":7409,"indexExpression":{"id":7408,"name":"signatureToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"1507:14:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1498:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7413,"nodeType":"IfStatement","src":"1494:67:18","trueBody":{"id":7412,"nodeType":"Block","src":"1524:37:18","statements":[{"expression":{"hexValue":"66616c7365","id":7410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1545:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7383,"id":7411,"nodeType":"Return","src":"1538:12:18"}]}},{"assignments":[7415],"declarations":[{"constant":false,"id":7415,"mutability":"mutable","name":"kernelResponsesDigest","nameLocation":"1579:21:18","nodeType":"VariableDeclaration","scope":7519,"src":"1571:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1571:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7425,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":7419,"name":"krnlPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"1624:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_KrnlPayload_$7319_memory_ptr","typeString":"struct KrnlPayload memory"}},"id":7420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1636:15:18","memberName":"kernelResponses","nodeType":"MemberAccess","referencedDeclaration":7316,"src":"1624:27:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":7421,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1653:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1657:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1653:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7417,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1613:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1617:6:18","memberName":"encode","nodeType":"MemberAccess","src":"1613:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1613:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7416,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1603:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1571:94:18"},{"assignments":[7427],"declarations":[{"constant":false,"id":7427,"mutability":"mutable","name":"ethSignedKernelResponsesDigest","nameLocation":"1683:30:18","nodeType":"VariableDeclaration","scope":7519,"src":"1675:38:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1675:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7432,"initialValue":{"arguments":[{"id":7430,"name":"kernelResponsesDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"1756:21:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7428,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"1716:16:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2883_$","typeString":"type(library MessageHashUtils)"}},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:18","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":2824,"src":"1716:39:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1675:103:18"},{"assignments":[7434],"declarations":[{"constant":false,"id":7434,"mutability":"mutable","name":"recoveredAddress","nameLocation":"1796:16:18","nodeType":"VariableDeclaration","scope":7519,"src":"1788:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7433,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7440,"initialValue":{"arguments":[{"id":7437,"name":"ethSignedKernelResponsesDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"1829:30:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7438,"name":"kernelResponsesSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"1861:24:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7435,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"1815:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2809_$","typeString":"type(library ECDSA)"}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1821:7:18","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"1815:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1815:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1788:98:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7441,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"1900:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7442,"name":"tokenAuthorityPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"1920:23:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1900:43:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7447,"nodeType":"IfStatement","src":"1896:86:18","trueBody":{"id":7446,"nodeType":"Block","src":"1945:37:18","statements":[{"expression":{"hexValue":"66616c7365","id":7444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1966:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7383,"id":7445,"nodeType":"Return","src":"1959:12:18"}]}},{"assignments":[7449],"declarations":[{"constant":false,"id":7449,"mutability":"mutable","name":"calculatedKernelParamObjectsDigest","nameLocation":"2000:34:18","nodeType":"VariableDeclaration","scope":7519,"src":"1992:42:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1992:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7459,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":7453,"name":"krnlPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"2058:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_KrnlPayload_$7319_memory_ptr","typeString":"struct KrnlPayload memory"}},"id":7454,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2070:18:18","memberName":"kernelParamObjects","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"2058:30:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":7455,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2090:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2094:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2090:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7451,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2047:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2051:6:18","memberName":"encode","nodeType":"MemberAccess","src":"2047:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:54:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7450,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2037:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2037:65:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1992:110:18"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7460,"name":"calculatedKernelParamObjectsDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"2116:34:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7461,"name":"kernelParamObjectsDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"2154:24:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2116:62:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7466,"nodeType":"IfStatement","src":"2112:105:18","trueBody":{"id":7465,"nodeType":"Block","src":"2180:37:18","statements":[{"expression":{"hexValue":"66616c7365","id":7463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2201:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7383,"id":7464,"nodeType":"Return","src":"2194:12:18"}]}},{"assignments":[7468],"declarations":[{"constant":false,"id":7468,"mutability":"mutable","name":"functionParamsDigest","nameLocation":"2235:20:18","nodeType":"VariableDeclaration","scope":7519,"src":"2227:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2227:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7475,"initialValue":{"arguments":[{"arguments":[{"id":7472,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"2279:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7470,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2268:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2272:6:18","memberName":"encode","nodeType":"MemberAccess","src":"2268:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2268:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7469,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2258:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2227:60:18"},{"assignments":[7477],"declarations":[{"constant":false,"id":7477,"mutability":"mutable","name":"dataDigest","nameLocation":"2306:10:18","nodeType":"VariableDeclaration","scope":7519,"src":"2298:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2298:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7488,"initialValue":{"arguments":[{"arguments":[{"id":7481,"name":"functionParamsDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"2340:20:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7482,"name":"kernelParamObjectsDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"2362:24:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7483,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2388:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2392:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2388:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7485,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"2400:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7479,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2329:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2333:6:18","memberName":"encode","nodeType":"MemberAccess","src":"2329:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2329:77:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7478,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2319:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2319:88:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2298:109:18"},{"assignments":[7490],"declarations":[{"constant":false,"id":7490,"mutability":"mutable","name":"ethSignedDataDigest","nameLocation":"2425:19:18","nodeType":"VariableDeclaration","scope":7519,"src":"2417:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2417:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7495,"initialValue":{"arguments":[{"id":7493,"name":"dataDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"2487:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7491,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"2447:16:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2883_$","typeString":"type(library MessageHashUtils)"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2464:22:18","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":2824,"src":"2447:39:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2417:81:18"},{"expression":{"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7496,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"2508:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7499,"name":"ethSignedDataDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"2541:19:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7500,"name":"signatureToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"2562:14:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7497,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"2527:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2809_$","typeString":"type(library ECDSA)"}},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2533:7:18","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"2527:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2527:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2508:69:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7503,"nodeType":"ExpressionStatement","src":"2508:69:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7504,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"2591:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7505,"name":"tokenAuthorityPublicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"2611:23:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2591:43:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7510,"nodeType":"IfStatement","src":"2587:86:18","trueBody":{"id":7509,"nodeType":"Block","src":"2636:37:18","statements":[{"expression":{"hexValue":"66616c7365","id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2657:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7383,"id":7508,"nodeType":"Return","src":"2650:12:18"}]}},{"expression":{"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7511,"name":"executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7329,"src":"2683:8:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_bool_$","typeString":"mapping(bytes memory => bool)"}},"id":7513,"indexExpression":{"id":7512,"name":"signatureToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"2692:14:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2683:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2710:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2683:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7516,"nodeType":"ExpressionStatement","src":"2683:31:18"},{"expression":{"hexValue":"74727565","id":7517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2731:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7383,"id":7518,"nodeType":"Return","src":"2724:11:18"}]},"id":7520,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"1143:13:18","nodeType":"FunctionDefinition","parameters":{"id":7380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7377,"mutability":"mutable","name":"krnlPayload","nameLocation":"1176:11:18","nodeType":"VariableDeclaration","scope":7520,"src":"1157:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_KrnlPayload_$7319_memory_ptr","typeString":"struct KrnlPayload"},"typeName":{"id":7376,"nodeType":"UserDefinedTypeName","pathNode":{"id":7375,"name":"KrnlPayload","nameLocations":["1157:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":7319,"src":"1157:11:18"},"referencedDeclaration":7319,"src":"1157:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_KrnlPayload_$7319_storage_ptr","typeString":"struct KrnlPayload"}},"visibility":"internal"},{"constant":false,"id":7379,"mutability":"mutable","name":"params","nameLocation":"1202:6:18","nodeType":"VariableDeclaration","scope":7520,"src":"1189:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7378,"name":"bytes","nodeType":"ElementaryTypeName","src":"1189:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1156:53:18"},"returnParameters":{"id":7383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7520,"src":"1227:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7381,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1226:6:18"},"scope":7521,"src":"1134:1608:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":7522,"src":"456:2288:18","usedErrors":[1169,1174,7323],"usedEvents":[1180]}],"src":"39:2705:18"},"id":18}},"contracts":{"@oasisprotocol/sapphire-contracts/contracts/EthereumUtils.sol":{"EthereumUtils":{"abi":[{"inputs":[],"name":"DER_Split_Error","type":"error"},{"inputs":[],"name":"expmod_Error","type":"error"},{"inputs":[],"name":"k256Decompress_Invalid_Length_Error","type":"error"},{"inputs":[],"name":"k256DeriveY_Invalid_Prefix_Error","type":"error"},{"inputs":[],"name":"recoverV_Error","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201e2e744787e4d9bbe4d6c441bede937672f0c5fb4780eee1eabd791ae1a865e664736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0x2E PUSH21 0x4787E4D9BBE4D6C441BEDE937672F0C5FB4780EEE1 0xEA 0xBD PUSH26 0x1AE1A865E664736F6C6343000818003300000000000000000000 ","sourceMap":"177:8189:0:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201e2e744787e4d9bbe4d6c441bede937672f0c5fb4780eee1eabd791ae1a865e664736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0x2E PUSH21 0x4787E4D9BBE4D6C441BEDE937672F0C5FB4780EEE1 0xEA 0xBD PUSH26 0x1AE1A865E664736F6C6343000818003300000000000000000000 ","sourceMap":"177:8189:0:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DER_Split_Error\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"expmod_Error\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"k256Decompress_Invalid_Length_Error\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"k256DeriveY_Invalid_Prefix_Error\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"recoverV_Error\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@oasisprotocol/sapphire-contracts/contracts/EthereumUtils.sol\":\"EthereumUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@oasisprotocol/sapphire-contracts/contracts/EthereumUtils.sol\":{\"keccak256\":\"0x79e34844793f4a8970d31eb4cbdd91e060fb93da4cbd28b7b8aad5c22e1f6666\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f40fdf3c56b34ded8ba2e810e9464eafdd184a29031c5322cb8ff33ca0f4a8ef\",\"dweb:/ipfs/QmRC1fBpi7yETwN2ZxeDf1ZBgtwRiHWzQ1DYfUJ2jxWkok\"]},\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":{\"keccak256\":\"0x81a0aa5766f7c48ea799114f44e902b2eb11f21808db23d56b6ca9edd48b8f59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a94bd0c5263e98788d38bf7b6c24781dac3df4d5cb14045f70d14e208719c292\",\"dweb:/ipfs/QmZKEwnG9a9uPbgWCPVcbW7WGTy53Su6P1DTV95goPs4yU\"]}},\"version\":1}"}},"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol":{"Sapphire":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212209f6a9da70de1af66a49ceef5c21a7d0c0f4313834597fa60ab27c3a76e9d3d6464736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 PUSH11 0x9DA70DE1AF66A49CEEF5C2 BYTE PUSH30 0xC0F4313834597FA60AB27C3A76E9D3D6464736F6C634300081800330000 ","sourceMap":"1117:18823:1:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212209f6a9da70de1af66a49ceef5c21a7d0c0f4313834597fa60ab27c3a76e9d3d6464736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 PUSH11 0x9DA70DE1AF66A49CEEF5C2 BYTE PUSH30 0xC0F4313834597FA60AB27C3A76E9D3D6464736F6C634300081800330000 ","sourceMap":"1117:18823:1:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Sapphire\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library provides a number of convenient wrappers for cryptographic operations such as the x25519 key derivation, Deoxys-II-based encryption and decryption, signing key generation, message digest signing and verification, gas padding and hashing. Most of the mentioned functions are implemented as Sapphire's precompiles and are cheap to call. #### Calling Precompiles Manually You can override the wrappers and call Sapphire precompiles by dispatching calls to specific well-known contract addresses, as described below. The __Precompile address__ section of each function will show you the address of the corresponding precompile. Input parameters should be packed into a contiguous memory region with each chunk of data padded to 32 bytes as usual. The recommended way to construct parameter byte sequences in Solidity is with `abi.encode` and `abi.decode`, which will transparently handle things like putting `bytes` lengths in the correct position.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":\"Sapphire\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":{\"keccak256\":\"0x81a0aa5766f7c48ea799114f44e902b2eb11f21808db23d56b6ca9edd48b8f59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a94bd0c5263e98788d38bf7b6c24781dac3df4d5cb14045f70d14e208719c292\",\"dweb:/ipfs/QmZKEwnG9a9uPbgWCPVcbW7WGTy53Su6P1DTV95goPs4yU\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203b3afa1277119b640488d4eee45831b9e219afa7ba9b7e447d9596cc7aa3884d64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE GASPRICE STATICCALL SLT PUSH24 0x119B640488D4EEE45831B9E219AFA7BA9B7E447D9596CC7A LOG3 DUP9 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"657:1315:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203b3afa1277119b640488d4eee45831b9e219afa7ba9b7e447d9596cc7aa3884d64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE GASPRICE STATICCALL SLT PUSH24 0x119B640488D4EEE45831B9E219AFA7BA9B7E447D9596CC7A LOG3 DUP9 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"657:1315:8:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b2eaa8a807a92cdde5d4434da261225a4cac3809197b0fe6a98ad07fc222663c64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xEA 0xA8 0xA8 SMOD 0xA9 0x2C 0xDD 0xE5 0xD4 NUMBER 0x4D LOG2 PUSH2 0x225A 0x4C 0xAC CODESIZE MULMOD NOT PUSH28 0xFE6A98AD07FC222663C64736F6C6343000818003300000000000000 ","sourceMap":"251:3680:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b2eaa8a807a92cdde5d4434da261225a4cac3809197b0fe6a98ad07fc222663c64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xEA 0xA8 0xA8 SMOD 0xA9 0x2C 0xDD 0xE5 0xD4 NUMBER 0x4D LOG2 PUSH2 0x225A 0x4C 0xAC CODESIZE MULMOD NOT PUSH28 0xFE6A98AD07FC222663C64736F6C6343000818003300000000000000 ","sourceMap":"251:3680:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201053a7c72002399eec557de2bd4dc17a1325a524723784b3fefa16d162a61d2864736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT MSTORE8 0xA7 0xC7 KECCAK256 MUL CODECOPY SWAP15 0xEC SSTORE PUSH30 0xE2BD4DC17A1325A524723784B3FEFA16D162A61D2864736F6C6343000818 STOP CALLER ","sourceMap":"344:7470:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201053a7c72002399eec557de2bd4dc17a1325a524723784b3fefa16d162a61d2864736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT MSTORE8 0xA7 0xC7 KECCAK256 MUL CODECOPY SWAP15 0xEC SSTORE PUSH30 0xE2BD4DC17A1325A524723784B3FEFA16D162A61D2864736F6C6343000818 STOP CALLER ","sourceMap":"344:7470:10:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122094288dd340bba1c8facc2ae74bf38d685105e44d165ac549bd3ebfed835c049464736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x28 DUP14 0xD3 BLOCKHASH 0xBB LOG1 0xC8 STATICCALL 0xCC 0x2A 0xE7 0x4B RETURN DUP14 PUSH9 0x5105E44D165AC549BD RETURNDATACOPY 0xBF 0xED DUP4 TLOAD DIV SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"521:3181:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122094288dd340bba1c8facc2ae74bf38d685105e44d165ac549bd3ebfed835c049464736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x28 DUP14 0xD3 BLOCKHASH 0xBB LOG1 0xC8 STATICCALL 0xCC 0x2A 0xE7 0x4B RETURN DUP14 PUSH9 0x5105E44D165AC549BD RETURNDATACOPY 0xBF 0xED DUP4 TLOAD DIV SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"521:3181:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122008301281ac317d5014882eff4b72125b7f18ad1492d93937b59d4626856123f664736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD ADDRESS SLT DUP2 0xAC BALANCE PUSH30 0x5014882EFF4B72125B7F18AD1492D93937B59D4626856123F664736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:28026:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122008301281ac317d5014882eff4b72125b7f18ad1492d93937b59d4626856123f664736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD ADDRESS SLT DUP2 0xAC BALANCE PUSH30 0x5014882EFF4B72125B7F18AD1492D93937B59D4626856123F664736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:28026:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202e098a98f74c1e6dd1f85ca476023c8aca86f42fe4998906afaf05c2d14039e764736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E MULMOD DUP11 SWAP9 0xF7 0x4C 0x1E PUSH14 0xD1F85CA476023C8ACA86F42FE499 DUP10 MOD 0xAF 0xAF SDIV 0xC2 0xD1 BLOCKHASH CODECOPY 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"769:34173:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202e098a98f74c1e6dd1f85ca476023c8aca86f42fe4998906afaf05c2d14039e764736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E MULMOD DUP11 SWAP9 0xF7 0x4C 0x1E PUSH14 0xD1F85CA476023C8ACA86F42FE499 DUP10 MOD 0xAF 0xAF SDIV 0xC2 0xD1 BLOCKHASH CODECOPY 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"769:34173:13:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201af8d1ad17d8f489f18bc1f77d76e6216bb00fc2d3dfcbdfdabee8a90f2f622b64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xF8 0xD1 0xAD OR 0xD8 DELEGATECALL DUP10 CALL DUP12 0xC1 0xF7 PUSH30 0x76E6216BB00FC2D3DFCBDFDABEE8A90F2F622B64736F6C63430008180033 ","sourceMap":"258:2354:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201af8d1ad17d8f489f18bc1f77d76e6216bb00fc2d3dfcbdfdabee8a90f2f622b64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xF8 0xD1 0xAD OR 0xD8 DELEGATECALL DUP10 CALL DUP12 0xC1 0xF7 PUSH30 0x76E6216BB00FC2D3DFCBDFDABEE8A90F2F622B64736F6C63430008180033 ","sourceMap":"258:2354:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/CustomOpinionMaker.sol":{"CustomOpinionMaker":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes","name":"executionPlan","type":"bytes"},{"internalType":"uint256","name":"kernelId","type":"uint256"}],"name":"getOpinion","outputs":[{"internalType":"bool","name":"opinion","type":"bool"},{"internalType":"bool","name":"isFinalized","type":"bool"},{"internalType":"bytes","name":"updatedPlan","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346100bb57601f61089d38819003918201601f19168301916001600160401b038311848410176100c0578084926020946040528339810103126100bb57516001600160a01b0390818116908190036100bb5780156100a257600080546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36107c690816100d78239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe604060a0815260048036101561001457600080fd5b600091823560e01c80636e93bb3914610165578063715018a6146101085780638da5cb5b146100dc5763f2fde38b1461004c57600080fd5b346100d85760203660031901126100d8576001600160a01b038235818116939192908490036100d45761007d610671565b83156100be57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b838234610104578160031936011261010457905490516001600160a01b039091168152602090f35b5080fd5b8334610162578060031936011261016257610121610671565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5090346100d857816003193601126100d85780359167ffffffffffffffff6080526080518311610625573660238401121561062557828201359060805182116100d457602491840182810191368311610621578335956101c3610671565b879688966020928381870312610619578781013590608051821161061d5701866043820112156106195787810135956080518711610607578660051b9786519761020f878b018a6106cf565b8852858801916044839a850101938285116105355760448101935b85851061056657505050505050895b85518110156105545761024c8187610759565b518381511461025e5750600101610239565b60019a91939495969798999a948581146000146103fb5750858101519087828051810103126103f7578780610294898501610783565b93015191015187818051810103126103f357876102b19101610783565b90826103e8575b50816103e0575b50156103d6575082975b86516000198101929083116103c557505081146103bb575b6102ed60609186610759565b510152959192955b8151938285019082808701525180915260609384860191858160051b8801019991925b81841061035c575050505090829161033e8561035897989903601f1981018752866106cf565b81519788971515885215159087015285015283019061064c565b0390f35b909192998480600192605f198b82030185528651908a806103a36103916080865186528787015190808988015286019061064c565b8d80870151908683039087015261064c565b9301511515910152950192019a019299919091610318565b90965086906102e1565b634e487b7160e01b8c52601190528afd5b97985082986102c9565b9050386102bf565b6064109150386102b8565b8d80fd5b8c80fd5b91999160021461040c575b506102c9565b85819a929a01518051810187810191888183031261053557888101519060805182116105505701918291608093849103126105355789519361044d8561069d565b828a01516001600160a01b039390848116810361054a5786526104718c8201610783565b948b870195865260609182810151608051811161054257810185603f8201121561054257808f918f0151966104a5886106f1565b926104b2815194856106cf565b8884528883010111610539578f968f91886104d09385019101610629565b858901520151908601520151888180518101031261053557886104f39101610783565b915115159283610528575b505081610520575b5015610516575082975b38610406565b9798508298610510565b905038610506565b51161515915038806104fe565b8e80fd5b50505050508f80fd5b505050508f80fd5b50508f80fd5b8f80fd5b505050909193509591959493946102f5565b84356080518111610602578201906080828503601f190112610602578a519161058e8361069d565b60448101358352606481013560805181116105fb578660446105b29284010161070d565b8b84015260848101359060805182116105fb576105d687604460a49484010161070d565b8d850152013590811515820361054a57828b939260608594015281520194019361022a565b5050508f80fd5b508f80fd5b634e487b7160e01b8c5260418352888cfd5b8a80fd5b8b80fd5b8680fd5b8380fd5b60005b83811061063c5750506000910152565b818101518382015260200161062c565b9060209161066581518092818552858086019101610629565b601f01601f1916010190565b6000546001600160a01b0316330361068557565b60405163118cdaa760e01b8152336004820152602490fd5b6080810190811067ffffffffffffffff8211176106b957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176106b957604052565b67ffffffffffffffff81116106b957601f01601f191660200190565b81601f8201121561075457803590610724826106f1565b9261073260405194856106cf565b8284526020838301011161075457816000926020809301838601378301015290565b600080fd5b805182101561076d5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b519081151582036107545756fea264697066735822122089b12d507768abad8ff772c9dd4d356704ec2963f4034cb2467e2ee4b2dc675a64736f6c63430008180033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xBB JUMPI PUSH1 0x1F PUSH2 0x89D CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xC0 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xBB JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xBB JUMPI DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP4 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x7C6 SWAP1 DUP2 PUSH2 0xD7 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x40 PUSH1 0xA0 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E93BB39 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDC JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0xD4 JUMPI PUSH2 0x7D PUSH2 0x671 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xBE JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x104 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x104 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x162 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI PUSH2 0x121 PUSH2 0x671 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0xD8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xD8 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD DUP4 GT PUSH2 0x625 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x625 JUMPI DUP3 DUP3 ADD CALLDATALOAD SWAP1 PUSH1 0x80 MLOAD DUP3 GT PUSH2 0xD4 JUMPI PUSH1 0x24 SWAP2 DUP5 ADD DUP3 DUP2 ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x621 JUMPI DUP4 CALLDATALOAD SWAP6 PUSH2 0x1C3 PUSH2 0x671 JUMP JUMPDEST DUP8 SWAP7 DUP9 SWAP7 PUSH1 0x20 SWAP3 DUP4 DUP2 DUP8 SUB SLT PUSH2 0x619 JUMPI DUP8 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 MLOAD DUP3 GT PUSH2 0x61D JUMPI ADD DUP7 PUSH1 0x43 DUP3 ADD SLT ISZERO PUSH2 0x619 JUMPI DUP8 DUP2 ADD CALLDATALOAD SWAP6 PUSH1 0x80 MLOAD DUP8 GT PUSH2 0x607 JUMPI DUP7 PUSH1 0x5 SHL SWAP8 DUP7 MLOAD SWAP8 PUSH2 0x20F DUP8 DUP12 ADD DUP11 PUSH2 0x6CF JUMP JUMPDEST DUP9 MSTORE DUP6 DUP9 ADD SWAP2 PUSH1 0x44 DUP4 SWAP11 DUP6 ADD ADD SWAP4 DUP3 DUP6 GT PUSH2 0x535 JUMPI PUSH1 0x44 DUP2 ADD SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x566 JUMPI POP POP POP POP POP POP DUP10 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x554 JUMPI PUSH2 0x24C DUP2 DUP8 PUSH2 0x759 JUMP JUMPDEST MLOAD DUP4 DUP2 MLOAD EQ PUSH2 0x25E JUMPI POP PUSH1 0x1 ADD PUSH2 0x239 JUMP JUMPDEST PUSH1 0x1 SWAP11 SWAP2 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 SWAP5 DUP6 DUP2 EQ PUSH1 0x0 EQ PUSH2 0x3FB JUMPI POP DUP6 DUP2 ADD MLOAD SWAP1 DUP8 DUP3 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x3F7 JUMPI DUP8 DUP1 PUSH2 0x294 DUP10 DUP6 ADD PUSH2 0x783 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP2 ADD MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x3F3 JUMPI DUP8 PUSH2 0x2B1 SWAP2 ADD PUSH2 0x783 JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x3E8 JUMPI JUMPDEST POP DUP2 PUSH2 0x3E0 JUMPI JUMPDEST POP ISZERO PUSH2 0x3D6 JUMPI POP DUP3 SWAP8 JUMPDEST DUP7 MLOAD PUSH1 0x0 NOT DUP2 ADD SWAP3 SWAP1 DUP4 GT PUSH2 0x3C5 JUMPI POP POP DUP2 EQ PUSH2 0x3BB JUMPI JUMPDEST PUSH2 0x2ED PUSH1 0x60 SWAP2 DUP7 PUSH2 0x759 JUMP JUMPDEST MLOAD ADD MSTORE SWAP6 SWAP2 SWAP3 SWAP6 JUMPDEST DUP2 MLOAD SWAP4 DUP3 DUP6 ADD SWAP1 DUP3 DUP1 DUP8 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 SWAP4 DUP5 DUP7 ADD SWAP2 DUP6 DUP2 PUSH1 0x5 SHL DUP9 ADD ADD SWAP10 SWAP2 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x35C JUMPI POP POP POP POP SWAP1 DUP3 SWAP2 PUSH2 0x33E DUP6 PUSH2 0x358 SWAP8 SWAP9 SWAP10 SUB PUSH1 0x1F NOT DUP2 ADD DUP8 MSTORE DUP7 PUSH2 0x6CF JUMP JUMPDEST DUP2 MLOAD SWAP8 DUP9 SWAP8 ISZERO ISZERO DUP9 MSTORE ISZERO ISZERO SWAP1 DUP8 ADD MSTORE DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x64C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP10 DUP5 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x5F NOT DUP12 DUP3 SUB ADD DUP6 MSTORE DUP7 MLOAD SWAP1 DUP11 DUP1 PUSH2 0x3A3 PUSH2 0x391 PUSH1 0x80 DUP7 MLOAD DUP7 MSTORE DUP8 DUP8 ADD MLOAD SWAP1 DUP1 DUP10 DUP9 ADD MSTORE DUP7 ADD SWAP1 PUSH2 0x64C JUMP JUMPDEST DUP14 DUP1 DUP8 ADD MLOAD SWAP1 DUP7 DUP4 SUB SWAP1 DUP8 ADD MSTORE PUSH2 0x64C JUMP JUMPDEST SWAP4 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP6 ADD SWAP3 ADD SWAP11 ADD SWAP3 SWAP10 SWAP2 SWAP1 SWAP2 PUSH2 0x318 JUMP JUMPDEST SWAP1 SWAP7 POP DUP7 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x11 SWAP1 MSTORE DUP11 REVERT JUMPDEST SWAP8 SWAP9 POP DUP3 SWAP9 PUSH2 0x2C9 JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x64 LT SWAP2 POP CODESIZE PUSH2 0x2B8 JUMP JUMPDEST DUP14 DUP1 REVERT JUMPDEST DUP13 DUP1 REVERT JUMPDEST SWAP2 SWAP10 SWAP2 PUSH1 0x2 EQ PUSH2 0x40C JUMPI JUMPDEST POP PUSH2 0x2C9 JUMP JUMPDEST DUP6 DUP2 SWAP11 SWAP3 SWAP11 ADD MLOAD DUP1 MLOAD DUP2 ADD DUP8 DUP2 ADD SWAP2 DUP9 DUP2 DUP4 SUB SLT PUSH2 0x535 JUMPI DUP9 DUP2 ADD MLOAD SWAP1 PUSH1 0x80 MLOAD DUP3 GT PUSH2 0x550 JUMPI ADD SWAP2 DUP3 SWAP2 PUSH1 0x80 SWAP4 DUP5 SWAP2 SUB SLT PUSH2 0x535 JUMPI DUP10 MLOAD SWAP4 PUSH2 0x44D DUP6 PUSH2 0x69D JUMP JUMPDEST DUP3 DUP11 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 DUP5 DUP2 AND DUP2 SUB PUSH2 0x54A JUMPI DUP7 MSTORE PUSH2 0x471 DUP13 DUP3 ADD PUSH2 0x783 JUMP JUMPDEST SWAP5 DUP12 DUP8 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 SWAP2 DUP3 DUP2 ADD MLOAD PUSH1 0x80 MLOAD DUP2 GT PUSH2 0x542 JUMPI DUP2 ADD DUP6 PUSH1 0x3F DUP3 ADD SLT ISZERO PUSH2 0x542 JUMPI DUP1 DUP16 SWAP2 DUP16 ADD MLOAD SWAP7 PUSH2 0x4A5 DUP9 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 PUSH2 0x4B2 DUP2 MLOAD SWAP5 DUP6 PUSH2 0x6CF JUMP JUMPDEST DUP9 DUP5 MSTORE DUP9 DUP4 ADD ADD GT PUSH2 0x539 JUMPI DUP16 SWAP7 DUP16 SWAP2 DUP9 PUSH2 0x4D0 SWAP4 DUP6 ADD SWAP2 ADD PUSH2 0x629 JUMP JUMPDEST DUP6 DUP10 ADD MSTORE ADD MLOAD SWAP1 DUP7 ADD MSTORE ADD MLOAD DUP9 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x535 JUMPI DUP9 PUSH2 0x4F3 SWAP2 ADD PUSH2 0x783 JUMP JUMPDEST SWAP2 MLOAD ISZERO ISZERO SWAP3 DUP4 PUSH2 0x528 JUMPI JUMPDEST POP POP DUP2 PUSH2 0x520 JUMPI JUMPDEST POP ISZERO PUSH2 0x516 JUMPI POP DUP3 SWAP8 JUMPDEST CODESIZE PUSH2 0x406 JUMP JUMPDEST SWAP8 SWAP9 POP DUP3 SWAP9 PUSH2 0x510 JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x506 JUMP JUMPDEST MLOAD AND ISZERO ISZERO SWAP2 POP CODESIZE DUP1 PUSH2 0x4FE JUMP JUMPDEST DUP15 DUP1 REVERT JUMPDEST POP POP POP POP POP DUP16 DUP1 REVERT JUMPDEST POP POP POP POP DUP16 DUP1 REVERT JUMPDEST POP POP DUP16 DUP1 REVERT JUMPDEST DUP16 DUP1 REVERT JUMPDEST POP POP POP SWAP1 SWAP2 SWAP4 POP SWAP6 SWAP2 SWAP6 SWAP5 SWAP4 SWAP5 PUSH2 0x2F5 JUMP JUMPDEST DUP5 CALLDATALOAD PUSH1 0x80 MLOAD DUP2 GT PUSH2 0x602 JUMPI DUP3 ADD SWAP1 PUSH1 0x80 DUP3 DUP6 SUB PUSH1 0x1F NOT ADD SLT PUSH2 0x602 JUMPI DUP11 MLOAD SWAP2 PUSH2 0x58E DUP4 PUSH2 0x69D JUMP JUMPDEST PUSH1 0x44 DUP2 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x64 DUP2 ADD CALLDATALOAD PUSH1 0x80 MLOAD DUP2 GT PUSH2 0x5FB JUMPI DUP7 PUSH1 0x44 PUSH2 0x5B2 SWAP3 DUP5 ADD ADD PUSH2 0x70D JUMP JUMPDEST DUP12 DUP5 ADD MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 MLOAD DUP3 GT PUSH2 0x5FB JUMPI PUSH2 0x5D6 DUP8 PUSH1 0x44 PUSH1 0xA4 SWAP5 DUP5 ADD ADD PUSH2 0x70D JUMP JUMPDEST DUP14 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x54A JUMPI DUP3 DUP12 SWAP4 SWAP3 PUSH1 0x60 DUP6 SWAP5 ADD MSTORE DUP2 MSTORE ADD SWAP5 ADD SWAP4 PUSH2 0x22A JUMP JUMPDEST POP POP POP DUP16 DUP1 REVERT JUMPDEST POP DUP16 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 DUP4 MSTORE DUP9 DUP13 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x63C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x62C JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x665 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x685 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6B9 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x754 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x724 DUP3 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 PUSH2 0x732 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x6CF JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x754 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x76D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x754 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xB1 0x2D POP PUSH24 0x68ABAD8FF772C9DD4D356704EC2963F4034CB2467E2EE4B2 0xDC PUSH8 0x5A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"175:2376:15:-:0;;;;;;;;;;;;;-1:-1:-1;;175:2376:15;;;;-1:-1:-1;;;;;175:2376:15;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;175:2376:15;;;;;;;;;;1273:26:2;;1269:95;;-1:-1:-1;175:2376:15;;-1:-1:-1;;;;;;175:2376:15;;;;;;;;;;;3052:40:2;;-1:-1:-1;3052:40:2;175:2376:15;;;;;;;1269:95:2;175:2376:15;;-1:-1:-1;;;1322:31:2;;-1:-1:-1;1322:31:2;;;175:2376:15;;;1322:31:2;175:2376:15;-1:-1:-1;175:2376:15;;;;;;-1:-1:-1;175:2376:15;;;;;-1:-1:-1;175:2376:15"},"deployedBytecode":{"functionDebugData":{"abi_decode_bool_fromMemory":{"entryPoint":1923,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1805,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":1612,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1777,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1577,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1743,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_8633":{"entryPoint":1693,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":1649,"id":1240,"parameterSlots":0,"returnSlots":0},"memory_array_index_access_struct_Execution_dyn":{"entryPoint":1881,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"604060a0815260048036101561001457600080fd5b600091823560e01c80636e93bb3914610165578063715018a6146101085780638da5cb5b146100dc5763f2fde38b1461004c57600080fd5b346100d85760203660031901126100d8576001600160a01b038235818116939192908490036100d45761007d610671565b83156100be57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b838234610104578160031936011261010457905490516001600160a01b039091168152602090f35b5080fd5b8334610162578060031936011261016257610121610671565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5090346100d857816003193601126100d85780359167ffffffffffffffff6080526080518311610625573660238401121561062557828201359060805182116100d457602491840182810191368311610621578335956101c3610671565b879688966020928381870312610619578781013590608051821161061d5701866043820112156106195787810135956080518711610607578660051b9786519761020f878b018a6106cf565b8852858801916044839a850101938285116105355760448101935b85851061056657505050505050895b85518110156105545761024c8187610759565b518381511461025e5750600101610239565b60019a91939495969798999a948581146000146103fb5750858101519087828051810103126103f7578780610294898501610783565b93015191015187818051810103126103f357876102b19101610783565b90826103e8575b50816103e0575b50156103d6575082975b86516000198101929083116103c557505081146103bb575b6102ed60609186610759565b510152959192955b8151938285019082808701525180915260609384860191858160051b8801019991925b81841061035c575050505090829161033e8561035897989903601f1981018752866106cf565b81519788971515885215159087015285015283019061064c565b0390f35b909192998480600192605f198b82030185528651908a806103a36103916080865186528787015190808988015286019061064c565b8d80870151908683039087015261064c565b9301511515910152950192019a019299919091610318565b90965086906102e1565b634e487b7160e01b8c52601190528afd5b97985082986102c9565b9050386102bf565b6064109150386102b8565b8d80fd5b8c80fd5b91999160021461040c575b506102c9565b85819a929a01518051810187810191888183031261053557888101519060805182116105505701918291608093849103126105355789519361044d8561069d565b828a01516001600160a01b039390848116810361054a5786526104718c8201610783565b948b870195865260609182810151608051811161054257810185603f8201121561054257808f918f0151966104a5886106f1565b926104b2815194856106cf565b8884528883010111610539578f968f91886104d09385019101610629565b858901520151908601520151888180518101031261053557886104f39101610783565b915115159283610528575b505081610520575b5015610516575082975b38610406565b9798508298610510565b905038610506565b51161515915038806104fe565b8e80fd5b50505050508f80fd5b505050508f80fd5b50508f80fd5b8f80fd5b505050909193509591959493946102f5565b84356080518111610602578201906080828503601f190112610602578a519161058e8361069d565b60448101358352606481013560805181116105fb578660446105b29284010161070d565b8b84015260848101359060805182116105fb576105d687604460a49484010161070d565b8d850152013590811515820361054a57828b939260608594015281520194019361022a565b5050508f80fd5b508f80fd5b634e487b7160e01b8c5260418352888cfd5b8a80fd5b8b80fd5b8680fd5b8380fd5b60005b83811061063c5750506000910152565b818101518382015260200161062c565b9060209161066581518092818552858086019101610629565b601f01601f1916010190565b6000546001600160a01b0316330361068557565b60405163118cdaa760e01b8152336004820152602490fd5b6080810190811067ffffffffffffffff8211176106b957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176106b957604052565b67ffffffffffffffff81116106b957601f01601f191660200190565b81601f8201121561075457803590610724826106f1565b9261073260405194856106cf565b8284526020838301011161075457816000926020809301838601378301015290565b600080fd5b805182101561076d5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b519081151582036107545756fea264697066735822122089b12d507768abad8ff772c9dd4d356704ec2963f4034cb2467e2ee4b2dc675a64736f6c63430008180033","opcodes":"PUSH1 0x40 PUSH1 0xA0 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E93BB39 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDC JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0xD4 JUMPI PUSH2 0x7D PUSH2 0x671 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xBE JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x104 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x104 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x162 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI PUSH2 0x121 PUSH2 0x671 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0xD8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xD8 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD DUP4 GT PUSH2 0x625 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x625 JUMPI DUP3 DUP3 ADD CALLDATALOAD SWAP1 PUSH1 0x80 MLOAD DUP3 GT PUSH2 0xD4 JUMPI PUSH1 0x24 SWAP2 DUP5 ADD DUP3 DUP2 ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x621 JUMPI DUP4 CALLDATALOAD SWAP6 PUSH2 0x1C3 PUSH2 0x671 JUMP JUMPDEST DUP8 SWAP7 DUP9 SWAP7 PUSH1 0x20 SWAP3 DUP4 DUP2 DUP8 SUB SLT PUSH2 0x619 JUMPI DUP8 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 MLOAD DUP3 GT PUSH2 0x61D JUMPI ADD DUP7 PUSH1 0x43 DUP3 ADD SLT ISZERO PUSH2 0x619 JUMPI DUP8 DUP2 ADD CALLDATALOAD SWAP6 PUSH1 0x80 MLOAD DUP8 GT PUSH2 0x607 JUMPI DUP7 PUSH1 0x5 SHL SWAP8 DUP7 MLOAD SWAP8 PUSH2 0x20F DUP8 DUP12 ADD DUP11 PUSH2 0x6CF JUMP JUMPDEST DUP9 MSTORE DUP6 DUP9 ADD SWAP2 PUSH1 0x44 DUP4 SWAP11 DUP6 ADD ADD SWAP4 DUP3 DUP6 GT PUSH2 0x535 JUMPI PUSH1 0x44 DUP2 ADD SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x566 JUMPI POP POP POP POP POP POP DUP10 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x554 JUMPI PUSH2 0x24C DUP2 DUP8 PUSH2 0x759 JUMP JUMPDEST MLOAD DUP4 DUP2 MLOAD EQ PUSH2 0x25E JUMPI POP PUSH1 0x1 ADD PUSH2 0x239 JUMP JUMPDEST PUSH1 0x1 SWAP11 SWAP2 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 SWAP5 DUP6 DUP2 EQ PUSH1 0x0 EQ PUSH2 0x3FB JUMPI POP DUP6 DUP2 ADD MLOAD SWAP1 DUP8 DUP3 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x3F7 JUMPI DUP8 DUP1 PUSH2 0x294 DUP10 DUP6 ADD PUSH2 0x783 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP2 ADD MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x3F3 JUMPI DUP8 PUSH2 0x2B1 SWAP2 ADD PUSH2 0x783 JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x3E8 JUMPI JUMPDEST POP DUP2 PUSH2 0x3E0 JUMPI JUMPDEST POP ISZERO PUSH2 0x3D6 JUMPI POP DUP3 SWAP8 JUMPDEST DUP7 MLOAD PUSH1 0x0 NOT DUP2 ADD SWAP3 SWAP1 DUP4 GT PUSH2 0x3C5 JUMPI POP POP DUP2 EQ PUSH2 0x3BB JUMPI JUMPDEST PUSH2 0x2ED PUSH1 0x60 SWAP2 DUP7 PUSH2 0x759 JUMP JUMPDEST MLOAD ADD MSTORE SWAP6 SWAP2 SWAP3 SWAP6 JUMPDEST DUP2 MLOAD SWAP4 DUP3 DUP6 ADD SWAP1 DUP3 DUP1 DUP8 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 SWAP4 DUP5 DUP7 ADD SWAP2 DUP6 DUP2 PUSH1 0x5 SHL DUP9 ADD ADD SWAP10 SWAP2 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x35C JUMPI POP POP POP POP SWAP1 DUP3 SWAP2 PUSH2 0x33E DUP6 PUSH2 0x358 SWAP8 SWAP9 SWAP10 SUB PUSH1 0x1F NOT DUP2 ADD DUP8 MSTORE DUP7 PUSH2 0x6CF JUMP JUMPDEST DUP2 MLOAD SWAP8 DUP9 SWAP8 ISZERO ISZERO DUP9 MSTORE ISZERO ISZERO SWAP1 DUP8 ADD MSTORE DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x64C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP10 DUP5 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x5F NOT DUP12 DUP3 SUB ADD DUP6 MSTORE DUP7 MLOAD SWAP1 DUP11 DUP1 PUSH2 0x3A3 PUSH2 0x391 PUSH1 0x80 DUP7 MLOAD DUP7 MSTORE DUP8 DUP8 ADD MLOAD SWAP1 DUP1 DUP10 DUP9 ADD MSTORE DUP7 ADD SWAP1 PUSH2 0x64C JUMP JUMPDEST DUP14 DUP1 DUP8 ADD MLOAD SWAP1 DUP7 DUP4 SUB SWAP1 DUP8 ADD MSTORE PUSH2 0x64C JUMP JUMPDEST SWAP4 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP6 ADD SWAP3 ADD SWAP11 ADD SWAP3 SWAP10 SWAP2 SWAP1 SWAP2 PUSH2 0x318 JUMP JUMPDEST SWAP1 SWAP7 POP DUP7 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x11 SWAP1 MSTORE DUP11 REVERT JUMPDEST SWAP8 SWAP9 POP DUP3 SWAP9 PUSH2 0x2C9 JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x64 LT SWAP2 POP CODESIZE PUSH2 0x2B8 JUMP JUMPDEST DUP14 DUP1 REVERT JUMPDEST DUP13 DUP1 REVERT JUMPDEST SWAP2 SWAP10 SWAP2 PUSH1 0x2 EQ PUSH2 0x40C JUMPI JUMPDEST POP PUSH2 0x2C9 JUMP JUMPDEST DUP6 DUP2 SWAP11 SWAP3 SWAP11 ADD MLOAD DUP1 MLOAD DUP2 ADD DUP8 DUP2 ADD SWAP2 DUP9 DUP2 DUP4 SUB SLT PUSH2 0x535 JUMPI DUP9 DUP2 ADD MLOAD SWAP1 PUSH1 0x80 MLOAD DUP3 GT PUSH2 0x550 JUMPI ADD SWAP2 DUP3 SWAP2 PUSH1 0x80 SWAP4 DUP5 SWAP2 SUB SLT PUSH2 0x535 JUMPI DUP10 MLOAD SWAP4 PUSH2 0x44D DUP6 PUSH2 0x69D JUMP JUMPDEST DUP3 DUP11 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 DUP5 DUP2 AND DUP2 SUB PUSH2 0x54A JUMPI DUP7 MSTORE PUSH2 0x471 DUP13 DUP3 ADD PUSH2 0x783 JUMP JUMPDEST SWAP5 DUP12 DUP8 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 SWAP2 DUP3 DUP2 ADD MLOAD PUSH1 0x80 MLOAD DUP2 GT PUSH2 0x542 JUMPI DUP2 ADD DUP6 PUSH1 0x3F DUP3 ADD SLT ISZERO PUSH2 0x542 JUMPI DUP1 DUP16 SWAP2 DUP16 ADD MLOAD SWAP7 PUSH2 0x4A5 DUP9 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 PUSH2 0x4B2 DUP2 MLOAD SWAP5 DUP6 PUSH2 0x6CF JUMP JUMPDEST DUP9 DUP5 MSTORE DUP9 DUP4 ADD ADD GT PUSH2 0x539 JUMPI DUP16 SWAP7 DUP16 SWAP2 DUP9 PUSH2 0x4D0 SWAP4 DUP6 ADD SWAP2 ADD PUSH2 0x629 JUMP JUMPDEST DUP6 DUP10 ADD MSTORE ADD MLOAD SWAP1 DUP7 ADD MSTORE ADD MLOAD DUP9 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x535 JUMPI DUP9 PUSH2 0x4F3 SWAP2 ADD PUSH2 0x783 JUMP JUMPDEST SWAP2 MLOAD ISZERO ISZERO SWAP3 DUP4 PUSH2 0x528 JUMPI JUMPDEST POP POP DUP2 PUSH2 0x520 JUMPI JUMPDEST POP ISZERO PUSH2 0x516 JUMPI POP DUP3 SWAP8 JUMPDEST CODESIZE PUSH2 0x406 JUMP JUMPDEST SWAP8 SWAP9 POP DUP3 SWAP9 PUSH2 0x510 JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x506 JUMP JUMPDEST MLOAD AND ISZERO ISZERO SWAP2 POP CODESIZE DUP1 PUSH2 0x4FE JUMP JUMPDEST DUP15 DUP1 REVERT JUMPDEST POP POP POP POP POP DUP16 DUP1 REVERT JUMPDEST POP POP POP POP DUP16 DUP1 REVERT JUMPDEST POP POP DUP16 DUP1 REVERT JUMPDEST DUP16 DUP1 REVERT JUMPDEST POP POP POP SWAP1 SWAP2 SWAP4 POP SWAP6 SWAP2 SWAP6 SWAP5 SWAP4 SWAP5 PUSH2 0x2F5 JUMP JUMPDEST DUP5 CALLDATALOAD PUSH1 0x80 MLOAD DUP2 GT PUSH2 0x602 JUMPI DUP3 ADD SWAP1 PUSH1 0x80 DUP3 DUP6 SUB PUSH1 0x1F NOT ADD SLT PUSH2 0x602 JUMPI DUP11 MLOAD SWAP2 PUSH2 0x58E DUP4 PUSH2 0x69D JUMP JUMPDEST PUSH1 0x44 DUP2 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x64 DUP2 ADD CALLDATALOAD PUSH1 0x80 MLOAD DUP2 GT PUSH2 0x5FB JUMPI DUP7 PUSH1 0x44 PUSH2 0x5B2 SWAP3 DUP5 ADD ADD PUSH2 0x70D JUMP JUMPDEST DUP12 DUP5 ADD MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 MLOAD DUP3 GT PUSH2 0x5FB JUMPI PUSH2 0x5D6 DUP8 PUSH1 0x44 PUSH1 0xA4 SWAP5 DUP5 ADD ADD PUSH2 0x70D JUMP JUMPDEST DUP14 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x54A JUMPI DUP3 DUP12 SWAP4 SWAP3 PUSH1 0x60 DUP6 SWAP5 ADD MSTORE DUP2 MSTORE ADD SWAP5 ADD SWAP4 PUSH2 0x22A JUMP JUMPDEST POP POP POP DUP16 DUP1 REVERT JUMPDEST POP DUP16 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 DUP4 MSTORE DUP9 DUP13 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x63C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x62C JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x665 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x629 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x685 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6B9 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x754 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x724 DUP3 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 PUSH2 0x732 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x6CF JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x754 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x76D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x754 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xB1 0x2D POP PUSH24 0x68ABAD8FF772C9DD4D356704EC2963F4034CB2467E2EE4B2 0xDC PUSH8 0x5A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"175:2376:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:2376:15;;;;-1:-1:-1;;;;;175:2376:15;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;2627:22;;2623:91;;-1:-1:-1;;175:2376:15;;-1:-1:-1;;;;;;175:2376:15;;;;;;;3052:40:2;175:2376:15;;3052:40:2;175:2376:15;;2623:91:2;175:2376:15;-1:-1:-1;;;2672:31:2;;;;;175:2376:15;;;;;2672:31:2;175:2376:15;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;175:2376:15;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;175:2376:15;;-1:-1:-1;;;;;;175:2376:15;;;;;;-1:-1:-1;;;;;175:2376:15;3052:40:2;175:2376:15;;3052:40:2;175:2376:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:2;;;:::i;:::-;1028:12:15;1042:16;;175:2376;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1188:10;;;;;;;1223:3;175:2376;;1200:21;;;;;1271:13;;;;:::i;:::-;;175:2376;;;1302:30;1298:1188;;1223:3;175:2376;;1188:10;;1298:1188;175:2376;;;;;;;;;;;1356:13;;;;1352:937;175:2376;;;1485:16;;;;;175:2376;;;;;1474:42;;175:2376;;;;1474:42;;175:2376;1474:42;;;175:2376;:::i;:::-;;;;1569:15;;;175:2376;;;;1558:35;;175:2376;;;;1558:35;175:2376;1558:35;;175:2376;:::i;:::-;1619:22;;;;1352:937;1619:36;;;;1352:937;-1:-1:-1;1615:178:15;;;1683:14;;1615:178;;175:2376;;-1:-1:-1;;175:2376:15;;;;;;;;2311:26;;;;2307:91;;1352:937;2416:13;175:2376;2416:13;;;:::i;:::-;;:25;175:2376;2466:5;;;;1183:1313;175:2376;;;;;;2520:22;;;;;175:2376;;;;;;;;;;;;;;;;;;;;;;;;;;;2520:22;;;;;;;;;175:2376;2520:22;;;;175:2376;;2520:22;;;;;;:::i;:::-;175:2376;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2307:91;2361:18;;-1:-1:-1;2361:18:15;;2307:91;;175:2376;-1:-1:-1;;;175:2376:15;;;;;;;1615:178;1752:18;;;;1615:178;;;1619:36;;;;;;:22;175:2376;-1:-1:-1;1630:11:15;-1:-1:-1;1619:22:15;;;175:2376;;;;;;;;1352:937;1821:13;;;1833:1;1821:13;1817:472;;1352:937;;;;1817:472;1949:16;;;;;;;175:2376;;1938:44;;;;;175:2376;;;;;;;;1938:44;;;175:2376;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;175:2376:15;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;2035:15;;175:2376;;;;2024:35;;175:2376;;;;2024:35;175:2376;2024:35;;175:2376;:::i;:::-;;;;;2085:34;;;;1817:472;2085:48;;;;;1817:472;-1:-1:-1;2081:190:15;;;2161:14;;2081:190;;1817:472;;;2081:190;2230:18;;;;2081:190;;;2085:48;;;;;;:34;175:2376;;2097:22;;;-1:-1:-1;2085:34:15;;;;175:2376;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1200:21;;;;;;;;;;;;;;;;175:2376;;;;;;;;;;;;;;;;-1:-1:-1;;175:2376:15;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:2376:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:2376:15;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;175:2376:15;;;;:::o;1796:162:2:-;1710:6;175:2376:15;-1:-1:-1;;;;;175:2376:15;735:10:7;1855:23:2;1851:101;;1796:162::o;1851:101::-;175:2376:15;;-1:-1:-1;;;1901:40:2;;735:10:7;1901:40:2;;;175:2376:15;;;1901:40:2;175:2376:15;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;175:2376:15;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;175:2376:15;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;175:2376:15;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"getOpinion(bytes,uint256)":"6e93bb39","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"executionPlan\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"kernelId\",\"type\":\"uint256\"}],\"name\":\"getOpinion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"opinion\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"updatedPlan\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CustomOpinionMaker.sol\":\"CustomOpinionMaker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"contracts/CustomOpinionMaker.sol\":{\"keccak256\":\"0x1e0be521810e6c1e0e30e3b4b51d77280abdbc4eaf7fdcdb06bf72ce52700557\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd7399c6c6d4f5936acc81ca2026184c8b3478c96d6a5db1f11087c8e4c460f9\",\"dweb:/ipfs/QmeVhkACj2gFHDxa6Z59V19gnyBBTkWsCaXjggnDQwcdTX\"]}},\"version\":1}"}},"contracts/CustomTokenAuthority.sol":{"CustomTokenAuthority":{"abi":[{"inputs":[{"internalType":"address","name":"_initialOwner","type":"address"},{"internalType":"address","name":"_opinionMaker","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"expmod_Error","type":"error"},{"inputs":[],"name":"k256Decompress_Invalid_Length_Error","type":"error"},{"inputs":[],"name":"k256DeriveY_Invalid_Prefix_Error","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"generateKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"kernelId","type":"uint256"}],"name":"getOpinion","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"password","type":"string"}],"name":"getSigningKeypairPrivateKey","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSigningKeypairPublicKey","outputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"kernelId","type":"uint256"}],"name":"isKernelAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"kernelId","type":"uint256"},{"internalType":"bool","name":"isAllowed","type":"bool"}],"name":"setKernel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOpinionMaker","type":"address"}],"name":"setOpinionMaker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runtimeDigest","type":"bytes32"},{"internalType":"bool","name":"isAllowed","type":"bool"}],"name":"setRuntimeDigest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"pubKey","type":"bytes"},{"internalType":"bytes","name":"privKey","type":"bytes"}],"name":"setSigningKeypair","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"password","type":"string"}],"name":"setSigningKeypairRetrievalPassword","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"kernelNodePubKey","type":"address"},{"internalType":"bool","name":"isAllowed","type":"bool"}],"name":"setWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"senderAddress","type":"address"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"functionParams","type":"bytes"},{"internalType":"bytes","name":"kernelParamObjects","type":"bytes"},{"internalType":"bytes","name":"kernelResponses","type":"bytes"}],"name":"sign","outputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":338,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080346200013757601f62001aff38819003918201601f19168301916001600160401b038311848410176200013c57808492604094855283398101031262000137576200005a6020620000528362000152565b920162000152565b6001600160a01b03918216919082156200011e57600080546001600160a01b0319808216861783559491908416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a316908115620000cd5760065416176006556040516119979081620001688239f35b60405162461bcd60e51b8152602060048201526024808201527f4f70696e696f6e206d616b657220616464726573732063616e6e6f74206265206044820152637a65726f60e01b6064820152608490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001375756fe6080604052600436101561001257600080fd5b60003560e01c806309eef4a514610107578063270e7c2f1461010257806348d08eeb146100fd5780634cf0d40a146100f85780634f8dd40a146100f357806353d6fd59146100ee578063715018a6146100e95780637355f88b146100e45780637998efb8146100df5780638da5cb5b146100da578063922dd7d9146100d557806395f7b6ab146100d0578063aa775b4a146100cb578063e498de5f146100c65763f2fde38b146100c157600080fd5b610b07565b6109b0565b6108f2565b61084f565b61073d565b610714565b6106d2565b61053a565b6104dc565b610485565b61036a565b6102fe565b6102cd565b610282565b6101d0565b600435906001600160a01b038216820361012257565b600080fd5b9181601f84011215610122578235916001600160401b038311610122576020838186019501011161012257565b60005b8381106101675750506000910152565b8181015183820152602001610157565b9060209161019081518092818552858086019101610154565b601f01601f1916010190565b949392916060926101b86101cb93608089526080890190610177565b9160208801528682036040880152610177565b930152565b346101225760a0366003190112610122576101e961010c565b6001600160401b0360243581811161012257610209903690600401610127565b505060443581811161012257610223903690600401610127565b926064358381116101225761023c903690600401610127565b90608435948511610122576102749561025c610264963690600401610127565b959094610d94565b906040949294519485948561019c565b0390f35b8015150361012257565b34610122576040366003190112610122576102cb6024356102a281610278565b6102aa611849565b600435600052600960205260406000209060ff801983541691151516179055565b005b34610122576020366003190112610122576004356000526009602052602060ff604060002054166040519015158152f35b34610122576040366003190112610122576102cb60243561031e81610278565b610326611849565b600435600052600860205260406000209060ff801983541691151516179055565b610367939260609215158252151560208201528160408201520190610177565b90565b346101225760208060031936011261012257600435806000526009825260ff6040600020541615610448576006546040516327c6ea0560e11b84820190815260248083019490945292815260009283926001600160a01b0316916103cd81610bf2565b51915afa906103da610f08565b91156104045781816103f59261027494518301019101610f7a565b60409391935193849384610347565b6064906040519062461bcd60e51b82526004820152601860248201527f4f70696e696f6e2072657472696576616c206661696c656400000000000000006044820152fd5b60405162461bcd60e51b815260048101839052601560248201527412d95c9b995b081a5cc81b9bdd08185b1b1bddd959605a1b6044820152606490fd5b34610122576040366003190112610122576102cb6104a161010c565b602435906104ae82610278565b6104b6611849565b60018060a01b0316600052600760205260406000209060ff801983541691151516179055565b3461012257600080600319360112610537576104f6611849565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b34610122576040366003190112610122576001600160401b036004358181116101225761056b903690600401610127565b9060243590838211610122576105aa61058b6105b3933690600401610127565b919092610596611849565b604051956105a387610bd7565b3691610fbd565b84523691610fbd565b90602090602081019283525190815193841161069f576001916105df856105da8554610c7d565b610ff4565b602091601f861160011461062957509380610615926102cb9660009261061e575b50508160011b916000199060031b1c19161790565b90555b5161119c565b015190503880610600565b60016000529190601f198616600080516020611942833981519152936000905b82821061068857505091849391876102cb98941061066f575b505050811b019055610618565b015160001960f88460031b161c19169055388080610662565b808786978294978701518155019601940190610649565b610bc1565b602060031982011261012257600435906001600160401b038211610122576106ce91600401610127565b9091565b34610122576106e0366106a4565b6106e8611849565b61070c60206040518381948383019687378101600083820152038084520182610c43565b519020600555005b34610122576000366003190112610122576000546040516001600160a01b039091168152602090f35b346101225760008060031936011261053757610757611849565b61076e60405161076681610c0d565b8281526117ca565b8180604051926020936107aa8161079c8782019461078c8660049052565b6040808401526060830190610177565b03601f198101835282610c43565b51906005600160981b015afa6107be610f08565b901561080a57906107da82828061080795518301019101611875565b90916107f46107e7610d34565b8481528383820152611400565b6107fc610d34565b9283528201526114e6565b80f35b60405162461bcd60e51b815260048101839052601b60248201527f67656e207369676e696e67206b6579706169723a206661696c656400000000006044820152606490fd5b346101225760203660031901126101225761086861010c565b610870611849565b6001600160a01b0316801561089c576bffffffffffffffffffffffff60a01b6006541617600655600080f35b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964206f70696e696f6e206d616b657220616464726573730000006044820152606490fd5b906020610367928181520190610177565b3461012257610900366106a4565b90610909611849565b6005549161093160206040518381948383019687378101600083820152038084520182610c43565b51902003610950576102746109446115df565b604051918291826108e1565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c185cdcdddbdc9960821b6044820152606490fd5b906109a0602091949394604084526040840190610177565b6001600160a01b03909416910152565b3461012257600080600319360112610537576109ca611691565b906021825103610af557602182015191805115610ae1576020015160f81c90600282141580610ad6575b610ac457806401000003d019604051602081019160208352602060408301526020606083015280600781808a80098a0908608083015263400000f4600160fe1b0360a083015260c0808301919091528152610a4e81610c28565b519060055afa91610a5d610f08565b9215610ab257610a82610a7c610a75610a8b95610d71565b93846118fb565b60011690565b610aa2576118b8565b610a93611691565b61027460405192839283610988565b90610aac9061190d565b906118b8565b60405163102875ed60e01b8152600490fd5b60405163ab4be04160e01b8152600490fd5b5060038214156109f4565b634e487b7160e01b82526032600452602482fd5b604051636446a2c560e11b8152600490fd5b3461012257602036600319011261012257610b2061010c565b610b28611849565b6001600160a01b039081168015610b7657600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b604051631e4fbdf760e01b815260006004820152602490fd5b908060209392818452848401376000828201840152601f01601f1916010190565b916020610367938181520191610b8f565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761069f57604052565b606081019081106001600160401b0382111761069f57604052565b602081019081106001600160401b0382111761069f57604052565b60e081019081106001600160401b0382111761069f57604052565b90601f801991011681019081106001600160401b0382111761069f57604052565b916020916109a091959495604085526040850191610b8f565b90600182811c92168015610cad575b6020831014610c9757565b634e487b7160e01b600052602260045260246000fd5b91607f1691610c8c565b60025460009291610cc782610c7d565b91600190818116908115610d215750600114610ce257505050565b90919293506002600052600080516020611922833981519152906000915b848310610d0e575050500190565b8181602092548587015201920191610d00565b60ff191683525050811515909102019150565b60405190610d4182610bd7565b565b6001600160401b03811161069f57601f01601f191660200190565b60405190610d6b82610c0d565b60008252565b602081519101519060208110610d85575090565b6000199060200360031b1b1690565b610e56610ef594989593969297988260409586519a8b610dba60209c8d83019384610bb0565b039b610dce601f199d8e8101835282610c43565b519020928115610efc57610e3491610dfe8d8d610df28c5194859283019687610bb0565b03908101835282610c43565b5190205b87518b810194855260208501919091526001600160a01b03909216604084015281606084015b038b8101835282610c43565b51902098610e4a85519384928a84019687610c64565b03888101835282610c43565b51902095610e93610ea18351610e7d81610e718a8201610cb7565b038a8101835282610c43565b84518881018b8152610e93908290602001610e28565b610e9b610d5e565b9161171e565b96610eba610eb5610eb0610d5e565b6117ca565b610d71565b96610df288865196610edd88610ed1868201610cb7565b038681018a5289610c43565b51958693840160209093929193604081019481520152565b9293929190565b5050610e346000610e02565b3d15610f33573d90610f1982610d43565b91610f276040519384610c43565b82523d6000602084013e565b606090565b81601f82011215610122578051610f4e81610d43565b92610f5c6040519485610c43565b81845260208284010111610122576103679160208085019101610154565b91606083830312610122578251610f9081610278565b926020810151610f9f81610278565b9260408201516001600160401b038111610122576103679201610f38565b929192610fc982610d43565b91610fd76040519384610c43565b829481845281830111610122578281602093846000960137010152565b90601f8211611001575050565b6001916000906001600052600080516020611942833981519152906020601f850160051c8301941061104e575b601f0160051c01915b8281106110445750505050565b8181558301611037565b909250829061102e565b601f8111611064575050565b6000906002600052600080516020611922833981519152906020601f850160051c830194106110ae575b601f0160051c01915b8281106110a357505050565b818155600101611097565b909250829061108e565b601f81116110c4575050565b60009060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b906020601f850160051c83019410611120575b601f0160051c01915b82811061111557505050565b818155600101611109565b9092508290611100565b601f8111611136575050565b60009060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b906020601f850160051c83019410611192575b601f0160051c01915b82811061118757505050565b81815560010161117b565b9092508290611172565b9081516001600160401b03811161069f576111c1816111bc600254610c7d565b611058565b602080601f83116001146111f8575081906111f3939460009261061e5750508160011b916000199060031b1c19161790565b600255565b90601f19831694611219600260005260008051602061192283398151915290565b926000905b87821061125657505083600195961061123d575b505050811b01600255565b015160001960f88460031b161c19169055388080611232565b8060018596829496860151815501950193019061121e565b9081516001600160401b03811161069f5761128e816111bc600254610c7d565b602080601f83116001146112c0575081906111f3939460009261061e5750508160011b916000199060031b1c19161790565b90601f198316946112e1600260005260008051602061192283398151915290565b926000905b87821061130457505083600195961061123d57505050811b01600255565b806001859682949686015181550195019301906112e6565b9081516001600160401b03811161069f576113418161133c600454610c7d565b61112a565b602080601f831160011461137857508190611373939460009261061e5750508160011b916000199060031b1c19161790565b600455565b90601f198316946113ab60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90565b926000905b8782106113e85750508360019596106113cf575b505050811b01600455565b015160001960f88460031b161c191690553880806113c4565b806001859682949686015181550195019301906113b0565b9081519182516001600160401b03811161069f57600190611425816105da8454610c7d565b602094856001601f84111461146a5750816020949392610d4196976114609360009261061e5750508160011b916000199060031b1c19161790565b90555b015161126e565b60016000529590601f198316600080516020611942833981519152976000905b8282106114cf5750509684939192602096959383610d41999a106114b6575b505050811b019055611463565b015160001960f88460031b161c191690553880806114a9565b838501518a5598860198938401939081019061148a565b80518051906001600160401b03821161069f5761150d82611508600354610c7d565b6110b8565b602090816001601f851114611551575082602093610d4195936115469360009261061e5750508160011b916000199060031b1c19161790565b6003555b015161131c565b60036000529190601f1984167fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b936000905b8282106115c7575050926001928592602096610d419896106115ae575b505050811b0160035561154a565b015160001960f88460031b161c191690553880806115a0565b80600186978294978701518155019601940190611583565b60405190600082600254916115f383610c7d565b8083529260209060019081811690811561166d575060011461161e575b5050610d4192500383610c43565b9150926002600052600080516020611922833981519152936000925b8284106116555750610d419450505081016020013880611610565b8554888501830152948501948794509281019261163a565b91505060209250610d4194915060ff191682840152151560051b8201013880611610565b604051906000826001916001546116a781610c7d565b808452936020916001811690811561166d57506001146116cf575050610d4192500383610c43565b9150926001600052600080516020611942833981519152936000925b8284106117065750610d419450505081016020013880611610565b855488850183015294850194879450928101926116eb565b610df261177960009493859460405193849161176961175660208501986117458a60049052565b6080604087015260a0860190610177565b601f199586868303016060870152610177565b9084848303016080850152610177565b51906006600160981b015afa61178d610f08565b90156117965790565b60405162461bcd60e51b815260206004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152606490fd5b600080916040516117f18161079c6020820194602086526040808401526060830190610177565b51906001600160981b015afa611805610f08565b901561180e5790565b60405162461bcd60e51b81526020600482015260136024820152721c985b991bdb509e5d195cce8819985a5b1959606a1b6044820152606490fd5b6000546001600160a01b0316330361185d57565b60405163118cdaa760e01b8152336004820152602490fd5b919091604081840312610122578051926001600160401b039384811161012257816118a1918401610f38565b936020830151908111610122576103679201610f38565b60405191602083019182526040830152604082526118d582610bf2565b905190206001600160a01b031690565b634e487b7160e01b600052601160045260246000fd5b9190820180921161190857565b6118e5565b6401000003d019908103919082116119085756fe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5aceb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6a2646970667358221220840ea7a3493ef1e729a7600b0f3f12cc80707bf5e06be7e1b1aa975265aa1d8264736f6c63430008180033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x137 JUMPI PUSH1 0x1F PUSH3 0x1AFF CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x13C JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x137 JUMPI PUSH3 0x5A PUSH1 0x20 PUSH3 0x52 DUP4 PUSH3 0x152 JUMP JUMPDEST SWAP3 ADD PUSH3 0x152 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 SWAP1 DUP3 ISZERO PUSH3 0x11E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND DUP7 OR DUP4 SSTORE SWAP5 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 AND SWAP1 DUP2 ISZERO PUSH3 0xCD JUMPI PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1997 SWAP1 DUP2 PUSH3 0x168 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F70696E696F6E206D616B657220616464726573732063616E6E6F7420626520 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x7A65726F PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x137 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EEF4A5 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x270E7C2F EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x48D08EEB EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x4CF0D40A EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x4F8DD40A EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x53D6FD59 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x7355F88B EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x7998EFB8 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x922DD7D9 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x95F7B6AB EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xAA775B4A EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xE498DE5F EQ PUSH2 0xC6 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x84F JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x282 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x122 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x122 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x122 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x122 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x167 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x157 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x190 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x154 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x60 SWAP3 PUSH2 0x1B8 PUSH2 0x1CB SWAP4 PUSH1 0x80 DUP10 MSTORE PUSH1 0x80 DUP10 ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x177 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH2 0x1E9 PUSH2 0x10C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x122 JUMPI PUSH2 0x209 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST POP POP PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x122 JUMPI PUSH2 0x223 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x122 JUMPI PUSH2 0x23C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x122 JUMPI PUSH2 0x274 SWAP6 PUSH2 0x25C PUSH2 0x264 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0xD94 JUMP JUMPDEST SWAP1 PUSH1 0x40 SWAP5 SWAP3 SWAP5 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x19C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x122 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH2 0x2CB PUSH1 0x24 CALLDATALOAD PUSH2 0x2A2 DUP2 PUSH2 0x278 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH2 0x2CB PUSH1 0x24 CALLDATALOAD PUSH2 0x31E DUP2 PUSH2 0x278 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x367 SWAP4 SWAP3 PUSH1 0x60 SWAP3 ISZERO ISZERO DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x122 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x448 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x27C6EA05 PUSH1 0xE1 SHL DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x24 DUP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x3CD DUP2 PUSH2 0xBF2 JUMP JUMPDEST MLOAD SWAP2 GAS STATICCALL SWAP1 PUSH2 0x3DA PUSH2 0xF08 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x404 JUMPI DUP2 DUP2 PUSH2 0x3F5 SWAP3 PUSH2 0x274 SWAP5 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 SWAP4 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F70696E696F6E2072657472696576616C206661696C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x12D95C9B995B081A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH2 0x2CB PUSH2 0x4A1 PUSH2 0x10C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x4AE DUP3 PUSH2 0x278 JUMP JUMPDEST PUSH2 0x4B6 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x537 JUMPI PUSH2 0x4F6 PUSH2 0x1849 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x122 JUMPI PUSH2 0x56B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP4 DUP3 GT PUSH2 0x122 JUMPI PUSH2 0x5AA PUSH2 0x58B PUSH2 0x5B3 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH2 0x596 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 PUSH2 0x5A3 DUP8 PUSH2 0xBD7 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0xFBD JUMP JUMPDEST DUP5 MSTORE CALLDATASIZE SWAP2 PUSH2 0xFBD JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE MLOAD SWAP1 DUP2 MLOAD SWAP4 DUP5 GT PUSH2 0x69F JUMPI PUSH1 0x1 SWAP2 PUSH2 0x5DF DUP6 PUSH2 0x5DA DUP6 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH1 0x1F DUP7 GT PUSH1 0x1 EQ PUSH2 0x629 JUMPI POP SWAP4 DUP1 PUSH2 0x615 SWAP3 PUSH2 0x2CB SWAP7 PUSH1 0x0 SWAP3 PUSH2 0x61E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST MLOAD PUSH2 0x119C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP7 AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1942 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x688 JUMPI POP POP SWAP2 DUP5 SWAP4 SWAP2 DUP8 PUSH2 0x2CB SWAP9 SWAP5 LT PUSH2 0x66F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x618 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x662 JUMP JUMPDEST DUP1 DUP8 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x649 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x122 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x122 JUMPI PUSH2 0x6CE SWAP2 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH2 0x6E0 CALLDATASIZE PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x70C PUSH1 0x20 PUSH1 0x40 MLOAD DUP4 DUP2 SWAP5 DUP4 DUP4 ADD SWAP7 DUP8 CALLDATACOPY DUP2 ADD PUSH1 0x0 DUP4 DUP3 ADD MSTORE SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x5 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x537 JUMPI PUSH2 0x757 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x76E PUSH1 0x40 MLOAD PUSH2 0x766 DUP2 PUSH2 0xC0D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH2 0x17CA JUMP JUMPDEST DUP2 DUP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 SWAP4 PUSH2 0x7AA DUP2 PUSH2 0x79C DUP8 DUP3 ADD SWAP5 PUSH2 0x78C DUP7 PUSH1 0x4 SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x5 PUSH1 0x1 PUSH1 0x98 SHL ADD GAS STATICCALL PUSH2 0x7BE PUSH2 0xF08 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x80A JUMPI SWAP1 PUSH2 0x7DA DUP3 DUP3 DUP1 PUSH2 0x807 SWAP6 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x1875 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x7F4 PUSH2 0x7E7 PUSH2 0xD34 JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 DUP4 DUP3 ADD MSTORE PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x7FC PUSH2 0xD34 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH2 0x14E6 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x67656E207369676E696E67206B6579706169723A206661696C65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH2 0x868 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x870 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x89C JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F70696E696F6E206D616B65722061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x367 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH2 0x900 CALLDATASIZE PUSH2 0x6A4 JUMP JUMPDEST SWAP1 PUSH2 0x909 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP2 PUSH2 0x931 PUSH1 0x20 PUSH1 0x40 MLOAD DUP4 DUP2 SWAP5 DUP4 DUP4 ADD SWAP7 DUP8 CALLDATACOPY DUP2 ADD PUSH1 0x0 DUP4 DUP3 ADD MSTORE SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SUB PUSH2 0x950 JUMPI PUSH2 0x274 PUSH2 0x944 PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A59081C185CDCDDDBDC99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x9A0 PUSH1 0x20 SWAP2 SWAP5 SWAP4 SWAP5 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x537 JUMPI PUSH2 0x9CA PUSH2 0x1691 JUMP JUMPDEST SWAP1 PUSH1 0x21 DUP3 MLOAD SUB PUSH2 0xAF5 JUMPI PUSH1 0x21 DUP3 ADD MLOAD SWAP2 DUP1 MLOAD ISZERO PUSH2 0xAE1 JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 PUSH1 0x2 DUP3 EQ ISZERO DUP1 PUSH2 0xAD6 JUMPI JUMPDEST PUSH2 0xAC4 JUMPI DUP1 PUSH5 0x1000003D0 NOT PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 PUSH1 0x60 DUP4 ADD MSTORE DUP1 PUSH1 0x7 DUP2 DUP1 DUP11 DUP1 MULMOD DUP11 MULMOD ADDMOD PUSH1 0x80 DUP4 ADD MSTORE PUSH4 0x400000F4 PUSH1 0x1 PUSH1 0xFE SHL SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH2 0xA4E DUP2 PUSH2 0xC28 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x5 GAS STATICCALL SWAP2 PUSH2 0xA5D PUSH2 0xF08 JUMP JUMPDEST SWAP3 ISZERO PUSH2 0xAB2 JUMPI PUSH2 0xA82 PUSH2 0xA7C PUSH2 0xA75 PUSH2 0xA8B SWAP6 PUSH2 0xD71 JUMP JUMPDEST SWAP4 DUP5 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x1 AND SWAP1 JUMP JUMPDEST PUSH2 0xAA2 JUMPI PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0xA93 PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x274 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x988 JUMP JUMPDEST SWAP1 PUSH2 0xAAC SWAP1 PUSH2 0x190D JUMP JUMPDEST SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x102875ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xAB4BE041 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 DUP3 EQ ISZERO PUSH2 0x9F4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6446A2C5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH2 0xB20 PUSH2 0x10C JUMP JUMPDEST PUSH2 0xB28 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO PUSH2 0xB76 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE SWAP1 SWAP3 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x367 SWAP4 DUP2 DUP2 MSTORE ADD SWAP2 PUSH2 0xB8F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x69F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x69F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x69F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x69F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x69F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x9A0 SWAP2 SWAP6 SWAP5 SWAP6 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 PUSH2 0xB8F JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xCAD JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xC97 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0xCC7 DUP3 PUSH2 0xC7D JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xD21 JUMPI POP PUSH1 0x1 EQ PUSH2 0xCE2 JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1922 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0xD0E JUMPI POP POP POP ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP6 DUP8 ADD MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0xD00 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD41 DUP3 PUSH2 0xBD7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x69F JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD6B DUP3 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD SWAP1 PUSH1 0x20 DUP2 LT PUSH2 0xD85 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL AND SWAP1 JUMP JUMPDEST PUSH2 0xE56 PUSH2 0xEF5 SWAP5 SWAP9 SWAP6 SWAP4 SWAP7 SWAP3 SWAP8 SWAP9 DUP3 PUSH1 0x40 SWAP6 DUP7 MLOAD SWAP11 DUP12 PUSH2 0xDBA PUSH1 0x20 SWAP13 DUP14 DUP4 ADD SWAP4 DUP5 PUSH2 0xBB0 JUMP JUMPDEST SUB SWAP12 PUSH2 0xDCE PUSH1 0x1F NOT SWAP14 DUP15 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 DUP2 ISZERO PUSH2 0xEFC JUMPI PUSH2 0xE34 SWAP2 PUSH2 0xDFE DUP14 DUP14 PUSH2 0xDF2 DUP13 MLOAD SWAP5 DUP6 SWAP3 DUP4 ADD SWAP7 DUP8 PUSH2 0xBB0 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 JUMPDEST DUP8 MLOAD DUP12 DUP2 ADD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x60 DUP5 ADD JUMPDEST SUB DUP12 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP9 PUSH2 0xE4A DUP6 MLOAD SWAP4 DUP5 SWAP3 DUP11 DUP5 ADD SWAP7 DUP8 PUSH2 0xC64 JUMP JUMPDEST SUB DUP9 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP6 PUSH2 0xE93 PUSH2 0xEA1 DUP4 MLOAD PUSH2 0xE7D DUP2 PUSH2 0xE71 DUP11 DUP3 ADD PUSH2 0xCB7 JUMP JUMPDEST SUB DUP11 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC43 JUMP JUMPDEST DUP5 MLOAD DUP9 DUP2 ADD DUP12 DUP2 MSTORE PUSH2 0xE93 SWAP1 DUP3 SWAP1 PUSH1 0x20 ADD PUSH2 0xE28 JUMP JUMPDEST PUSH2 0xE9B PUSH2 0xD5E JUMP JUMPDEST SWAP2 PUSH2 0x171E JUMP JUMPDEST SWAP7 PUSH2 0xEBA PUSH2 0xEB5 PUSH2 0xEB0 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x17CA JUMP JUMPDEST PUSH2 0xD71 JUMP JUMPDEST SWAP7 PUSH2 0xDF2 DUP9 DUP7 MLOAD SWAP7 PUSH2 0xEDD DUP9 PUSH2 0xED1 DUP7 DUP3 ADD PUSH2 0xCB7 JUMP JUMPDEST SUB DUP7 DUP2 ADD DUP11 MSTORE DUP10 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP6 DUP7 SWAP4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SWAP3 SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH2 0xE34 PUSH1 0x0 PUSH2 0xE02 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xF33 JUMPI RETURNDATASIZE SWAP1 PUSH2 0xF19 DUP3 PUSH2 0xD43 JUMP JUMPDEST SWAP2 PUSH2 0xF27 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xC43 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x122 JUMPI DUP1 MLOAD PUSH2 0xF4E DUP2 PUSH2 0xD43 JUMP JUMPDEST SWAP3 PUSH2 0xF5C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xC43 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x122 JUMPI PUSH2 0x367 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x154 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x122 JUMPI DUP3 MLOAD PUSH2 0xF90 DUP2 PUSH2 0x278 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0xF9F DUP2 PUSH2 0x278 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x122 JUMPI PUSH2 0x367 SWAP3 ADD PUSH2 0xF38 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xFC9 DUP3 PUSH2 0xD43 JUMP JUMPDEST SWAP2 PUSH2 0xFD7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xC43 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x122 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1001 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1942 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x104E JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1044 JUMPI POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE DUP4 ADD PUSH2 0x1037 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1064 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1922 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x10AE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x10A3 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x10C4 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1120 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1115 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1109 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1136 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1192 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1187 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x117B JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1172 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x69F JUMPI PUSH2 0x11C1 DUP2 PUSH2 0x11BC PUSH1 0x2 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x11F8 JUMPI POP DUP2 SWAP1 PUSH2 0x11F3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x61E JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x1219 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1922 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x1256 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x123D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1232 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x121E JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x69F JUMPI PUSH2 0x128E DUP2 PUSH2 0x11BC PUSH1 0x2 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x12C0 JUMPI POP DUP2 SWAP1 PUSH2 0x11F3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x61E JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x12E1 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1922 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x1304 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x123D JUMPI POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x12E6 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x69F JUMPI PUSH2 0x1341 DUP2 PUSH2 0x133C PUSH1 0x4 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1378 JUMPI POP DUP2 SWAP1 PUSH2 0x1373 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x61E JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x13AB PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x13E8 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x13CF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x13C4 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x13B0 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x69F JUMPI PUSH1 0x1 SWAP1 PUSH2 0x1425 DUP2 PUSH2 0x5DA DUP5 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x20 SWAP5 DUP6 PUSH1 0x1 PUSH1 0x1F DUP5 GT EQ PUSH2 0x146A JUMPI POP DUP2 PUSH1 0x20 SWAP5 SWAP4 SWAP3 PUSH2 0xD41 SWAP7 SWAP8 PUSH2 0x1460 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x61E JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD MLOAD PUSH2 0x126E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE SWAP6 SWAP1 PUSH1 0x1F NOT DUP4 AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1942 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x14CF JUMPI POP POP SWAP7 DUP5 SWAP4 SWAP2 SWAP3 PUSH1 0x20 SWAP7 SWAP6 SWAP4 DUP4 PUSH2 0xD41 SWAP10 SWAP11 LT PUSH2 0x14B6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1463 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x14A9 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP11 SSTORE SWAP9 DUP7 ADD SWAP9 SWAP4 DUP5 ADD SWAP4 SWAP1 DUP2 ADD SWAP1 PUSH2 0x148A JUMP JUMPDEST DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x69F JUMPI PUSH2 0x150D DUP3 PUSH2 0x1508 PUSH1 0x3 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1F DUP6 GT EQ PUSH2 0x1551 JUMPI POP DUP3 PUSH1 0x20 SWAP4 PUSH2 0xD41 SWAP6 SWAP4 PUSH2 0x1546 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x61E JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMPDEST ADD MLOAD PUSH2 0x131C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x15C7 JUMPI POP POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x20 SWAP7 PUSH2 0xD41 SWAP9 SWAP7 LT PUSH2 0x15AE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x154A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x15A0 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x1583 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x2 SLOAD SWAP2 PUSH2 0x15F3 DUP4 PUSH2 0xC7D JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x166D JUMPI POP PUSH1 0x1 EQ PUSH2 0x161E JUMPI JUMPDEST POP POP PUSH2 0xD41 SWAP3 POP SUB DUP4 PUSH2 0xC43 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1922 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1655 JUMPI POP PUSH2 0xD41 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1610 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x163A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0xD41 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1610 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x1 SWAP2 PUSH1 0x1 SLOAD PUSH2 0x16A7 DUP2 PUSH2 0xC7D JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x166D JUMPI POP PUSH1 0x1 EQ PUSH2 0x16CF JUMPI POP POP PUSH2 0xD41 SWAP3 POP SUB DUP4 PUSH2 0xC43 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1942 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1706 JUMPI POP PUSH2 0xD41 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1610 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0xDF2 PUSH2 0x1779 PUSH1 0x0 SWAP5 SWAP4 DUP6 SWAP5 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH2 0x1769 PUSH2 0x1756 PUSH1 0x20 DUP6 ADD SWAP9 PUSH2 0x1745 DUP11 PUSH1 0x4 SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x1F NOT SWAP6 DUP7 DUP7 DUP4 SUB ADD PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x177 JUMP JUMPDEST SWAP1 DUP5 DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x177 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x6 PUSH1 0x1 PUSH1 0x98 SHL ADD GAS STATICCALL PUSH2 0x178D PUSH2 0xF08 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x1796 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1CDA59DB8E8819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x17F1 DUP2 PUSH2 0x79C PUSH1 0x20 DUP3 ADD SWAP5 PUSH1 0x20 DUP7 MSTORE PUSH1 0x40 DUP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x98 SHL ADD GAS STATICCALL PUSH2 0x1805 PUSH2 0xF08 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x180E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1C985B991BDB509E5D195CCE8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x185D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x122 JUMPI DUP1 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 DUP2 GT PUSH2 0x122 JUMPI DUP2 PUSH2 0x18A1 SWAP2 DUP5 ADD PUSH2 0xF38 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x122 JUMPI PUSH2 0x367 SWAP3 ADD PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP3 MSTORE PUSH2 0x18D5 DUP3 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 MLOAD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1908 JUMPI JUMP JUMPDEST PUSH2 0x18E5 JUMP JUMPDEST PUSH5 0x1000003D0 NOT SWAP1 DUP2 SUB SWAP2 SWAP1 DUP3 GT PUSH2 0x1908 JUMPI JUMP INVALID BLOCKHASH JUMPI DUP8 STATICCALL SLT 0xA8 0x23 0xE0 CALLCODE 0xB7 PUSH4 0x1CC41B3B 0xA8 DUP3 DUP12 CALLER 0x21 0xCA DUP2 GT GT STATICCALL PUSH22 0xCD3AA3BB5ACEB10E2D527612073B26EECDFD717E6A32 0xC DELEGATECALL 0x4B BLOBBASEFEE STATICCALL 0xC2 0xB0 PUSH20 0x2D9FCBE2B7FA0CF6A2646970667358221220840E 0xA7 LOG3 BLOBHASH RETURNDATACOPY CALL 0xE7 0x29 0xA7 PUSH1 0xB 0xF EXTCODEHASH SLT 0xCC DUP1 PUSH17 0x7BF5E06BE7E1B1AA975265AA1D8264736F PUSH13 0x63430008180033000000000000 ","sourceMap":"374:5591:16:-:0;;;;;;;;;;;;;-1:-1:-1;;374:5591:16;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;374:5591:16;;;;;1273:26:2;;1269:95;;-1:-1:-1;374:5591:16;;-1:-1:-1;;;;;;374:5591:16;;;;;;;;;;;;;3052:40:2;;-1:-1:-1;3052:40:2;374:5591:16;1110:27;;;374:5591;;1188:28;374:5591;;;1188:28;374:5591;;;;;;;;;;;;;-1:-1:-1;;;374:5591:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;374:5591:16;;;;;;;1269:95:2;374:5591:16;;-1:-1:-1;;;1322:31:2;;-1:-1:-1;1322:31:2;;;374:5591:16;;;1322:31:2;374:5591:16;-1:-1:-1;374:5591:16;;;;;;-1:-1:-1;374:5591:16;;;;;-1:-1:-1;374:5591:16;;;;-1:-1:-1;;;;;374:5591:16;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":268,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":4029,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_boolt_boolt_bytes_fromMemory":{"entryPoint":3962,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_bytes_calldata":{"entryPoint":295,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes_fromMemory":{"entryPoint":3896,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytest_bytes_fromMemory":{"entryPoint":6261,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_string_calldata":{"entryPoint":1700,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_bool_bool_bytes":{"entryPoint":839,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_bytes":{"entryPoint":2273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32_bytes32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes32_bytes32_address":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_bytes_address":{"entryPoint":2440,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_bytes32_bytes_bytes32":{"entryPoint":412,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":2992,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_calldata_address":{"entryPoint":3172,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_bytes_calldata_ptr":{"entryPoint":2959,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_memory_ptr":{"entryPoint":375,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_storage":{"entryPoint":3255,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_enum_SigningAlg":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"allocate_memory":{"entryPoint":3380,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":3395,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_bytes_storage_16689":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_bytes_storage_16694":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_bytes_storage_9161":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_uint256":{"entryPoint":6395,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":6413,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":4184,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_bytes_storage_16693":{"entryPoint":4280,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_bytes_storage_19899":{"entryPoint":4394,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_bytes_storage_9160":{"entryPoint":4084,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_bytes_to_bytes32":{"entryPoint":3441,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_bytes":{"entryPoint":5777,"id":null,"parameterSlots":0,"returnSlots":1},"copy_array_from_storage_to_memory_bytes_9173":{"entryPoint":5599,"id":null,"parameterSlots":0,"returnSlots":1},"copy_byte_array_to_storage_from_bytes_to_bytes":{"entryPoint":4718,"id":null,"parameterSlots":1,"returnSlots":0},"copy_byte_array_to_storage_from_bytes_to_bytes_16695":{"entryPoint":4892,"id":null,"parameterSlots":1,"returnSlots":0},"copy_byte_array_to_storage_from_bytes_to_bytes_9162":{"entryPoint":4508,"id":null,"parameterSlots":1,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":340,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_Keypair_to_struct_Keypair":{"entryPoint":5120,"id":null,"parameterSlots":1,"returnSlots":0},"copy_struct_to_storage_from_struct_Keypair_to_struct_Keypair_9170":{"entryPoint":5350,"id":null,"parameterSlots":1,"returnSlots":0},"external_fun_generateKey":{"entryPoint":1853,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getOpinion":{"entryPoint":874,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getSigningKeypairPrivateKey":{"entryPoint":2290,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getSigningKeypairPublicKey":{"entryPoint":2480,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isKernelAllowed":{"entryPoint":717,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":1812,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":1244,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setKernel":{"entryPoint":642,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setOpinionMaker":{"entryPoint":2127,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setRuntimeDigest":{"entryPoint":766,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setSigningKeypair":{"entryPoint":1338,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setSigningKeypairRetrievalPassword":{"entryPoint":1746,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setWhitelist":{"entryPoint":1157,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_sign":{"entryPoint":464,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":2823,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3197,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":3848,"id":null,"parameterSlots":0,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3139,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_16680":{"entryPoint":3058,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_16681":{"entryPoint":3085,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_16682":{"entryPoint":3112,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_9159":{"entryPoint":3031,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":6217,"id":1240,"parameterSlots":0,"returnSlots":0},"fun_randomBytes":{"entryPoint":6090,"id":715,"parameterSlots":1,"returnSlots":1},"fun_sign":{"entryPoint":5918,"id":973,"parameterSlots":3,"returnSlots":1},"fun_sign_7113":{"entryPoint":3476,"id":7113,"parameterSlots":7,"returnSlots":4},"fun_toEthereumAddress":{"entryPoint":6328,"id":234,"parameterSlots":2,"returnSlots":1},"mod_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6373,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3009,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_bool":{"entryPoint":632,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806309eef4a514610107578063270e7c2f1461010257806348d08eeb146100fd5780634cf0d40a146100f85780634f8dd40a146100f357806353d6fd59146100ee578063715018a6146100e95780637355f88b146100e45780637998efb8146100df5780638da5cb5b146100da578063922dd7d9146100d557806395f7b6ab146100d0578063aa775b4a146100cb578063e498de5f146100c65763f2fde38b146100c157600080fd5b610b07565b6109b0565b6108f2565b61084f565b61073d565b610714565b6106d2565b61053a565b6104dc565b610485565b61036a565b6102fe565b6102cd565b610282565b6101d0565b600435906001600160a01b038216820361012257565b600080fd5b9181601f84011215610122578235916001600160401b038311610122576020838186019501011161012257565b60005b8381106101675750506000910152565b8181015183820152602001610157565b9060209161019081518092818552858086019101610154565b601f01601f1916010190565b949392916060926101b86101cb93608089526080890190610177565b9160208801528682036040880152610177565b930152565b346101225760a0366003190112610122576101e961010c565b6001600160401b0360243581811161012257610209903690600401610127565b505060443581811161012257610223903690600401610127565b926064358381116101225761023c903690600401610127565b90608435948511610122576102749561025c610264963690600401610127565b959094610d94565b906040949294519485948561019c565b0390f35b8015150361012257565b34610122576040366003190112610122576102cb6024356102a281610278565b6102aa611849565b600435600052600960205260406000209060ff801983541691151516179055565b005b34610122576020366003190112610122576004356000526009602052602060ff604060002054166040519015158152f35b34610122576040366003190112610122576102cb60243561031e81610278565b610326611849565b600435600052600860205260406000209060ff801983541691151516179055565b610367939260609215158252151560208201528160408201520190610177565b90565b346101225760208060031936011261012257600435806000526009825260ff6040600020541615610448576006546040516327c6ea0560e11b84820190815260248083019490945292815260009283926001600160a01b0316916103cd81610bf2565b51915afa906103da610f08565b91156104045781816103f59261027494518301019101610f7a565b60409391935193849384610347565b6064906040519062461bcd60e51b82526004820152601860248201527f4f70696e696f6e2072657472696576616c206661696c656400000000000000006044820152fd5b60405162461bcd60e51b815260048101839052601560248201527412d95c9b995b081a5cc81b9bdd08185b1b1bddd959605a1b6044820152606490fd5b34610122576040366003190112610122576102cb6104a161010c565b602435906104ae82610278565b6104b6611849565b60018060a01b0316600052600760205260406000209060ff801983541691151516179055565b3461012257600080600319360112610537576104f6611849565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b34610122576040366003190112610122576001600160401b036004358181116101225761056b903690600401610127565b9060243590838211610122576105aa61058b6105b3933690600401610127565b919092610596611849565b604051956105a387610bd7565b3691610fbd565b84523691610fbd565b90602090602081019283525190815193841161069f576001916105df856105da8554610c7d565b610ff4565b602091601f861160011461062957509380610615926102cb9660009261061e575b50508160011b916000199060031b1c19161790565b90555b5161119c565b015190503880610600565b60016000529190601f198616600080516020611942833981519152936000905b82821061068857505091849391876102cb98941061066f575b505050811b019055610618565b015160001960f88460031b161c19169055388080610662565b808786978294978701518155019601940190610649565b610bc1565b602060031982011261012257600435906001600160401b038211610122576106ce91600401610127565b9091565b34610122576106e0366106a4565b6106e8611849565b61070c60206040518381948383019687378101600083820152038084520182610c43565b519020600555005b34610122576000366003190112610122576000546040516001600160a01b039091168152602090f35b346101225760008060031936011261053757610757611849565b61076e60405161076681610c0d565b8281526117ca565b8180604051926020936107aa8161079c8782019461078c8660049052565b6040808401526060830190610177565b03601f198101835282610c43565b51906005600160981b015afa6107be610f08565b901561080a57906107da82828061080795518301019101611875565b90916107f46107e7610d34565b8481528383820152611400565b6107fc610d34565b9283528201526114e6565b80f35b60405162461bcd60e51b815260048101839052601b60248201527f67656e207369676e696e67206b6579706169723a206661696c656400000000006044820152606490fd5b346101225760203660031901126101225761086861010c565b610870611849565b6001600160a01b0316801561089c576bffffffffffffffffffffffff60a01b6006541617600655600080f35b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964206f70696e696f6e206d616b657220616464726573730000006044820152606490fd5b906020610367928181520190610177565b3461012257610900366106a4565b90610909611849565b6005549161093160206040518381948383019687378101600083820152038084520182610c43565b51902003610950576102746109446115df565b604051918291826108e1565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c185cdcdddbdc9960821b6044820152606490fd5b906109a0602091949394604084526040840190610177565b6001600160a01b03909416910152565b3461012257600080600319360112610537576109ca611691565b906021825103610af557602182015191805115610ae1576020015160f81c90600282141580610ad6575b610ac457806401000003d019604051602081019160208352602060408301526020606083015280600781808a80098a0908608083015263400000f4600160fe1b0360a083015260c0808301919091528152610a4e81610c28565b519060055afa91610a5d610f08565b9215610ab257610a82610a7c610a75610a8b95610d71565b93846118fb565b60011690565b610aa2576118b8565b610a93611691565b61027460405192839283610988565b90610aac9061190d565b906118b8565b60405163102875ed60e01b8152600490fd5b60405163ab4be04160e01b8152600490fd5b5060038214156109f4565b634e487b7160e01b82526032600452602482fd5b604051636446a2c560e11b8152600490fd5b3461012257602036600319011261012257610b2061010c565b610b28611849565b6001600160a01b039081168015610b7657600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b604051631e4fbdf760e01b815260006004820152602490fd5b908060209392818452848401376000828201840152601f01601f1916010190565b916020610367938181520191610b8f565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761069f57604052565b606081019081106001600160401b0382111761069f57604052565b602081019081106001600160401b0382111761069f57604052565b60e081019081106001600160401b0382111761069f57604052565b90601f801991011681019081106001600160401b0382111761069f57604052565b916020916109a091959495604085526040850191610b8f565b90600182811c92168015610cad575b6020831014610c9757565b634e487b7160e01b600052602260045260246000fd5b91607f1691610c8c565b60025460009291610cc782610c7d565b91600190818116908115610d215750600114610ce257505050565b90919293506002600052600080516020611922833981519152906000915b848310610d0e575050500190565b8181602092548587015201920191610d00565b60ff191683525050811515909102019150565b60405190610d4182610bd7565b565b6001600160401b03811161069f57601f01601f191660200190565b60405190610d6b82610c0d565b60008252565b602081519101519060208110610d85575090565b6000199060200360031b1b1690565b610e56610ef594989593969297988260409586519a8b610dba60209c8d83019384610bb0565b039b610dce601f199d8e8101835282610c43565b519020928115610efc57610e3491610dfe8d8d610df28c5194859283019687610bb0565b03908101835282610c43565b5190205b87518b810194855260208501919091526001600160a01b03909216604084015281606084015b038b8101835282610c43565b51902098610e4a85519384928a84019687610c64565b03888101835282610c43565b51902095610e93610ea18351610e7d81610e718a8201610cb7565b038a8101835282610c43565b84518881018b8152610e93908290602001610e28565b610e9b610d5e565b9161171e565b96610eba610eb5610eb0610d5e565b6117ca565b610d71565b96610df288865196610edd88610ed1868201610cb7565b038681018a5289610c43565b51958693840160209093929193604081019481520152565b9293929190565b5050610e346000610e02565b3d15610f33573d90610f1982610d43565b91610f276040519384610c43565b82523d6000602084013e565b606090565b81601f82011215610122578051610f4e81610d43565b92610f5c6040519485610c43565b81845260208284010111610122576103679160208085019101610154565b91606083830312610122578251610f9081610278565b926020810151610f9f81610278565b9260408201516001600160401b038111610122576103679201610f38565b929192610fc982610d43565b91610fd76040519384610c43565b829481845281830111610122578281602093846000960137010152565b90601f8211611001575050565b6001916000906001600052600080516020611942833981519152906020601f850160051c8301941061104e575b601f0160051c01915b8281106110445750505050565b8181558301611037565b909250829061102e565b601f8111611064575050565b6000906002600052600080516020611922833981519152906020601f850160051c830194106110ae575b601f0160051c01915b8281106110a357505050565b818155600101611097565b909250829061108e565b601f81116110c4575050565b60009060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b906020601f850160051c83019410611120575b601f0160051c01915b82811061111557505050565b818155600101611109565b9092508290611100565b601f8111611136575050565b60009060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b906020601f850160051c83019410611192575b601f0160051c01915b82811061118757505050565b81815560010161117b565b9092508290611172565b9081516001600160401b03811161069f576111c1816111bc600254610c7d565b611058565b602080601f83116001146111f8575081906111f3939460009261061e5750508160011b916000199060031b1c19161790565b600255565b90601f19831694611219600260005260008051602061192283398151915290565b926000905b87821061125657505083600195961061123d575b505050811b01600255565b015160001960f88460031b161c19169055388080611232565b8060018596829496860151815501950193019061121e565b9081516001600160401b03811161069f5761128e816111bc600254610c7d565b602080601f83116001146112c0575081906111f3939460009261061e5750508160011b916000199060031b1c19161790565b90601f198316946112e1600260005260008051602061192283398151915290565b926000905b87821061130457505083600195961061123d57505050811b01600255565b806001859682949686015181550195019301906112e6565b9081516001600160401b03811161069f576113418161133c600454610c7d565b61112a565b602080601f831160011461137857508190611373939460009261061e5750508160011b916000199060031b1c19161790565b600455565b90601f198316946113ab60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90565b926000905b8782106113e85750508360019596106113cf575b505050811b01600455565b015160001960f88460031b161c191690553880806113c4565b806001859682949686015181550195019301906113b0565b9081519182516001600160401b03811161069f57600190611425816105da8454610c7d565b602094856001601f84111461146a5750816020949392610d4196976114609360009261061e5750508160011b916000199060031b1c19161790565b90555b015161126e565b60016000529590601f198316600080516020611942833981519152976000905b8282106114cf5750509684939192602096959383610d41999a106114b6575b505050811b019055611463565b015160001960f88460031b161c191690553880806114a9565b838501518a5598860198938401939081019061148a565b80518051906001600160401b03821161069f5761150d82611508600354610c7d565b6110b8565b602090816001601f851114611551575082602093610d4195936115469360009261061e5750508160011b916000199060031b1c19161790565b6003555b015161131c565b60036000529190601f1984167fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b936000905b8282106115c7575050926001928592602096610d419896106115ae575b505050811b0160035561154a565b015160001960f88460031b161c191690553880806115a0565b80600186978294978701518155019601940190611583565b60405190600082600254916115f383610c7d565b8083529260209060019081811690811561166d575060011461161e575b5050610d4192500383610c43565b9150926002600052600080516020611922833981519152936000925b8284106116555750610d419450505081016020013880611610565b8554888501830152948501948794509281019261163a565b91505060209250610d4194915060ff191682840152151560051b8201013880611610565b604051906000826001916001546116a781610c7d565b808452936020916001811690811561166d57506001146116cf575050610d4192500383610c43565b9150926001600052600080516020611942833981519152936000925b8284106117065750610d419450505081016020013880611610565b855488850183015294850194879450928101926116eb565b610df261177960009493859460405193849161176961175660208501986117458a60049052565b6080604087015260a0860190610177565b601f199586868303016060870152610177565b9084848303016080850152610177565b51906006600160981b015afa61178d610f08565b90156117965790565b60405162461bcd60e51b815260206004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152606490fd5b600080916040516117f18161079c6020820194602086526040808401526060830190610177565b51906001600160981b015afa611805610f08565b901561180e5790565b60405162461bcd60e51b81526020600482015260136024820152721c985b991bdb509e5d195cce8819985a5b1959606a1b6044820152606490fd5b6000546001600160a01b0316330361185d57565b60405163118cdaa760e01b8152336004820152602490fd5b919091604081840312610122578051926001600160401b039384811161012257816118a1918401610f38565b936020830151908111610122576103679201610f38565b60405191602083019182526040830152604082526118d582610bf2565b905190206001600160a01b031690565b634e487b7160e01b600052601160045260246000fd5b9190820180921161190857565b6118e5565b6401000003d019908103919082116119085756fe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5aceb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6a2646970667358221220840ea7a3493ef1e729a7600b0f3f12cc80707bf5e06be7e1b1aa975265aa1d8264736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9EEF4A5 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x270E7C2F EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x48D08EEB EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x4CF0D40A EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x4F8DD40A EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x53D6FD59 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x7355F88B EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x7998EFB8 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x922DD7D9 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x95F7B6AB EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xAA775B4A EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xE498DE5F EQ PUSH2 0xC6 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x84F JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH2 0x6D2 JUMP JUMPDEST PUSH2 0x53A JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x282 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x122 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x122 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x122 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x122 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x167 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x157 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x190 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x154 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x60 SWAP3 PUSH2 0x1B8 PUSH2 0x1CB SWAP4 PUSH1 0x80 DUP10 MSTORE PUSH1 0x80 DUP10 ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x177 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH2 0x1E9 PUSH2 0x10C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x122 JUMPI PUSH2 0x209 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST POP POP PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x122 JUMPI PUSH2 0x223 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x122 JUMPI PUSH2 0x23C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x122 JUMPI PUSH2 0x274 SWAP6 PUSH2 0x25C PUSH2 0x264 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0xD94 JUMP JUMPDEST SWAP1 PUSH1 0x40 SWAP5 SWAP3 SWAP5 MLOAD SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x19C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x122 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH2 0x2CB PUSH1 0x24 CALLDATALOAD PUSH2 0x2A2 DUP2 PUSH2 0x278 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH2 0x2CB PUSH1 0x24 CALLDATALOAD PUSH2 0x31E DUP2 PUSH2 0x278 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x367 SWAP4 SWAP3 PUSH1 0x60 SWAP3 ISZERO ISZERO DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x122 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x448 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x27C6EA05 PUSH1 0xE1 SHL DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x24 DUP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x3CD DUP2 PUSH2 0xBF2 JUMP JUMPDEST MLOAD SWAP2 GAS STATICCALL SWAP1 PUSH2 0x3DA PUSH2 0xF08 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x404 JUMPI DUP2 DUP2 PUSH2 0x3F5 SWAP3 PUSH2 0x274 SWAP5 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 SWAP4 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F70696E696F6E2072657472696576616C206661696C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x12D95C9B995B081A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH2 0x2CB PUSH2 0x4A1 PUSH2 0x10C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x4AE DUP3 PUSH2 0x278 JUMP JUMPDEST PUSH2 0x4B6 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x537 JUMPI PUSH2 0x4F6 PUSH2 0x1849 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x122 JUMPI PUSH2 0x56B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP4 DUP3 GT PUSH2 0x122 JUMPI PUSH2 0x5AA PUSH2 0x58B PUSH2 0x5B3 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH2 0x596 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 PUSH2 0x5A3 DUP8 PUSH2 0xBD7 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0xFBD JUMP JUMPDEST DUP5 MSTORE CALLDATASIZE SWAP2 PUSH2 0xFBD JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE MLOAD SWAP1 DUP2 MLOAD SWAP4 DUP5 GT PUSH2 0x69F JUMPI PUSH1 0x1 SWAP2 PUSH2 0x5DF DUP6 PUSH2 0x5DA DUP6 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH1 0x1F DUP7 GT PUSH1 0x1 EQ PUSH2 0x629 JUMPI POP SWAP4 DUP1 PUSH2 0x615 SWAP3 PUSH2 0x2CB SWAP7 PUSH1 0x0 SWAP3 PUSH2 0x61E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST MLOAD PUSH2 0x119C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP7 AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1942 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x688 JUMPI POP POP SWAP2 DUP5 SWAP4 SWAP2 DUP8 PUSH2 0x2CB SWAP9 SWAP5 LT PUSH2 0x66F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x618 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x662 JUMP JUMPDEST DUP1 DUP8 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x649 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x122 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x122 JUMPI PUSH2 0x6CE SWAP2 PUSH1 0x4 ADD PUSH2 0x127 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH2 0x6E0 CALLDATASIZE PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x70C PUSH1 0x20 PUSH1 0x40 MLOAD DUP4 DUP2 SWAP5 DUP4 DUP4 ADD SWAP7 DUP8 CALLDATACOPY DUP2 ADD PUSH1 0x0 DUP4 DUP3 ADD MSTORE SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x5 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x537 JUMPI PUSH2 0x757 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x76E PUSH1 0x40 MLOAD PUSH2 0x766 DUP2 PUSH2 0xC0D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH2 0x17CA JUMP JUMPDEST DUP2 DUP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 SWAP4 PUSH2 0x7AA DUP2 PUSH2 0x79C DUP8 DUP3 ADD SWAP5 PUSH2 0x78C DUP7 PUSH1 0x4 SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x5 PUSH1 0x1 PUSH1 0x98 SHL ADD GAS STATICCALL PUSH2 0x7BE PUSH2 0xF08 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x80A JUMPI SWAP1 PUSH2 0x7DA DUP3 DUP3 DUP1 PUSH2 0x807 SWAP6 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x1875 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x7F4 PUSH2 0x7E7 PUSH2 0xD34 JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 DUP4 DUP3 ADD MSTORE PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x7FC PUSH2 0xD34 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH2 0x14E6 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x67656E207369676E696E67206B6579706169723A206661696C65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH2 0x868 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x870 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x89C JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F70696E696F6E206D616B65722061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x367 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH2 0x900 CALLDATASIZE PUSH2 0x6A4 JUMP JUMPDEST SWAP1 PUSH2 0x909 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP2 PUSH2 0x931 PUSH1 0x20 PUSH1 0x40 MLOAD DUP4 DUP2 SWAP5 DUP4 DUP4 ADD SWAP7 DUP8 CALLDATACOPY DUP2 ADD PUSH1 0x0 DUP4 DUP3 ADD MSTORE SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SUB PUSH2 0x950 JUMPI PUSH2 0x274 PUSH2 0x944 PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A59081C185CDCDDDBDC99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x9A0 PUSH1 0x20 SWAP2 SWAP5 SWAP4 SWAP5 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP2 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x537 JUMPI PUSH2 0x9CA PUSH2 0x1691 JUMP JUMPDEST SWAP1 PUSH1 0x21 DUP3 MLOAD SUB PUSH2 0xAF5 JUMPI PUSH1 0x21 DUP3 ADD MLOAD SWAP2 DUP1 MLOAD ISZERO PUSH2 0xAE1 JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 PUSH1 0x2 DUP3 EQ ISZERO DUP1 PUSH2 0xAD6 JUMPI JUMPDEST PUSH2 0xAC4 JUMPI DUP1 PUSH5 0x1000003D0 NOT PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 PUSH1 0x60 DUP4 ADD MSTORE DUP1 PUSH1 0x7 DUP2 DUP1 DUP11 DUP1 MULMOD DUP11 MULMOD ADDMOD PUSH1 0x80 DUP4 ADD MSTORE PUSH4 0x400000F4 PUSH1 0x1 PUSH1 0xFE SHL SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH2 0xA4E DUP2 PUSH2 0xC28 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x5 GAS STATICCALL SWAP2 PUSH2 0xA5D PUSH2 0xF08 JUMP JUMPDEST SWAP3 ISZERO PUSH2 0xAB2 JUMPI PUSH2 0xA82 PUSH2 0xA7C PUSH2 0xA75 PUSH2 0xA8B SWAP6 PUSH2 0xD71 JUMP JUMPDEST SWAP4 DUP5 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x1 AND SWAP1 JUMP JUMPDEST PUSH2 0xAA2 JUMPI PUSH2 0x18B8 JUMP JUMPDEST PUSH2 0xA93 PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x274 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x988 JUMP JUMPDEST SWAP1 PUSH2 0xAAC SWAP1 PUSH2 0x190D JUMP JUMPDEST SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x102875ED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xAB4BE041 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x3 DUP3 EQ ISZERO PUSH2 0x9F4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6446A2C5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x122 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x122 JUMPI PUSH2 0xB20 PUSH2 0x10C JUMP JUMPDEST PUSH2 0xB28 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO PUSH2 0xB76 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE SWAP1 SWAP3 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x367 SWAP4 DUP2 DUP2 MSTORE ADD SWAP2 PUSH2 0xB8F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x69F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x69F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x69F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x69F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x69F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x9A0 SWAP2 SWAP6 SWAP5 SWAP6 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 PUSH2 0xB8F JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xCAD JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xC97 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0xCC7 DUP3 PUSH2 0xC7D JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xD21 JUMPI POP PUSH1 0x1 EQ PUSH2 0xCE2 JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1922 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0xD0E JUMPI POP POP POP ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP6 DUP8 ADD MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0xD00 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD41 DUP3 PUSH2 0xBD7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x69F JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD6B DUP3 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD SWAP1 PUSH1 0x20 DUP2 LT PUSH2 0xD85 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL AND SWAP1 JUMP JUMPDEST PUSH2 0xE56 PUSH2 0xEF5 SWAP5 SWAP9 SWAP6 SWAP4 SWAP7 SWAP3 SWAP8 SWAP9 DUP3 PUSH1 0x40 SWAP6 DUP7 MLOAD SWAP11 DUP12 PUSH2 0xDBA PUSH1 0x20 SWAP13 DUP14 DUP4 ADD SWAP4 DUP5 PUSH2 0xBB0 JUMP JUMPDEST SUB SWAP12 PUSH2 0xDCE PUSH1 0x1F NOT SWAP14 DUP15 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 DUP2 ISZERO PUSH2 0xEFC JUMPI PUSH2 0xE34 SWAP2 PUSH2 0xDFE DUP14 DUP14 PUSH2 0xDF2 DUP13 MLOAD SWAP5 DUP6 SWAP3 DUP4 ADD SWAP7 DUP8 PUSH2 0xBB0 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 JUMPDEST DUP8 MLOAD DUP12 DUP2 ADD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x40 DUP5 ADD MSTORE DUP2 PUSH1 0x60 DUP5 ADD JUMPDEST SUB DUP12 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP9 PUSH2 0xE4A DUP6 MLOAD SWAP4 DUP5 SWAP3 DUP11 DUP5 ADD SWAP7 DUP8 PUSH2 0xC64 JUMP JUMPDEST SUB DUP9 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP6 PUSH2 0xE93 PUSH2 0xEA1 DUP4 MLOAD PUSH2 0xE7D DUP2 PUSH2 0xE71 DUP11 DUP3 ADD PUSH2 0xCB7 JUMP JUMPDEST SUB DUP11 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xC43 JUMP JUMPDEST DUP5 MLOAD DUP9 DUP2 ADD DUP12 DUP2 MSTORE PUSH2 0xE93 SWAP1 DUP3 SWAP1 PUSH1 0x20 ADD PUSH2 0xE28 JUMP JUMPDEST PUSH2 0xE9B PUSH2 0xD5E JUMP JUMPDEST SWAP2 PUSH2 0x171E JUMP JUMPDEST SWAP7 PUSH2 0xEBA PUSH2 0xEB5 PUSH2 0xEB0 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x17CA JUMP JUMPDEST PUSH2 0xD71 JUMP JUMPDEST SWAP7 PUSH2 0xDF2 DUP9 DUP7 MLOAD SWAP7 PUSH2 0xEDD DUP9 PUSH2 0xED1 DUP7 DUP3 ADD PUSH2 0xCB7 JUMP JUMPDEST SUB DUP7 DUP2 ADD DUP11 MSTORE DUP10 PUSH2 0xC43 JUMP JUMPDEST MLOAD SWAP6 DUP7 SWAP4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SWAP3 SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH2 0xE34 PUSH1 0x0 PUSH2 0xE02 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xF33 JUMPI RETURNDATASIZE SWAP1 PUSH2 0xF19 DUP3 PUSH2 0xD43 JUMP JUMPDEST SWAP2 PUSH2 0xF27 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xC43 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x122 JUMPI DUP1 MLOAD PUSH2 0xF4E DUP2 PUSH2 0xD43 JUMP JUMPDEST SWAP3 PUSH2 0xF5C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xC43 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x122 JUMPI PUSH2 0x367 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x154 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x122 JUMPI DUP3 MLOAD PUSH2 0xF90 DUP2 PUSH2 0x278 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0xF9F DUP2 PUSH2 0x278 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x122 JUMPI PUSH2 0x367 SWAP3 ADD PUSH2 0xF38 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xFC9 DUP3 PUSH2 0xD43 JUMP JUMPDEST SWAP2 PUSH2 0xFD7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xC43 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x122 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1001 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1942 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x104E JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1044 JUMPI POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE DUP4 ADD PUSH2 0x1037 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1064 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1922 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x10AE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x10A3 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x10C4 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1120 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1115 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1109 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1136 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1192 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1187 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x117B JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1172 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x69F JUMPI PUSH2 0x11C1 DUP2 PUSH2 0x11BC PUSH1 0x2 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x11F8 JUMPI POP DUP2 SWAP1 PUSH2 0x11F3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x61E JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x1219 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1922 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x1256 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x123D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1232 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x121E JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x69F JUMPI PUSH2 0x128E DUP2 PUSH2 0x11BC PUSH1 0x2 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x12C0 JUMPI POP DUP2 SWAP1 PUSH2 0x11F3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x61E JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x12E1 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1922 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x1304 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x123D JUMPI POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x12E6 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x69F JUMPI PUSH2 0x1341 DUP2 PUSH2 0x133C PUSH1 0x4 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1378 JUMPI POP DUP2 SWAP1 PUSH2 0x1373 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x61E JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x13AB PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x13E8 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x13CF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x13C4 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x13B0 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x69F JUMPI PUSH1 0x1 SWAP1 PUSH2 0x1425 DUP2 PUSH2 0x5DA DUP5 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x20 SWAP5 DUP6 PUSH1 0x1 PUSH1 0x1F DUP5 GT EQ PUSH2 0x146A JUMPI POP DUP2 PUSH1 0x20 SWAP5 SWAP4 SWAP3 PUSH2 0xD41 SWAP7 SWAP8 PUSH2 0x1460 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x61E JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD MLOAD PUSH2 0x126E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE SWAP6 SWAP1 PUSH1 0x1F NOT DUP4 AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1942 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x14CF JUMPI POP POP SWAP7 DUP5 SWAP4 SWAP2 SWAP3 PUSH1 0x20 SWAP7 SWAP6 SWAP4 DUP4 PUSH2 0xD41 SWAP10 SWAP11 LT PUSH2 0x14B6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1463 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x14A9 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP11 SSTORE SWAP9 DUP7 ADD SWAP9 SWAP4 DUP5 ADD SWAP4 SWAP1 DUP2 ADD SWAP1 PUSH2 0x148A JUMP JUMPDEST DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x69F JUMPI PUSH2 0x150D DUP3 PUSH2 0x1508 PUSH1 0x3 SLOAD PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1F DUP6 GT EQ PUSH2 0x1551 JUMPI POP DUP3 PUSH1 0x20 SWAP4 PUSH2 0xD41 SWAP6 SWAP4 PUSH2 0x1546 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x61E JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMPDEST ADD MLOAD PUSH2 0x131C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x15C7 JUMPI POP POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x20 SWAP7 PUSH2 0xD41 SWAP9 SWAP7 LT PUSH2 0x15AE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x154A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x15A0 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x1583 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x2 SLOAD SWAP2 PUSH2 0x15F3 DUP4 PUSH2 0xC7D JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x166D JUMPI POP PUSH1 0x1 EQ PUSH2 0x161E JUMPI JUMPDEST POP POP PUSH2 0xD41 SWAP3 POP SUB DUP4 PUSH2 0xC43 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1922 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1655 JUMPI POP PUSH2 0xD41 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1610 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x163A JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0xD41 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1610 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x1 SWAP2 PUSH1 0x1 SLOAD PUSH2 0x16A7 DUP2 PUSH2 0xC7D JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x20 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x166D JUMPI POP PUSH1 0x1 EQ PUSH2 0x16CF JUMPI POP POP PUSH2 0xD41 SWAP3 POP SUB DUP4 PUSH2 0xC43 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1942 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1706 JUMPI POP PUSH2 0xD41 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1610 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x16EB JUMP JUMPDEST PUSH2 0xDF2 PUSH2 0x1779 PUSH1 0x0 SWAP5 SWAP4 DUP6 SWAP5 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH2 0x1769 PUSH2 0x1756 PUSH1 0x20 DUP6 ADD SWAP9 PUSH2 0x1745 DUP11 PUSH1 0x4 SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x1F NOT SWAP6 DUP7 DUP7 DUP4 SUB ADD PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x177 JUMP JUMPDEST SWAP1 DUP5 DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x177 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x6 PUSH1 0x1 PUSH1 0x98 SHL ADD GAS STATICCALL PUSH2 0x178D PUSH2 0xF08 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x1796 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1CDA59DB8E8819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x17F1 DUP2 PUSH2 0x79C PUSH1 0x20 DUP3 ADD SWAP5 PUSH1 0x20 DUP7 MSTORE PUSH1 0x40 DUP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x177 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x98 SHL ADD GAS STATICCALL PUSH2 0x1805 PUSH2 0xF08 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x180E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1C985B991BDB509E5D195CCE8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x185D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x122 JUMPI DUP1 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 DUP2 GT PUSH2 0x122 JUMPI DUP2 PUSH2 0x18A1 SWAP2 DUP5 ADD PUSH2 0xF38 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x122 JUMPI PUSH2 0x367 SWAP3 ADD PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP3 MSTORE PUSH2 0x18D5 DUP3 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 MLOAD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1908 JUMPI JUMP JUMPDEST PUSH2 0x18E5 JUMP JUMPDEST PUSH5 0x1000003D0 NOT SWAP1 DUP2 SUB SWAP2 SWAP1 DUP3 GT PUSH2 0x1908 JUMPI JUMP INVALID BLOCKHASH JUMPI DUP8 STATICCALL SLT 0xA8 0x23 0xE0 CALLCODE 0xB7 PUSH4 0x1CC41B3B 0xA8 DUP3 DUP12 CALLER 0x21 0xCA DUP2 GT GT STATICCALL PUSH22 0xCD3AA3BB5ACEB10E2D527612073B26EECDFD717E6A32 0xC DELEGATECALL 0x4B BLOBBASEFEE STATICCALL 0xC2 0xB0 PUSH20 0x2D9FCBE2B7FA0CF6A2646970667358221220840E 0xA7 LOG3 BLOBHASH RETURNDATACOPY CALL 0xE7 0x29 0xA7 PUSH1 0xB 0xF EXTCODEHASH SLT 0xCC DUP1 PUSH17 0x7BF5E06BE7E1B1AA975265AA1D8264736F PUSH13 0x63430008180033000000000000 ","sourceMap":"374:5591:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;374:5591:16;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;374:5591:16;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;374:5591:16;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;-1:-1:-1;;374:5591:16;;;;;;:::i;:::-;-1:-1:-1;;;;;374:5591:16;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;4562:1401;374:5591;;;;;;:::i;:::-;4562:1401;;;;:::i;:::-;374:5591;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;374:5591:16;;;;3604:36;374:5591;;;;;:::i;:::-;1500:62:2;;:::i;:::-;374:5591:16;;-1:-1:-1;374:5591:16;3604:14;374:5591;;;-1:-1:-1;374:5591:16;;;;;;;;;;;;;;;;3604:36;374:5591;;;;;;;-1:-1:-1;;374:5591:16;;;;;;-1:-1:-1;374:5591:16;3804:14;374:5591;;;;;-1:-1:-1;374:5591:16;;;;;;;;;;;;;;;;;-1:-1:-1;;374:5591:16;;;;3427:41;374:5591;;;;;:::i;:::-;1500:62:2;;:::i;:::-;374:5591:16;;-1:-1:-1;374:5591:16;3427:14;374:5591;;;-1:-1:-1;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;374:5591:16;3903:14;374:5591;;;;-1:-1:-1;374:5591:16;;;;;;4197:12;374:5591;;;-1:-1:-1;;;4230:56:16;;;;;;;;;;374:5591;;;;4230:56;;;-1:-1:-1;;;;;;;;;374:5591:16;;4230:56;374:5591;4230:56;:::i;:::-;4197:95;;;;;;;:::i;:::-;374:5591;;;;;;4410:37;374:5591;;;;4410:37;;;;;;:::i;:::-;374:5591;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4230:56;374:5591;;;;;;;;;;;;-1:-1:-1;;;374:5591:16;;;;;;;;;;;;;-1:-1:-1;;;374:5591:16;;;;;;;;;;;;;-1:-1:-1;;374:5591:16;;;;3241:39;374:5591;;:::i;:::-;;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;374:5591:16;;;;;;-1:-1:-1;374:5591:16;3241:9;374:5591;;;-1:-1:-1;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;374:5591:16;;-1:-1:-1;;;;;;374:5591:16;;;;;;-1:-1:-1;;;;;374:5591:16;3052:40:2;374:5591:16;;3052:40:2;374:5591:16;;;;;;;;;;;-1:-1:-1;;374:5591:16;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:2;;;;;:::i;:::-;374:5591:16;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;2107:24;374:5591;2107:24;;374:5591;;;;;;;;;;;;2090:41;374:5591;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;374:5591:16;;;;;2090:41;374:5591;;;;-1:-1:-1;;374:5591:16;;-1:-1:-1;;;;;;;;;;;374:5591:16;-1:-1:-1;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;374:5591:16;;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;2349:26:16;;374:5591;;2349:26;;;;;;374:5591;;;;;-1:-1:-1;374:5591:16;;;;2349:26;;;;;;;:::i;:::-;374:5591;2339:37;;2305:71;374:5591;;;;;;;;-1:-1:-1;;374:5591:16;;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;1337:28:16;374:5591;;;;;:::i;:::-;;;;1337:28;:::i;:::-;374:5591;;;;;;13342:21:1;;;1625:42;13342:21;;;1625:42;;;374:5591:16;1721:42:1;;;1625;374:5591:16;1625:42:1;;;;;;;;;:::i;:::-;13342:21;374:5591:16;;13342:21:1;;;;;;:::i;:::-;13293:71;;-1:-1:-1;;;;;13293:71:1;;;;:::i;:::-;1625:42;;;;374:5591:16;13438:35:1;374:5591:16;;;;;;13438:35:1;;;;;;:::i;:::-;374:5591:16;;;;;:::i;:::-;;;;1568:24;;;;374:5591;;:::i;:::-;;;:::i;:::-;;;;1618:24;;374:5591;;:::i;:::-;;;1625:42:1;374:5591:16;;-1:-1:-1;;;1625:42:1;;374:5591:16;1625:42:1;;;;;;;;;374:5591:16;1625:42:1;374:5591:16;;;1625:42:1;;;;374:5591:16;;;;;;-1:-1:-1;;374:5591:16;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;374:5591:16;1817:29;;374:5591;;;;;1890:30;374:5591;;;1890:30;374:5591;-1:-1:-1;374:5591:16;;;;;-1:-1:-1;;;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;1500:62:2;;;:::i;:::-;2926:31:16;374:5591;;2971:26;;374:5591;;2971:26;;;;;;374:5591;;;;;-1:-1:-1;374:5591:16;;;;2971:26;;;;;;;:::i;:::-;374:5591;2961:37;;2926:72;374:5591;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;-1:-1:-1;;;374:5591:16;;2971:26;374:5591;;;;;;;;;-1:-1:-1;;;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;374:5591:16;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;2309:2:0;374:5591:16;;2296:15:0;2292:65;;2309:2;2367:125;;;374:5591:16;;;;;;;;;;;2505:28:0;1520:4;1510:14;;;:32;;;374:5591:16;1506:91:0;;248:66;;;374:5591:16;;;786:257:0;;374:5591:16;;;;;;516:12:0;;374:5591:16;;516:12:0;;;374:5591:16;1669:20:0;1700:1;1669:20;;;;;1659:39;;1652:58;516:12;;;374:5591:16;-1:-1:-1;;;;;516:12:0;;;374:5591:16;516:12:0;;;;374:5591:16;;;;786:257:0;;;516:12;786:257;:::i;:::-;741:312;;524:3;741:312;;;;;:::i;:::-;1068:8;;1064:35;;1873:16;1874:10;1124:15;2738:23;1124:15;;:::i;:::-;1874:10;;;:::i;:::-;394:66;;;;1873:16;1869:66;;2738:23;:::i;:::-;374:5591:16;;:::i;:::-;;;;;;;;;:::i;1869:66:0:-;1914:10;;;;:::i;:::-;1869:66;2738:23;:::i;1064:35::-;374:5591:16;;-1:-1:-1;;;1085:14:0;;374:5591:16;;1085:14:0;1506:91;374:5591:16;;-1:-1:-1;;;1563:34:0;;374:5591:16;;1563:34:0;1510:32;1528:14;1538:4;1528:14;;;1510:32;;374:5591:16;-1:-1:-1;;;374:5591:16;;;;;;;;2292:65:0;374:5591:16;;-1:-1:-1;;;2320:37:0;;374:5591:16;;2320:37:0;374:5591:16;;;;;;-1:-1:-1;;374:5591:16;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;374:5591:16;;;2627:22:2;;2623:91;;3004:6;374:5591:16;;-1:-1:-1;;;;;;374:5591:16;;;;;;3004:6:2;;374:5591:16;3052:40:2;3004:6;;3052:40;374:5591:16;;2623:91:2;374:5591:16;;-1:-1:-1;;;2672:31:2;;-1:-1:-1;374:5591:16;2672:31:2;;374:5591:16;;;2672:31:2;374:5591:16;;;;;;;;;;;;;-1:-1:-1;374:5591:16;;;;;;;;-1:-1:-1;;374:5591:16;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;:::o;:::-;516:12:0;374:5591:16;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;5469:22;374:5591;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;5469:22;-1:-1:-1;374:5591:16;-1:-1:-1;;;;;;;;;;;374:5591:16;-1:-1:-1;374:5591:16;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;374:5591:16;;;-1:-1:-1;;374:5591:16;;;;;;;;-1:-1:-1;374:5591:16:o;:::-;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;374:5591:16;;;;;;-1:-1:-1;;374:5591:16;;;;:::o;:::-;;;;;;;:::i;:::-;4999:1;374:5591;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;4562:1401::-;5270:42;5669:197;4562:1401;;;;;;;;374:5591;;;;;4899:26;;;;;;;;;;;:::i;:::-;;374:5591;4899:26;374:5591;;4899:26;;;;;;;;:::i;:::-;374:5591;4889:37;;;4971:29;;;;5135:73;374:5591;5025:30;374:5591;;5025:30;374:5591;;5025:30;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;374:5591;5015:41;;4971:110;374:5591;;5135:73;;;374:5591;;;;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;;;;;5135:73;;;;;;;;;:::i;:::-;374:5591;5112:106;;374:5591;5270:42;374:5591;;5270:42;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;374:5591;5260:53;;374:5591;5811:29;5364:201;374:5591;;5452:40;;374:5591;5452:40;;;374:5591;:::i;:::-;5452:40;;;;;;;;:::i;:::-;374:5591;;5506:33;;;374:5591;;;5506:33;;374:5591;;;;5506:33;374:5591;5506:33;374:5591;;:::i;:::-;5364:201;;:::i;:::-;374:5591;5592:37;5600:28;374:5591;;:::i;:::-;5600:28;:::i;:::-;5592:37;:::i;:::-;374:5591;5811:29;374:5591;;;5757:40;;;374:5591;5757:40;;;374:5591;:::i;:::-;5757:40;;;;;;;;:::i;:::-;374:5591;5811:29;;;;;374:5591;;;;;;;;;;;;;;;5669:197;5877:79;;;;4562:1401;:::o;4971:110::-;;;5135:73;4999:1;4971:110;;374:5591;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;374:5591:16;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;374:5591:16;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;2090:41;-1:-1:-1;;374:5591:16;2090:41;-1:-1:-1;374:5591:16;-1:-1:-1;;;;;;;;;;;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;374:5591:16;;;;;;;;;;;;:::o;:::-;-1:-1:-1;374:5591:16;;-1:-1:-1;374:5591:16;-1:-1:-1;;;;;;;;;;;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;374:5591:16;;;;;;;;;;;;:::o;:::-;-1:-1:-1;374:5591:16;1602:40;-1:-1:-1;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;374:5591:16;;;;;;;;;;;;:::o;:::-;-1:-1:-1;374:5591:16;;-1:-1:-1;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;374:5591:16;;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;1551:41;374:5591;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2090:41;374:5591;;;;-1:-1:-1;;374:5591:16;;-1:-1:-1;;;;;;;;;;;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;374:5591:16;;;;;;;1602:40;374:5591;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:40;374:5591;;;;;:::i;:::-;1602:40;374:5591;;;;-1:-1:-1;;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:40;374:5591;;;;;;;;;;1602:40;374:5591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:5591:16;3057:22;374:5591;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3057:22;-1:-1:-1;374:5591:16;-1:-1:-1;;;;;;;;;;;374:5591:16;-1:-1:-1;374:5591:16;;;;;;;-1:-1:-1;374:5591:16;;-1:-1:-1;;;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2620:14:16;;374:5591;2620:14;374:5591;;;;:::i;:::-;;;;;;;2620:14;374:5591;;;2620:14;;;;374:5591;;;;;;;;;;;;;:::i;:::-;;;;2620:14;-1:-1:-1;374:5591:16;-1:-1:-1;;;;;;;;;;;374:5591:16;-1:-1:-1;374:5591:16;;;;;;;-1:-1:-1;374:5591:16;;-1:-1:-1;;;374:5591:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:5591:16;;;;;;16097:399:1;1721:42;16367:50;-1:-1:-1;16097:399:1;;;;374:5591:16;;16367:50:1;;;1721:42;;16367:50;;;1721:42;;;374:5591:16;1721:42:1;;;;;374:5591:16;1721:42:1;;;;;;;;:::i;:::-;374:5591:16;;1721:42:1;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;16367:50::-;16331:96;;-1:-1:-1;;;;;16331:96:1;;;;:::i;:::-;1721:42;;;;16097:399;:::o;1721:42::-;374:5591:16;;-1:-1:-1;;;1721:42:1;;16367:50;5391:47:16;1721:42:1;;;;;;;374:5591:16;-1:-1:-1;;;374:5591:16;;;1721:42:1;;;;5994:325;-1:-1:-1;5994:325:1;;374:5591:16;;6203:26:1;;1237:42;1358:2:16;6203:26:1;;374:5591:16;1358:2;374:5591;;;1237:42:1;;;;;;;;;:::i;6203:26::-;6166:73;;-1:-1:-1;;;;;6166:73:1;;;;:::i;:::-;1237:42;;;;5994:325;:::o;1237:42::-;374:5591:16;;-1:-1:-1;;;1237:42:1;;1358:2:16;1237:42:1;;;;;;;;374:5591:16;-1:-1:-1;;;374:5591:16;;;1237:42:1;;;;1796:162:2;1710:6;374:5591:16;-1:-1:-1;;;;;374:5591:16;735:10:7;1855:23:2;1851:101;;1796:162::o;1851:101::-;374:5591:16;;-1:-1:-1;;;1901:40:2;;735:10:7;1901:40:2;;;374:5591:16;;;1901:40:2;1625:42:1;;;;;;;;;;;;;;-1:-1:-1;;;;;1625:42:1;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;2977:241:0:-;374:5591:16;;3123:22:0;;;;374:5591:16;;;;;;;;3123:22:0;;;;;:::i;:::-;374:5591:16;;3113:33:0;;-1:-1:-1;;;;;374:5591:16;;2977:241:0:o;394:66::-;374:5591:16;;;394:66:0;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;-1:-1:-1;;394:66:0;;;;;;;;;:::o"},"methodIdentifiers":{"generateKey()":"922dd7d9","getOpinion(uint256)":"4f8dd40a","getSigningKeypairPrivateKey(string)":"aa775b4a","getSigningKeypairPublicKey()":"e498de5f","isKernelAllowed(uint256)":"48d08eeb","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setKernel(uint256,bool)":"270e7c2f","setOpinionMaker(address)":"95f7b6ab","setRuntimeDigest(bytes32,bool)":"4cf0d40a","setSigningKeypair(bytes,bytes)":"7355f88b","setSigningKeypairRetrievalPassword(string)":"7998efb8","setWhitelist(address,bool)":"53d6fd59","sign(address,bytes,bytes,bytes,bytes)":"09eef4a5","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_opinionMaker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"expmod_Error\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"k256Decompress_Invalid_Length_Error\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"k256DeriveY_Invalid_Prefix_Error\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"generateKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"kernelId\",\"type\":\"uint256\"}],\"name\":\"getOpinion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"}],\"name\":\"getSigningKeypairPrivateKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigningKeypairPublicKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"kernelId\",\"type\":\"uint256\"}],\"name\":\"isKernelAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"kernelId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"setKernel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOpinionMaker\",\"type\":\"address\"}],\"name\":\"setOpinionMaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runtimeDigest\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"setRuntimeDigest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"privKey\",\"type\":\"bytes\"}],\"name\":\"setSigningKeypair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"}],\"name\":\"setSigningKeypairRetrievalPassword\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"kernelNodePubKey\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"setWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"functionParams\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"kernelParamObjects\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"kernelResponses\",\"type\":\"bytes\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CustomTokenAuthority.sol\":\"CustomTokenAuthority\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@oasisprotocol/sapphire-contracts/contracts/EthereumUtils.sol\":{\"keccak256\":\"0x79e34844793f4a8970d31eb4cbdd91e060fb93da4cbd28b7b8aad5c22e1f6666\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f40fdf3c56b34ded8ba2e810e9464eafdd184a29031c5322cb8ff33ca0f4a8ef\",\"dweb:/ipfs/QmRC1fBpi7yETwN2ZxeDf1ZBgtwRiHWzQ1DYfUJ2jxWkok\"]},\"@oasisprotocol/sapphire-contracts/contracts/Sapphire.sol\":{\"keccak256\":\"0x81a0aa5766f7c48ea799114f44e902b2eb11f21808db23d56b6ca9edd48b8f59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a94bd0c5263e98788d38bf7b6c24781dac3df4d5cb14045f70d14e208719c292\",\"dweb:/ipfs/QmZKEwnG9a9uPbgWCPVcbW7WGTy53Su6P1DTV95goPs4yU\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"contracts/CustomTokenAuthority.sol\":{\"keccak256\":\"0x47fa0937ffec15b879427ad8900947667509b98435609e7e5315f556cb6c7a34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a321f677ad18c7cfe895e1c2a0c72b3631cf3e54dd9543118aeafd06bcaba20\",\"dweb:/ipfs/QmUUoMTPi9eJh1XAVrDMDHu4Dh7ys9kjc7qAUf1e1uiaUt\"]}},\"version\":1}"}},"contracts/KRNL.sol":{"KRNLTestToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"DistributionStarted","type":"event"},{"anonymous":false,"inputs":[],"name":"DistributionStopped","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_address","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_address","type":"address"}],"name":"Whitelisted","type":"event"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"addToWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_addresses","type":"address[]"}],"name":"addToWhitelistBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"distributionStarted_","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startDistribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stopDistribution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"whitelist_","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x403 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP1 DUP4 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR PUSH3 0x3ED JUMPI DUP4 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 SWAP1 PUSH15 0x25A92726102A32B9BA102A37B5B2B7 PUSH1 0x89 SHL DUP3 DUP3 ADD MSTORE DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT DUP3 DUP3 GT OR PUSH3 0x3ED JUMPI DUP6 MSTORE PUSH1 0x4 SWAP4 DUP5 DUP2 MSTORE PUSH4 0x12D49393 PUSH1 0xE2 SHL DUP5 DUP3 ADD MSTORE DUP3 MLOAD DUP3 DUP2 GT PUSH3 0x3D8 JUMPI PUSH1 0x3 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x1 SWAP6 DUP7 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x3CD JUMPI JUMPDEST DUP9 DUP6 LT EQ PUSH3 0x3B8 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x362 JUMPI JUMPDEST POP DUP9 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2FB JUMPI PUSH1 0x0 SWAP3 PUSH3 0x2EF JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP4 SSTORE JUMPDEST DUP1 MLOAD SWAP4 DUP5 GT PUSH3 0x2DA JUMPI DUP7 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x2CF JUMPI JUMPDEST DUP8 DUP3 LT EQ PUSH3 0x2BA JUMPI DUP3 DUP2 GT PUSH3 0x26F JUMPI JUMPDEST POP DUP6 SWAP2 DUP5 GT PUSH1 0x1 EQ PUSH3 0x204 JUMPI SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x1F8 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST CALLER ISZERO PUSH3 0x1E1 JUMPI PUSH1 0x5 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x2 SLOAD PUSH3 0xF4240 SWAP3 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x1CC JUMPI POP PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x2 SSTORE CALLER DUP4 MSTORE DUP3 DUP2 MSTORE DUP5 DUP4 KECCAK256 DUP5 DUP2 SLOAD ADD SWAP1 SSTORE DUP5 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 MLOAD PUSH2 0xD2E SWAP1 DUP2 PUSH3 0x409 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x111 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP3 DUP8 PUSH1 0x0 MSTORE DUP5 DUP8 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 JUMPDEST DUP10 DUP10 DUP4 DUP4 LT PUSH3 0x257 JUMPI POP POP POP LT PUSH3 0x23C JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0x121 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x22D JUMP JUMPDEST DUP7 DUP7 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP ADD PUSH3 0x219 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP4 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP9 LT PUSH3 0x2B0 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x2A3 JUMPI POP POP PUSH3 0xF5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP7 SWAP1 PUSH3 0x293 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x28A JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE3 JUMP JUMPDEST PUSH1 0x41 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xB7 JUMP JUMPDEST SWAP1 DUP9 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP8 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x34B JUMPI POP POP DUP5 GT PUSH3 0x332 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xC9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x324 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP13 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x311 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP7 LT PUSH3 0x3AE JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x39E JUMPI POP POP PUSH3 0xA0 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x38E JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x380 JUMP JUMPDEST PUSH1 0x22 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0x89 JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0xA43 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x99A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x97B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x888 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0x547CF1B6 EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0xA6177139 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xD83623DD EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xDFFBBEF5 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xE56A7C5D EQ PUSH2 0x191 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH2 0x118 PUSH2 0xB83 JUMP JUMPDEST SWAP1 PUSH2 0x121 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x177 JUMPI POP POP PUSH1 0x5 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1BC PUSH2 0xB83 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CF JUMPI PUSH2 0x1EE PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE SWAP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x286 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x286 JUMPI PUSH2 0x255 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND PUSH1 0x8 SSTORE PUSH32 0xBE5ADF618CBDB160D8186C8F607A42F19897EC0D80FDBC9565484B3F09FBA72F DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x2A7 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x286 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x286 JUMPI PUSH2 0x2EB PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH32 0xCAEC521E84E0F554A179E69C042F43833410C17AF29A4385F244C61E24D3759A DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x34A PUSH2 0xB83 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x7 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x20 SWAP1 PUSH2 0x387 PUSH2 0x37D PUSH2 0xB83 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xBEE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x468 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x464 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x464 JUMPI DUP2 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x460 JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x460 JUMPI PUSH2 0x3E7 PUSH2 0xCCC JUMP JUMPDEST DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x3F4 JUMPI DUP6 DUP1 RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x413 PUSH2 0x40E DUP5 DUP9 DUP9 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST AND DUP9 MSTORE PUSH1 0x6 DUP7 MSTORE DUP7 DUP9 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 OR SWAP1 SSTORE PUSH2 0x435 PUSH2 0x40E DUP4 DUP8 DUP8 PUSH2 0xBB4 JUMP JUMPDEST AND PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 DUP9 DUP1 LOG2 ADD PUSH2 0x3E9 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1CF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x584 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x571 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x555 JUMPI POP PUSH1 0x1 EQ PUSH2 0x500 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x4ED JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x4E9 SWAP3 MSTORE DUP3 PUSH2 0xB3A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x541 JUMPI POP POP POP POP DUP4 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x4B7 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x52B JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP CODESIZE DUP1 DUP1 PUSH2 0x4B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x498 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x286 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x286 JUMPI PUSH2 0x5D0 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x63C PUSH2 0xB83 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1CF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0x82A JUMPI CALLER DUP3 MSTORE PUSH1 0x20 PUSH1 0x6 DUP2 MSTORE PUSH1 0xFF DUP5 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x7F5 JUMPI CALLER DUP4 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0xFF DUP5 DUP5 KECCAK256 SLOAD AND PUSH2 0x7BA JUMPI CALLER DUP4 MSTORE PUSH1 0x7 DUP2 MSTORE DUP4 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 ISZERO PUSH2 0x7A4 JUMPI CALLER ISZERO PUSH2 0x78E JUMPI DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP5 PUSH2 0x3E8 SWAP4 DUP5 DUP8 LT PUSH2 0x76D JUMPI POP DUP5 SWAP6 DUP2 PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 SWAP6 SWAP7 MSTORE DUP7 DUP5 MSTORE PUSH2 0x3E7 NOT ADD DUP3 DUP8 KECCAK256 SSTORE CALLER DUP7 MSTORE DUP2 DUP7 KECCAK256 DUP6 DUP2 SLOAD ADD SWAP1 SSTORE DUP2 MLOAD SWAP1 DUP6 DUP3 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 CALLER SWAP4 LOG3 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP5 DUP8 PUSH1 0x64 SWAP4 DUP6 MLOAD SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP4 SWAP2 POP MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP4 SWAP2 POP MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151BDAD95B9CC8185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081BDB881DDA1A5D195B1A5CDD PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973747269627574696F6E206E6F7420737461727465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x286 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x286 JUMPI PUSH2 0x8A3 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x8AB PUSH2 0xB9E JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 SUB PUSH2 0x8E7 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x387 DUP10 DUP10 DUP10 PUSH2 0xBEE JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x94F JUMPI DUP2 ISZERO PUSH2 0x938 JUMPI CALLER ISZERO PUSH2 0x921 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x387 DUP8 PUSH2 0x8D9 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18D JUMPI PUSH2 0x9B3 PUSH2 0xB83 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xA2C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xA15 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 SWAP2 POP DUP4 CALLVALUE PUSH2 0x18D JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18D JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0xB30 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x571 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xB14 JUMPI POP PUSH1 0x1 EQ PUSH2 0xABE JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x4ED JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x4E9 SWAP3 MSTORE DUP3 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0xB00 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x4B7 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0xAEA JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x4B7 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB6F JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB99 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB99 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xB99 JUMPI SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xCB3 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xC9A JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xC68 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCE0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP CODECOPY CREATE MSTORE8 0x1E PC 0xC9 GT 0xBE SWAP4 0xEB PREVRANDAO PUSH31 0x4835BC3CE9D19EE0B7AE969E84CBEE201D1D8464736F6C6343000818003300 ","sourceMap":"168:1777:17:-:0;;;;;;-1:-1:-1;;;;;168:1777:17;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;168:1777:17;;;;;;;;;;;1667:13:4;168:1777:17;;;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;;;;;;;;-1:-1:-1;168:1777:17;;;;-1:-1:-1;;;;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;;;;;670:10;1273:26:2;1269:95;;3004:6;168:1777:17;;670:10;-1:-1:-1;;;;;;168:1777:17;;;;;;;-1:-1:-1;;;;;168:1777:17;3052:40:2;-1:-1:-1;;3052:40:2;6233:21:4;168:1777:17;710:7;168:1777;;;;;;;;;;-1:-1:-1;168:1777:17;7083:25:4;168:1777:17;6233:21:4;168:1777:17;670:10;168:1777;;;;;;;;;;;;;;;;;;;670:10;7083:25:4;;168:1777:17;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;-1:-1:-1;168:1777:17;1269:95:2;168:1777:17;-1:-1:-1;168:1777:17;;;1322:31:2;;;;;;;;168:1777:17;1322:31:2;168:1777:17;;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;-1:-1:-1;168:1777:17;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;;;-1:-1:-1;168:1777:17;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;-1:-1:-1;168:1777:17;;;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;-1:-1:-1;168:1777:17;;-1:-1:-1;168:1777:17;;;;;;;;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;;-1:-1:-1;;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;-1:-1:-1;168:1777:17;;;;;-1:-1:-1;168:1777:17;;;;;-1:-1:-1;168:1777:17;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2947,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_7028":{"entryPoint":2974,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":2874,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_address_dyn_calldata":{"entryPoint":2996,"id":null,"parameterSlots":3,"returnSlots":1},"fun_checkOwner":{"entryPoint":3276,"id":1240,"parameterSlots":0,"returnSlots":0},"fun_transfer":{"entryPoint":3054,"id":1685,"parameterSlots":3,"returnSlots":0},"read_from_calldatat_address":{"entryPoint":3034,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde0314610a4357508063095ea7b31461099a57806318160ddd1461097b57806323b872dd14610888578063313ce5671461086d57806348c54b9d1461066f578063547cf1b61461064b57806370a0823114610614578063715018a6146105b75780638da5cb5b1461058e57806395d89b411461046c578063a61771391461038e578063a9059cbb1461035d578063c884ef831461031f578063d83623dd146102d2578063dd62ed3e14610289578063dffbbef51461023c578063e43252d7146101d3578063e56a7c5d146101915763f2fde38b146100ff57600080fd5b3461018d57602036600319011261018d57610118610b83565b90610121610ccc565b6001600160a01b03918216928315610177575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101cf5760203660031901126101cf5760209160ff9082906001600160a01b036101bc610b83565b1681526006855220541690519015158152f35b5080fd5b5050346101cf5760203660031901126101cf576101ee610b83565b6101f6610ccc565b6001600160a01b03168083526006602052908220805460ff191660011790557faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a548280a280f35b8334610286578060031936011261028657610255610ccc565b60ff19600854166008557fbe5adf618cbdb160d8186c8f607a42f19897ec0d80fdbc9565484b3f09fba72f8180a180f35b80fd5b5050346101cf57806003193601126101cf57806020926102a7610b83565b6102af610b9e565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b83346102865780600319360112610286576102eb610ccc565b600160ff1960085416176008557fcaec521e84e0f554a179e69c042f43833410c17af29a4385f244c61e24d3759a8180a180f35b5050346101cf5760203660031901126101cf5760209160ff9082906001600160a01b0361034a610b83565b1681526007855220541690519015158152f35b5050346101cf57806003193601126101cf5760209061038761037d610b83565b6024359033610bee565b5160018152f35b503461018d57602090602060031936011261046857803567ffffffffffffffff91828211610464573660238301121561046457810135918211610460576024810190602436918460051b010111610460576103e7610ccc565b845b8281106103f4578580f35b6001906001600160a01b038061041361040e848888610bb4565b610bda565b16885260068652868820805460ff19168417905561043561040e838787610bb4565b167faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a548880a2016103e9565b8480fd5b8580fd5b8380fd5b509190346101cf57816003193601126101cf5780519082845460018160011c9060018316928315610584575b6020938484108114610571578388529081156105555750600114610500575b505050829003601f01601f191682019267ffffffffffffffff8411838510176104ed57508291826104e9925282610b3a565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b83851061054157505050508301013880806104b7565b80548886018301529301928490820161052b565b60ff1916878501525050151560051b84010190503880806104b7565b634e487b7160e01b895260228a52602489fd5b91607f1691610498565b5050346101cf57816003193601126101cf5760055490516001600160a01b039091168152602090f35b83346102865780600319360112610286576105d0610ccc565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101cf5760203660031901126101cf5760209181906001600160a01b0361063c610b83565b16815280845220549051908152f35b5050346101cf57816003193601126101cf5760209060ff6008541690519015158152f35b508290346101cf57816003193601126101cf5760ff600854161561082a5733825260206006815260ff8484205416156107f5573383526007815260ff84842054166107ba5733835260078152838320805460ff191660011790556005546001600160a01b03169384156107a457331561078e5784845283825280842054946103e89384871061076d57508495817f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4309596528684526103e71901828720553386528186208581540190558151908582527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843393a3519283523392a280f35b848760649385519363391434e360e21b855284015260248301526044820152fd5b6024939150519163ec442f0560e01b8352820152fd5b60249391505191634b637e8f60e11b8352820152fd5b835162461bcd60e51b8152918201526016602482015275151bdad95b9cc8185b1c9958591e4818db185a5b595960521b604482015260649150fd5b835162461bcd60e51b815291820152601060248201526f139bdd081bdb881dda1a5d195b1a5cdd60821b604482015260649150fd5b606490602084519162461bcd60e51b8352820152601860248201527f446973747269627574696f6e206e6f74207374617274656400000000000000006044820152fd5b5050346101cf57816003193601126101cf5751908152602090f35b508234610286576060366003190112610286576108a3610b83565b6108ab610b9e565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983036108e7575b602088610387898989610bee565b86831061094f57811561093857331561092157508252600160209081528683203384528152918690209085900390558290610387876108d9565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101cf57816003193601126101cf576020906002549051908152f35b503461018d578160031936011261018d576109b3610b83565b602435903315610a2c576001600160a01b0316918215610a1557508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b849150833461018d578260031936011261018d578260035460018160011c9060018316928315610b30575b602093848410811461057157838852908115610b145750600114610abe57505050829003601f01601f191682019267ffffffffffffffff8411838510176104ed57508291826104e9925282610b3a565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b838510610b0057505050508301018580806104b7565b805488860183015293019284908201610aea565b60ff1916878501525050151560051b84010190508580806104b7565b91607f1691610a6e565b6020808252825181830181905290939260005b828110610b6f57505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610b4d565b600435906001600160a01b0382168203610b9957565b600080fd5b602435906001600160a01b0382168203610b9957565b9190811015610bc45760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b0381168103610b995790565b916001600160a01b03808416928315610cb35716928315610c9a5760009083825281602052604082205490838210610c68575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6005546001600160a01b03163303610ce057565b60405163118cdaa760e01b8152336004820152602490fdfea26469706673582212204239f0531e58c911be93eb447e4835bc3ce9d19ee0b7ae969e84cbee201d1d8464736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0xA43 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x99A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x97B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x888 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0x547CF1B6 EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0xA6177139 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xD83623DD EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xDFFBBEF5 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xE56A7C5D EQ PUSH2 0x191 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x18D JUMPI PUSH2 0x118 PUSH2 0xB83 JUMP JUMPDEST SWAP1 PUSH2 0x121 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x177 JUMPI POP POP PUSH1 0x5 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1BC PUSH2 0xB83 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CF JUMPI PUSH2 0x1EE PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE SWAP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x286 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x286 JUMPI PUSH2 0x255 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND PUSH1 0x8 SSTORE PUSH32 0xBE5ADF618CBDB160D8186C8F607A42F19897EC0D80FDBC9565484B3F09FBA72F DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x2A7 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x286 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x286 JUMPI PUSH2 0x2EB PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH32 0xCAEC521E84E0F554A179E69C042F43833410C17AF29A4385F244C61E24D3759A DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x34A PUSH2 0xB83 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x7 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x20 SWAP1 PUSH2 0x387 PUSH2 0x37D PUSH2 0xB83 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xBEE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x468 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x464 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x464 JUMPI DUP2 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x460 JUMPI PUSH1 0x24 DUP2 ADD SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x460 JUMPI PUSH2 0x3E7 PUSH2 0xCCC JUMP JUMPDEST DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x3F4 JUMPI DUP6 DUP1 RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x413 PUSH2 0x40E DUP5 DUP9 DUP9 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST AND DUP9 MSTORE PUSH1 0x6 DUP7 MSTORE DUP7 DUP9 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 OR SWAP1 SSTORE PUSH2 0x435 PUSH2 0x40E DUP4 DUP8 DUP8 PUSH2 0xBB4 JUMP JUMPDEST AND PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 DUP9 DUP1 LOG2 ADD PUSH2 0x3E9 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1CF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x584 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x571 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x555 JUMPI POP PUSH1 0x1 EQ PUSH2 0x500 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x4ED JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x4E9 SWAP3 MSTORE DUP3 PUSH2 0xB3A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x541 JUMPI POP POP POP POP DUP4 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x4B7 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x52B JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP CODESIZE DUP1 DUP1 PUSH2 0x4B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x498 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x286 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x286 JUMPI PUSH2 0x5D0 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x63C PUSH2 0xB83 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1CF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI PUSH1 0xFF PUSH1 0x8 SLOAD AND ISZERO PUSH2 0x82A JUMPI CALLER DUP3 MSTORE PUSH1 0x20 PUSH1 0x6 DUP2 MSTORE PUSH1 0xFF DUP5 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x7F5 JUMPI CALLER DUP4 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0xFF DUP5 DUP5 KECCAK256 SLOAD AND PUSH2 0x7BA JUMPI CALLER DUP4 MSTORE PUSH1 0x7 DUP2 MSTORE DUP4 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 ISZERO PUSH2 0x7A4 JUMPI CALLER ISZERO PUSH2 0x78E JUMPI DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP5 PUSH2 0x3E8 SWAP4 DUP5 DUP8 LT PUSH2 0x76D JUMPI POP DUP5 SWAP6 DUP2 PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 SWAP6 SWAP7 MSTORE DUP7 DUP5 MSTORE PUSH2 0x3E7 NOT ADD DUP3 DUP8 KECCAK256 SSTORE CALLER DUP7 MSTORE DUP2 DUP7 KECCAK256 DUP6 DUP2 SLOAD ADD SWAP1 SSTORE DUP2 MLOAD SWAP1 DUP6 DUP3 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 CALLER SWAP4 LOG3 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP5 DUP8 PUSH1 0x64 SWAP4 DUP6 MLOAD SWAP4 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP4 SWAP2 POP MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP4 SWAP2 POP MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151BDAD95B9CC8185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081BDB881DDA1A5D195B1A5CDD PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973747269627574696F6E206E6F7420737461727465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x286 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x286 JUMPI PUSH2 0x8A3 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x8AB PUSH2 0xB9E JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 SUB PUSH2 0x8E7 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x387 DUP10 DUP10 DUP10 PUSH2 0xBEE JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x94F JUMPI DUP2 ISZERO PUSH2 0x938 JUMPI CALLER ISZERO PUSH2 0x921 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x387 DUP8 PUSH2 0x8D9 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1CF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1CF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18D JUMPI PUSH2 0x9B3 PUSH2 0xB83 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xA2C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xA15 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 SWAP2 POP DUP4 CALLVALUE PUSH2 0x18D JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18D JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0xB30 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x571 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xB14 JUMPI POP PUSH1 0x1 EQ PUSH2 0xABE JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x4ED JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x4E9 SWAP3 MSTORE DUP3 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0xB00 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x4B7 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0xAEA JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x4B7 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB6F JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB99 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB99 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xB99 JUMPI SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xCB3 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xC9A JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xC68 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCE0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP CODECOPY CREATE MSTORE8 0x1E PC 0xC9 GT 0xBE SWAP4 0xEB PREVRANDAO PUSH31 0x4835BC3CE9D19EE0B7AE969E84CBEE201D1D8464736F6C6343000818003300 ","sourceMap":"168:1777:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:1777:17;;;;;;:::i;:::-;1500:62:2;;;:::i;:::-;-1:-1:-1;;;;;168:1777:17;;;;2627:22:2;;2623:91;;168:1777:17;;3004:6:2;168:1777:17;;;;;;;;3004:6:2;168:1777:17;;3052:40:2;;;;168:1777:17;;2623:91:2;168:1777:17;-1:-1:-1;;;2672:31:2;;;;;168:1777:17;;;;;2672:31:2;168:1777:17;;;;;;;;;;;;-1:-1:-1;;168:1777:17;;;;;;;;;;-1:-1:-1;;;;;168:1777:17;;:::i;:::-;;;;215:42;168:1777;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:1777:17;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;168:1777:17;;;;957:10;168:1777;;;;;;;-1:-1:-1;;168:1777:17;;;;;999:21;168:1777;;999:21;168:1777;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;168:1777:17;;1469:28;168:1777;;1469:28;168:1777;1512:21;;;;168:1777;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;1361:4:17;168:1777;;1338:27;168:1777;;;1338:27;168:1777;1380:21;;;;168:1777;;;;;;;;;;-1:-1:-1;;168:1777:17;;;;;;;;;;-1:-1:-1;;;;;168:1777:17;;:::i;:::-;;;;263:39;168:1777;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3459:5:4;168:1777:17;;:::i;:::-;;;735:10:7;;3459:5:4;:::i;:::-;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;1125:13:17;1140:21;;;;;;168:1777;;;1163:3;168:1777;;-1:-1:-1;;;;;168:1777:17;1193:13;;168:1777;1193:13;;;:::i;:::-;;:::i;:::-;168:1777;;;1182:10;168:1777;;;;;;;-1:-1:-1;;168:1777:17;;;;;1245:13;;;;;;:::i;:::-;168:1777;1233:26;;;;168:1777;1125:13;;168:1777;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;168:1777:17;;;;;-1:-1:-1;;168:1777:17;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;168:1777:17;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:1777:17;;;;;-1:-1:-1;;168:1777:17;;;;;;;;-1:-1:-1;168:1777:17;;;;;;-1:-1:-1;;;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:6:2;168:1777:17;;;-1:-1:-1;;;;;168:1777:17;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;3004:6;168:1777:17;;-1:-1:-1;;;;;;168:1777:17;;;;;;;-1:-1:-1;;;;;168:1777:17;3052:40:2;168:1777:17;;3052:40:2;168:1777:17;;;;;;;;;;-1:-1:-1;;168:1777:17;;;;;;;;-1:-1:-1;;;;;168:1777:17;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:32;168:1777;;;;;;;;;;;;;;;;;;;;;;;;;;1594:20;168:1777;;;;;1672:10;168:1777;;;1661:10;168:1777;;;;;;;;;;;1672:10;168:1777;;1723:7;168:1777;;;;;;;;;;1672:10;168:1777;;1723:7;168:1777;;;;;;;-1:-1:-1;;168:1777:17;1802:4;168:1777;;;1710:6:2;168:1777:17;-1:-1:-1;;;;;168:1777:17;;5476:18:4;;5472:86;;1672:10:17;5571:16:4;5567:86;;168:1777:17;;;;;;;;;;1847:4;;6340:19:4;;;;6336:115;;168:1777:17;;;;1905:31;168:1777;;;;;;;;;;;;;1672:10;168:1777;;;;;;;;;;;;;;;;;7083:25:4;1672:10:17;;7083:25:4;;168:1777:17;;;;1672:10;1905:31;;168:1777;;6336:115:4;168:1777:17;;;;;;6386:50:4;;;;;;;;168:1777:17;;;;;;;;;6386:50:4;5567:86;168:1777:17;;;;;5610:32:4;;;;;;;;168:1777:17;5610:32:4;5472:86;168:1777:17;;;;;5517:30:4;;;;;;;;168:1777:17;5517:30:4;168:1777:17;;;-1:-1:-1;;;168:1777:17;;;;;;;;;;;-1:-1:-1;;;168:1777:17;;;;;;-1:-1:-1;168:1777:17;;;;-1:-1:-1;;;168:1777:17;;;;;;;;;;;-1:-1:-1;;;168:1777:17;;;;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:1777:17;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;735:10:7;168:1777:17;;;;;;;;10600:17:4;;;10580:37;;10576:310;;168:1777:17;;4986:5:4;;;;;;:::i;10576:310::-;10637:24;;;10633:130;;9813:19;;9809:89;;735:10:7;9911:21:4;9907:90;;-1:-1:-1;168:1777:17;;;;;;;;;;735:10:7;168:1777:17;;;;;;;;;;;;;;;;4986:5:4;10576:310;;;9907:90;168:1777:17;;-1:-1:-1;;;9955:31:4;;;;;168:1777:17;;;;;9955:31:4;9809:89;168:1777:17;;-1:-1:-1;;;9855:32:4;;;;;168:1777:17;;;;;9855:32:4;10633:130;168:1777:17;;-1:-1:-1;;;10688:60:4;;735:10:7;10688:60:4;;;168:1777:17;;;;;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;10688:60:4;;;168:1777:17;;;;;;;;;;;;;;;;2927:12:4;168:1777:17;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:7;;9813:19:4;9809:89;;-1:-1:-1;;;;;168:1777:17;;9911:21:4;;9907:90;;735:10:7;;;168:1777:17;735:10:7;;168:1777:17;;8842:4:4;168:1777:17;;;;;;;;;;;;;;;;;10085:31:4;735:10:7;;10085:31:4;;168:1777:17;8842:4:4;168:1777:17;;;9907:90:4;168:1777:17;;-1:-1:-1;;;9955:31:4;;;;;168:1777:17;;;;;9955:31:4;9809:89;168:1777:17;;-1:-1:-1;;;9855:32:4;;;;;168:1777:17;;;;;9855:32:4;168:1777:17;;;;;;;;;;;;;;;;;1856:5:4;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;168:1777:17;;;;;-1:-1:-1;;168:1777:17;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1856:5:4;168:1777:17;;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:1777:17;;;;;-1:-1:-1;;168:1777:17;;;;;;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;168:1777:17;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;168:1777:17;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;168:1777:17;;;;;;;:::o;5393:300:4:-;;-1:-1:-1;;;;;168:1777:17;;;;5476:18:4;;5472:86;;168:1777:17;5571:16:4;;;5567:86;;6093:540;168:1777:17;;;;;;;;;;;6340:19:4;;;;6336:115;;168:1777:17;;;;;7083:25:4;168:1777:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:25:4;5393:300::o;6336:115::-;168:1777:17;;-1:-1:-1;;;6386:50:4;;-1:-1:-1;;;;;168:1777:17;;;;6386:50:4;;;168:1777:17;;;;;;;;;;;;;;;;10688:60:4;5567:86;168:1777:17;;-1:-1:-1;;;5610:32:4;;5492:1;5610:32;;;168:1777:17;;;5610:32:4;5472:86;168:1777:17;;-1:-1:-1;;;5517:30:4;;5492:1;5517:30;;;168:1777:17;;;5517:30:4;1796:162:2;1710:6;168:1777:17;-1:-1:-1;;;;;168:1777:17;735:10:7;1855:23:2;1851:101;;1796:162::o;1851:101::-;168:1777:17;;-1:-1:-1;;;1901:40:2;;735:10:7;1901:40:2;;;168:1777:17;;;1901:40:2"},"methodIdentifiers":{"addToWhitelist(address)":"e43252d7","addToWhitelistBatch(address[])":"a6177139","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","claimTokens()":"48c54b9d","claimed(address)":"c884ef83","decimals()":"313ce567","distributionStarted_()":"547cf1b6","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","startDistribution()":"d83623dd","stopDistribution()":"dffbbef5","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","whitelist_(address)":"e56a7c5d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DistributionStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DistributionStopped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"addToWhitelistBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributionStarted_\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist_\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KRNL.sol\":\"KRNLTestToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/KRNL.sol\":{\"keccak256\":\"0x16fe675072ef4ef758727544f089017e484af2e3a8a27a00cc022b223ad0f531\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ed4eeaf2af08f1d0aeb17107ea24353eb57fb422e07f6ec797a853387e3bd03\",\"dweb:/ipfs/QmXC2CvrzfkY5wvmJBszT4kc5oWLrBSwvz7phSfrWA8xS2\"]}},\"version\":1}"}},"contracts/KrnlRegistered.sol":{"KrnlRegistered":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenAuthorityPublicKey","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UnauthorizedTransaction","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"executed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAuthorityPublicKey","type":"address"}],"name":"setTokenAuthorityPublicKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenAuthorityPublicKey","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346100c657601f61041238819003918201601f19168301916001600160401b038311848410176100cb578084926020946040528339810103126100c657516001600160a01b0390818116908190036100c65733156100ad5760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600154161760015561033090816100e28239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004908136101561001657600080fd5b600092833560e01c9081634ba1cfe4146102a957508063715018a61461024c5780638da5cb5b14610224578063909dd26314610143578063d213d86b146100f65763f2fde38b1461006657600080fd5b346100f25760203660031901126100f2576001600160a01b038235818116939192908490036100ee576100976102ce565b83156100d857505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b50503461013f57602036600319011261013f57356001600160a01b0381169081900361013f576101246102ce565b6bffffffffffffffffffffffff60a01b600154161760015580f35b5080fd5b5082903461013f57602092836003193601126100f25767ffffffffffffffff81358181116100ee57366023820112156100ee57808301359180831161021157845193601f8401601f19908116603f01168501918211858310176101fe5750845281835236602483830101116100ee5781859260248893018386013783010152838251918051945b8581106101ed5750508160ff939481016002815203019020541690519015158152f35b8181018301518482015282016101ca565b634e487b7160e01b875260419052602486fd5b634e487b7160e01b865260418452602486fd5b83823461013f578160031936011261013f57905490516001600160a01b039091168152602090f35b83346102a657806003193601126102a6576102656102ce565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b84903461013f578160031936011261013f576001546001600160a01b03168152602090f35b6000546001600160a01b031633036102e257565b60405163118cdaa760e01b8152336004820152602490fdfea2646970667358221220370002567a85af97326a2d4d3ad65dba05b671b97bf3db83971fd626af7ffca364736f6c63430008180033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xC6 JUMPI PUSH1 0x1F PUSH2 0x412 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xCB JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xC6 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xC6 JUMPI CALLER ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP1 CALLER DUP3 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP4 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH2 0x330 SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4BA1CFE4 EQ PUSH2 0x2A9 JUMPI POP DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x909DD263 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xD213D86B EQ PUSH2 0xF6 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0xEE JUMPI PUSH2 0x97 PUSH2 0x2CE JUMP JUMPDEST DUP4 ISZERO PUSH2 0xD8 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x13F JUMPI PUSH2 0x124 PUSH2 0x2CE JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF2 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xEE JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xEE JUMPI DUP1 DUP4 ADD CALLDATALOAD SWAP2 DUP1 DUP4 GT PUSH2 0x211 JUMPI DUP5 MLOAD SWAP4 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP6 ADD SWAP2 DUP3 GT DUP6 DUP4 LT OR PUSH2 0x1FE JUMPI POP DUP5 MSTORE DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xEE JUMPI DUP2 DUP6 SWAP3 PUSH1 0x24 DUP9 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE DUP4 DUP3 MLOAD SWAP2 DUP1 MLOAD SWAP5 JUMPDEST DUP6 DUP2 LT PUSH2 0x1ED JUMPI POP POP DUP2 PUSH1 0xFF SWAP4 SWAP5 DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD MSTORE DUP3 ADD PUSH2 0x1CA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP5 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x13F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13F JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x2A6 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A6 JUMPI PUSH2 0x265 PUSH2 0x2CE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x13F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13F JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2E2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY STOP MUL JUMP PUSH27 0x85AF97326A2D4D3AD65DBA05B671B97BF3DB83971FD626AF7FFCA3 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"456:2288:18:-:0;;;;;;;;;;;;;-1:-1:-1;;456:2288:18;;;;-1:-1:-1;;;;;456:2288:18;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;456:2288:18;;;;;;;;;;887:10;1273:26:2;1269:95;;-1:-1:-1;456:2288:18;;;;;;;887:10;;456:2288;;;;-1:-1:-1;456:2288:18;;;887:10;;456:2288;;3052:40:2;-1:-1:-1;3052:40:2;;909:50:18;456:2288;;;909:50;456:2288;;;;;;;;1269:95:2;456:2288:18;;-1:-1:-1;;;1322:31:2;;-1:-1:-1;1322:31:2;;;456:2288:18;;;1322:31:2;456:2288:18;-1:-1:-1;456:2288:18;;;;;;-1:-1:-1;456:2288:18;;;;;-1:-1:-1;456:2288:18"},"deployedBytecode":{"functionDebugData":{"fun_checkOwner":{"entryPoint":718,"id":1240,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004908136101561001657600080fd5b600092833560e01c9081634ba1cfe4146102a957508063715018a61461024c5780638da5cb5b14610224578063909dd26314610143578063d213d86b146100f65763f2fde38b1461006657600080fd5b346100f25760203660031901126100f2576001600160a01b038235818116939192908490036100ee576100976102ce565b83156100d857505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b50503461013f57602036600319011261013f57356001600160a01b0381169081900361013f576101246102ce565b6bffffffffffffffffffffffff60a01b600154161760015580f35b5080fd5b5082903461013f57602092836003193601126100f25767ffffffffffffffff81358181116100ee57366023820112156100ee57808301359180831161021157845193601f8401601f19908116603f01168501918211858310176101fe5750845281835236602483830101116100ee5781859260248893018386013783010152838251918051945b8581106101ed5750508160ff939481016002815203019020541690519015158152f35b8181018301518482015282016101ca565b634e487b7160e01b875260419052602486fd5b634e487b7160e01b865260418452602486fd5b83823461013f578160031936011261013f57905490516001600160a01b039091168152602090f35b83346102a657806003193601126102a6576102656102ce565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b84903461013f578160031936011261013f576001546001600160a01b03168152602090f35b6000546001600160a01b031633036102e257565b60405163118cdaa760e01b8152336004820152602490fdfea2646970667358221220370002567a85af97326a2d4d3ad65dba05b671b97bf3db83971fd626af7ffca364736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4BA1CFE4 EQ PUSH2 0x2A9 JUMPI POP DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x909DD263 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xD213D86B EQ PUSH2 0xF6 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH2 0xEE JUMPI PUSH2 0x97 PUSH2 0x2CE JUMP JUMPDEST DUP4 ISZERO PUSH2 0xD8 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x13F JUMPI PUSH2 0x124 PUSH2 0x2CE JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF2 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xEE JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xEE JUMPI DUP1 DUP4 ADD CALLDATALOAD SWAP2 DUP1 DUP4 GT PUSH2 0x211 JUMPI DUP5 MLOAD SWAP4 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP6 ADD SWAP2 DUP3 GT DUP6 DUP4 LT OR PUSH2 0x1FE JUMPI POP DUP5 MSTORE DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xEE JUMPI DUP2 DUP6 SWAP3 PUSH1 0x24 DUP9 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE DUP4 DUP3 MLOAD SWAP2 DUP1 MLOAD SWAP5 JUMPDEST DUP6 DUP2 LT PUSH2 0x1ED JUMPI POP POP DUP2 PUSH1 0xFF SWAP4 SWAP5 DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD MSTORE DUP3 ADD PUSH2 0x1CA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP5 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x13F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13F JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x2A6 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A6 JUMPI PUSH2 0x265 PUSH2 0x2CE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x13F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13F JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2E2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY STOP MUL JUMP PUSH27 0x85AF97326A2D4D3AD65DBA05B671B97BF3DB83971FD626AF7FFCA3 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"456:2288:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;456:2288:18;;;;-1:-1:-1;;;;;456:2288:18;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;2627:22;;2623:91;;-1:-1:-1;;456:2288:18;;-1:-1:-1;;;;;;456:2288:18;;;;;;;3052:40:2;456:2288:18;;3052:40:2;456:2288:18;;2623:91:2;456:2288:18;-1:-1:-1;;;2672:31:2;;;;;456:2288:18;;;;;2672:31:2;456:2288:18;;;;;;;;;;;;;;;;-1:-1:-1;;456:2288:18;;;;;-1:-1:-1;;;;;456:2288:18;;;;;;;;1500:62:2;;:::i;:::-;456:2288:18;;;1071:50;456:2288;;;1071:50;456:2288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;456:2288:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;579:38;456:2288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;456:2288:18;;;;;;;;;-1:-1:-1;;;456:2288:18;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;456:2288:18;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;456:2288:18;;-1:-1:-1;;;;;;456:2288:18;;;;;;-1:-1:-1;;;;;456:2288:18;3052:40:2;456:2288:18;;3052:40:2;456:2288:18;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;456:2288:18;;;;;;1796:162:2;1710:6;456:2288:18;-1:-1:-1;;;;;456:2288:18;735:10:7;1855:23:2;1851:101;;1796:162::o;1851:101::-;456:2288:18;;-1:-1:-1;;;1901:40:2;;735:10:7;1901:40:2;;;456:2288:18;;;1901:40:2"},"methodIdentifiers":{"executed(bytes)":"909dd263","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setTokenAuthorityPublicKey(address)":"d213d86b","tokenAuthorityPublicKey()":"4ba1cfe4","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAuthorityPublicKey\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedTransaction\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"executed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAuthorityPublicKey\",\"type\":\"address\"}],\"name\":\"setTokenAuthorityPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAuthorityPublicKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KrnlRegistered.sol\":\"KrnlRegistered\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/KrnlRegistered.sol\":{\"keccak256\":\"0xdd1b210962c1b5f407473b6c059ad4113826474b153200308002119a7f9c2c5a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3daa36144c3dc718ff4d8232adf94b4dd6b1b9baf4206164b773abbbab65f59c\",\"dweb:/ipfs/QmPPKuxo8wJ1T7TWMF9U2zexxrUGm2x3T6nTz5UoSzGFe1\"]}},\"version\":1}"}}}}}