/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CustomTokenAuthority,
  CustomTokenAuthorityInterface,
} from "../../contracts/CustomTokenAuthority";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_opinionMaker",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "expmod_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "k256Decompress_Invalid_Length_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "k256DeriveY_Invalid_Prefix_Error",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "generateKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "kernelId",
        type: "uint256",
      },
    ],
    name: "getOpinion",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "password",
        type: "string",
      },
    ],
    name: "getSigningKeypairPrivateKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSigningKeypairPublicKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "kernelId",
        type: "uint256",
      },
    ],
    name: "isKernelAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "kernelId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    name: "setKernel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOpinionMaker",
        type: "address",
      },
    ],
    name: "setOpinionMaker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "runtimeDigest",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    name: "setRuntimeDigest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "pubKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "privKey",
        type: "bytes",
      },
    ],
    name: "setSigningKeypair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "password",
        type: "string",
      },
    ],
    name: "setSigningKeypairRetrievalPassword",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "kernelNodePubKey",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    name: "setWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "senderAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "functionParams",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "kernelParamObjects",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "kernelResponses",
        type: "bytes",
      },
    ],
    name: "sign",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200013757601f62001aff38819003918201601f19168301916001600160401b038311848410176200013c57808492604094855283398101031262000137576200005a6020620000528362000152565b920162000152565b6001600160a01b03918216919082156200011e57600080546001600160a01b0319808216861783559491908416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a316908115620000cd5760065416176006556040516119979081620001688239f35b60405162461bcd60e51b8152602060048201526024808201527f4f70696e696f6e206d616b657220616464726573732063616e6e6f74206265206044820152637a65726f60e01b6064820152608490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001375756fe6080604052600436101561001257600080fd5b60003560e01c806309eef4a514610107578063270e7c2f1461010257806348d08eeb146100fd5780634cf0d40a146100f85780634f8dd40a146100f357806353d6fd59146100ee578063715018a6146100e95780637355f88b146100e45780637998efb8146100df5780638da5cb5b146100da578063922dd7d9146100d557806395f7b6ab146100d0578063aa775b4a146100cb578063e498de5f146100c65763f2fde38b146100c157600080fd5b610b07565b6109b0565b6108f2565b61084f565b61073d565b610714565b6106d2565b61053a565b6104dc565b610485565b61036a565b6102fe565b6102cd565b610282565b6101d0565b600435906001600160a01b038216820361012257565b600080fd5b9181601f84011215610122578235916001600160401b038311610122576020838186019501011161012257565b60005b8381106101675750506000910152565b8181015183820152602001610157565b9060209161019081518092818552858086019101610154565b601f01601f1916010190565b949392916060926101b86101cb93608089526080890190610177565b9160208801528682036040880152610177565b930152565b346101225760a0366003190112610122576101e961010c565b6001600160401b0360243581811161012257610209903690600401610127565b505060443581811161012257610223903690600401610127565b926064358381116101225761023c903690600401610127565b90608435948511610122576102749561025c610264963690600401610127565b959094610d94565b906040949294519485948561019c565b0390f35b8015150361012257565b34610122576040366003190112610122576102cb6024356102a281610278565b6102aa611849565b600435600052600960205260406000209060ff801983541691151516179055565b005b34610122576020366003190112610122576004356000526009602052602060ff604060002054166040519015158152f35b34610122576040366003190112610122576102cb60243561031e81610278565b610326611849565b600435600052600860205260406000209060ff801983541691151516179055565b610367939260609215158252151560208201528160408201520190610177565b90565b346101225760208060031936011261012257600435806000526009825260ff6040600020541615610448576006546040516327c6ea0560e11b84820190815260248083019490945292815260009283926001600160a01b0316916103cd81610bf2565b51915afa906103da610f08565b91156104045781816103f59261027494518301019101610f7a565b60409391935193849384610347565b6064906040519062461bcd60e51b82526004820152601860248201527f4f70696e696f6e2072657472696576616c206661696c656400000000000000006044820152fd5b60405162461bcd60e51b815260048101839052601560248201527412d95c9b995b081a5cc81b9bdd08185b1b1bddd959605a1b6044820152606490fd5b34610122576040366003190112610122576102cb6104a161010c565b602435906104ae82610278565b6104b6611849565b60018060a01b0316600052600760205260406000209060ff801983541691151516179055565b3461012257600080600319360112610537576104f6611849565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b34610122576040366003190112610122576001600160401b036004358181116101225761056b903690600401610127565b9060243590838211610122576105aa61058b6105b3933690600401610127565b919092610596611849565b604051956105a387610bd7565b3691610fbd565b84523691610fbd565b90602090602081019283525190815193841161069f576001916105df856105da8554610c7d565b610ff4565b602091601f861160011461062957509380610615926102cb9660009261061e575b50508160011b916000199060031b1c19161790565b90555b5161119c565b015190503880610600565b60016000529190601f198616600080516020611942833981519152936000905b82821061068857505091849391876102cb98941061066f575b505050811b019055610618565b015160001960f88460031b161c19169055388080610662565b808786978294978701518155019601940190610649565b610bc1565b602060031982011261012257600435906001600160401b038211610122576106ce91600401610127565b9091565b34610122576106e0366106a4565b6106e8611849565b61070c60206040518381948383019687378101600083820152038084520182610c43565b519020600555005b34610122576000366003190112610122576000546040516001600160a01b039091168152602090f35b346101225760008060031936011261053757610757611849565b61076e60405161076681610c0d565b8281526117ca565b8180604051926020936107aa8161079c8782019461078c8660049052565b6040808401526060830190610177565b03601f198101835282610c43565b51906005600160981b015afa6107be610f08565b901561080a57906107da82828061080795518301019101611875565b90916107f46107e7610d34565b8481528383820152611400565b6107fc610d34565b9283528201526114e6565b80f35b60405162461bcd60e51b815260048101839052601b60248201527f67656e207369676e696e67206b6579706169723a206661696c656400000000006044820152606490fd5b346101225760203660031901126101225761086861010c565b610870611849565b6001600160a01b0316801561089c576bffffffffffffffffffffffff60a01b6006541617600655600080f35b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964206f70696e696f6e206d616b657220616464726573730000006044820152606490fd5b906020610367928181520190610177565b3461012257610900366106a4565b90610909611849565b6005549161093160206040518381948383019687378101600083820152038084520182610c43565b51902003610950576102746109446115df565b604051918291826108e1565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081c185cdcdddbdc9960821b6044820152606490fd5b906109a0602091949394604084526040840190610177565b6001600160a01b03909416910152565b3461012257600080600319360112610537576109ca611691565b906021825103610af557602182015191805115610ae1576020015160f81c90600282141580610ad6575b610ac457806401000003d019604051602081019160208352602060408301526020606083015280600781808a80098a0908608083015263400000f4600160fe1b0360a083015260c0808301919091528152610a4e81610c28565b519060055afa91610a5d610f08565b9215610ab257610a82610a7c610a75610a8b95610d71565b93846118fb565b60011690565b610aa2576118b8565b610a93611691565b61027460405192839283610988565b90610aac9061190d565b906118b8565b60405163102875ed60e01b8152600490fd5b60405163ab4be04160e01b8152600490fd5b5060038214156109f4565b634e487b7160e01b82526032600452602482fd5b604051636446a2c560e11b8152600490fd5b3461012257602036600319011261012257610b2061010c565b610b28611849565b6001600160a01b039081168015610b7657600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b604051631e4fbdf760e01b815260006004820152602490fd5b908060209392818452848401376000828201840152601f01601f1916010190565b916020610367938181520191610b8f565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761069f57604052565b606081019081106001600160401b0382111761069f57604052565b602081019081106001600160401b0382111761069f57604052565b60e081019081106001600160401b0382111761069f57604052565b90601f801991011681019081106001600160401b0382111761069f57604052565b916020916109a091959495604085526040850191610b8f565b90600182811c92168015610cad575b6020831014610c9757565b634e487b7160e01b600052602260045260246000fd5b91607f1691610c8c565b60025460009291610cc782610c7d565b91600190818116908115610d215750600114610ce257505050565b90919293506002600052600080516020611922833981519152906000915b848310610d0e575050500190565b8181602092548587015201920191610d00565b60ff191683525050811515909102019150565b60405190610d4182610bd7565b565b6001600160401b03811161069f57601f01601f191660200190565b60405190610d6b82610c0d565b60008252565b602081519101519060208110610d85575090565b6000199060200360031b1b1690565b610e56610ef594989593969297988260409586519a8b610dba60209c8d83019384610bb0565b039b610dce601f199d8e8101835282610c43565b519020928115610efc57610e3491610dfe8d8d610df28c5194859283019687610bb0565b03908101835282610c43565b5190205b87518b810194855260208501919091526001600160a01b03909216604084015281606084015b038b8101835282610c43565b51902098610e4a85519384928a84019687610c64565b03888101835282610c43565b51902095610e93610ea18351610e7d81610e718a8201610cb7565b038a8101835282610c43565b84518881018b8152610e93908290602001610e28565b610e9b610d5e565b9161171e565b96610eba610eb5610eb0610d5e565b6117ca565b610d71565b96610df288865196610edd88610ed1868201610cb7565b038681018a5289610c43565b51958693840160209093929193604081019481520152565b9293929190565b5050610e346000610e02565b3d15610f33573d90610f1982610d43565b91610f276040519384610c43565b82523d6000602084013e565b606090565b81601f82011215610122578051610f4e81610d43565b92610f5c6040519485610c43565b81845260208284010111610122576103679160208085019101610154565b91606083830312610122578251610f9081610278565b926020810151610f9f81610278565b9260408201516001600160401b038111610122576103679201610f38565b929192610fc982610d43565b91610fd76040519384610c43565b829481845281830111610122578281602093846000960137010152565b90601f8211611001575050565b6001916000906001600052600080516020611942833981519152906020601f850160051c8301941061104e575b601f0160051c01915b8281106110445750505050565b8181558301611037565b909250829061102e565b601f8111611064575050565b6000906002600052600080516020611922833981519152906020601f850160051c830194106110ae575b601f0160051c01915b8281106110a357505050565b818155600101611097565b909250829061108e565b601f81116110c4575050565b60009060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b906020601f850160051c83019410611120575b601f0160051c01915b82811061111557505050565b818155600101611109565b9092508290611100565b601f8111611136575050565b60009060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b906020601f850160051c83019410611192575b601f0160051c01915b82811061118757505050565b81815560010161117b565b9092508290611172565b9081516001600160401b03811161069f576111c1816111bc600254610c7d565b611058565b602080601f83116001146111f8575081906111f3939460009261061e5750508160011b916000199060031b1c19161790565b600255565b90601f19831694611219600260005260008051602061192283398151915290565b926000905b87821061125657505083600195961061123d575b505050811b01600255565b015160001960f88460031b161c19169055388080611232565b8060018596829496860151815501950193019061121e565b9081516001600160401b03811161069f5761128e816111bc600254610c7d565b602080601f83116001146112c0575081906111f3939460009261061e5750508160011b916000199060031b1c19161790565b90601f198316946112e1600260005260008051602061192283398151915290565b926000905b87821061130457505083600195961061123d57505050811b01600255565b806001859682949686015181550195019301906112e6565b9081516001600160401b03811161069f576113418161133c600454610c7d565b61112a565b602080601f831160011461137857508190611373939460009261061e5750508160011b916000199060031b1c19161790565b600455565b90601f198316946113ab60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90565b926000905b8782106113e85750508360019596106113cf575b505050811b01600455565b015160001960f88460031b161c191690553880806113c4565b806001859682949686015181550195019301906113b0565b9081519182516001600160401b03811161069f57600190611425816105da8454610c7d565b602094856001601f84111461146a5750816020949392610d4196976114609360009261061e5750508160011b916000199060031b1c19161790565b90555b015161126e565b60016000529590601f198316600080516020611942833981519152976000905b8282106114cf5750509684939192602096959383610d41999a106114b6575b505050811b019055611463565b015160001960f88460031b161c191690553880806114a9565b838501518a5598860198938401939081019061148a565b80518051906001600160401b03821161069f5761150d82611508600354610c7d565b6110b8565b602090816001601f851114611551575082602093610d4195936115469360009261061e5750508160011b916000199060031b1c19161790565b6003555b015161131c565b60036000529190601f1984167fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b936000905b8282106115c7575050926001928592602096610d419896106115ae575b505050811b0160035561154a565b015160001960f88460031b161c191690553880806115a0565b80600186978294978701518155019601940190611583565b60405190600082600254916115f383610c7d565b8083529260209060019081811690811561166d575060011461161e575b5050610d4192500383610c43565b9150926002600052600080516020611922833981519152936000925b8284106116555750610d419450505081016020013880611610565b8554888501830152948501948794509281019261163a565b91505060209250610d4194915060ff191682840152151560051b8201013880611610565b604051906000826001916001546116a781610c7d565b808452936020916001811690811561166d57506001146116cf575050610d4192500383610c43565b9150926001600052600080516020611942833981519152936000925b8284106117065750610d419450505081016020013880611610565b855488850183015294850194879450928101926116eb565b610df261177960009493859460405193849161176961175660208501986117458a60049052565b6080604087015260a0860190610177565b601f199586868303016060870152610177565b9084848303016080850152610177565b51906006600160981b015afa61178d610f08565b90156117965790565b60405162461bcd60e51b815260206004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152606490fd5b600080916040516117f18161079c6020820194602086526040808401526060830190610177565b51906001600160981b015afa611805610f08565b901561180e5790565b60405162461bcd60e51b81526020600482015260136024820152721c985b991bdb509e5d195cce8819985a5b1959606a1b6044820152606490fd5b6000546001600160a01b0316330361185d57565b60405163118cdaa760e01b8152336004820152602490fd5b919091604081840312610122578051926001600160401b039384811161012257816118a1918401610f38565b936020830151908111610122576103679201610f38565b60405191602083019182526040830152604082526118d582610bf2565b905190206001600160a01b031690565b634e487b7160e01b600052601160045260246000fd5b9190820180921161190857565b6118e5565b6401000003d019908103919082116119085756fe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5aceb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6a2646970667358221220840ea7a3493ef1e729a7600b0f3f12cc80707bf5e06be7e1b1aa975265aa1d8264736f6c63430008180033";

type CustomTokenAuthorityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomTokenAuthorityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomTokenAuthority__factory extends ContractFactory {
  constructor(...args: CustomTokenAuthorityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _initialOwner: AddressLike,
    _opinionMaker: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _initialOwner,
      _opinionMaker,
      overrides || {}
    );
  }
  override deploy(
    _initialOwner: AddressLike,
    _opinionMaker: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _initialOwner,
      _opinionMaker,
      overrides || {}
    ) as Promise<
      CustomTokenAuthority & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CustomTokenAuthority__factory {
    return super.connect(runner) as CustomTokenAuthority__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomTokenAuthorityInterface {
    return new Interface(_abi) as CustomTokenAuthorityInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CustomTokenAuthority {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CustomTokenAuthority;
  }
}
